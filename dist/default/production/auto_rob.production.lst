

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 16 16:15:05 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1778
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1778 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0097                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009A                     	;# 
   108     009B                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     0111                     	;# 
   117     0112                     	;# 
   118     0113                     	;# 
   119     0114                     	;# 
   120     0115                     	;# 
   121     0116                     	;# 
   122     0117                     	;# 
   123     0118                     	;# 
   124     0119                     	;# 
   125     011A                     	;# 
   126     011B                     	;# 
   127     011C                     	;# 
   128     011D                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     018E                     	;# 
   132     0191                     	;# 
   133     0191                     	;# 
   134     0192                     	;# 
   135     0193                     	;# 
   136     0193                     	;# 
   137     0194                     	;# 
   138     0195                     	;# 
   139     0196                     	;# 
   140     0197                     	;# 
   141     0199                     	;# 
   142     0199                     	;# 
   143     0199                     	;# 
   144     019A                     	;# 
   145     019A                     	;# 
   146     019A                     	;# 
   147     019B                     	;# 
   148     019B                     	;# 
   149     019B                     	;# 
   150     019B                     	;# 
   151     019B                     	;# 
   152     019C                     	;# 
   153     019C                     	;# 
   154     019C                     	;# 
   155     019D                     	;# 
   156     019D                     	;# 
   157     019D                     	;# 
   158     019E                     	;# 
   159     019E                     	;# 
   160     019E                     	;# 
   161     019F                     	;# 
   162     019F                     	;# 
   163     019F                     	;# 
   164     019F                     	;# 
   165     019F                     	;# 
   166     020C                     	;# 
   167     020D                     	;# 
   168     020E                     	;# 
   169     0210                     	;# 
   170     0211                     	;# 
   171     0211                     	;# 
   172     0212                     	;# 
   173     0212                     	;# 
   174     0213                     	;# 
   175     0213                     	;# 
   176     0214                     	;# 
   177     0214                     	;# 
   178     0215                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0216                     	;# 
   183     0216                     	;# 
   184     0217                     	;# 
   185     0217                     	;# 
   186     021B                     	;# 
   187     021C                     	;# 
   188     021D                     	;# 
   189     021E                     	;# 
   190     021F                     	;# 
   191     028C                     	;# 
   192     028D                     	;# 
   193     028E                     	;# 
   194     0291                     	;# 
   195     0291                     	;# 
   196     0292                     	;# 
   197     0293                     	;# 
   198     0294                     	;# 
   199     0295                     	;# 
   200     0295                     	;# 
   201     0296                     	;# 
   202     0297                     	;# 
   203     0298                     	;# 
   204     0299                     	;# 
   205     0299                     	;# 
   206     029A                     	;# 
   207     029B                     	;# 
   208     029C                     	;# 
   209     029E                     	;# 
   210     029F                     	;# 
   211     030C                     	;# 
   212     030D                     	;# 
   213     030E                     	;# 
   214     0315                     	;# 
   215     0316                     	;# 
   216     0317                     	;# 
   217     0318                     	;# 
   218     0319                     	;# 
   219     031B                     	;# 
   220     031C                     	;# 
   221     031D                     	;# 
   222     031E                     	;# 
   223     031F                     	;# 
   224     038C                     	;# 
   225     038D                     	;# 
   226     038E                     	;# 
   227     0390                     	;# 
   228     0391                     	;# 
   229     0392                     	;# 
   230     0393                     	;# 
   231     0394                     	;# 
   232     0395                     	;# 
   233     0396                     	;# 
   234     0397                     	;# 
   235     0398                     	;# 
   236     0399                     	;# 
   237     039D                     	;# 
   238     039E                     	;# 
   239     039F                     	;# 
   240     040D                     	;# 
   241     040F                     	;# 
   242     040F                     	;# 
   243     0410                     	;# 
   244     0411                     	;# 
   245     0412                     	;# 
   246     0413                     	;# 
   247     0413                     	;# 
   248     0414                     	;# 
   249     0414                     	;# 
   250     0415                     	;# 
   251     0416                     	;# 
   252     0417                     	;# 
   253     0418                     	;# 
   254     041A                     	;# 
   255     041A                     	;# 
   256     041B                     	;# 
   257     041B                     	;# 
   258     041C                     	;# 
   259     041D                     	;# 
   260     041E                     	;# 
   261     041F                     	;# 
   262     048E                     	;# 
   263     048E                     	;# 
   264     048F                     	;# 
   265     0490                     	;# 
   266     0491                     	;# 
   267     0492                     	;# 
   268     0493                     	;# 
   269     0493                     	;# 
   270     0494                     	;# 
   271     0494                     	;# 
   272     0495                     	;# 
   273     0496                     	;# 
   274     0497                     	;# 
   275     0498                     	;# 
   276     049A                     	;# 
   277     049A                     	;# 
   278     049B                     	;# 
   279     049B                     	;# 
   280     049C                     	;# 
   281     049D                     	;# 
   282     049E                     	;# 
   283     049F                     	;# 
   284     050F                     	;# 
   285     0510                     	;# 
   286     0511                     	;# 
   287     0512                     	;# 
   288     0513                     	;# 
   289     0514                     	;# 
   290     0515                     	;# 
   291     0516                     	;# 
   292     0517                     	;# 
   293     0518                     	;# 
   294     0519                     	;# 
   295     051A                     	;# 
   296     058D                     	;# 
   297     058E                     	;# 
   298     058F                     	;# 
   299     058F                     	;# 
   300     058F                     	;# 
   301     0590                     	;# 
   302     0590                     	;# 
   303     0591                     	;# 
   304     0592                     	;# 
   305     0592                     	;# 
   306     0592                     	;# 
   307     0593                     	;# 
   308     0593                     	;# 
   309     0594                     	;# 
   310     0595                     	;# 
   311     0595                     	;# 
   312     0596                     	;# 
   313     0597                     	;# 
   314     0597                     	;# 
   315     0598                     	;# 
   316     0599                     	;# 
   317     0599                     	;# 
   318     0599                     	;# 
   319     059A                     	;# 
   320     059A                     	;# 
   321     059E                     	;# 
   322     059F                     	;# 
   323     059F                     	;# 
   324     0614                     	;# 
   325     0614                     	;# 
   326     0615                     	;# 
   327     0616                     	;# 
   328     0617                     	;# 
   329     0617                     	;# 
   330     0618                     	;# 
   331     0619                     	;# 
   332     061A                     	;# 
   333     061A                     	;# 
   334     061B                     	;# 
   335     061C                     	;# 
   336     068D                     	;# 
   337     068E                     	;# 
   338     068F                     	;# 
   339     0690                     	;# 
   340     0691                     	;# 
   341     0692                     	;# 
   342     0693                     	;# 
   343     0694                     	;# 
   344     0695                     	;# 
   345     0696                     	;# 
   346     0697                     	;# 
   347     0698                     	;# 
   348     0699                     	;# 
   349     069A                     	;# 
   350     069B                     	;# 
   351     069C                     	;# 
   352     069D                     	;# 
   353     069E                     	;# 
   354     069F                     	;# 
   355     070D                     	;# 
   356     070E                     	;# 
   357     070F                     	;# 
   358     0710                     	;# 
   359     0711                     	;# 
   360     0712                     	;# 
   361     0713                     	;# 
   362     0714                     	;# 
   363     0715                     	;# 
   364     0716                     	;# 
   365     0717                     	;# 
   366     0718                     	;# 
   367     0719                     	;# 
   368     071A                     	;# 
   369     071B                     	;# 
   370     071C                     	;# 
   371     071D                     	;# 
   372     071E                     	;# 
   373     071F                     	;# 
   374     078E                     	;# 
   375     078F                     	;# 
   376     0790                     	;# 
   377     0791                     	;# 
   378     0792                     	;# 
   379     0793                     	;# 
   380     0794                     	;# 
   381     0795                     	;# 
   382     0796                     	;# 
   383     0797                     	;# 
   384     0798                     	;# 
   385     0799                     	;# 
   386     079A                     	;# 
   387     079B                     	;# 
   388     079C                     	;# 
   389     079D                     	;# 
   390     079E                     	;# 
   391     079F                     	;# 
   392     080D                     	;# 
   393     080E                     	;# 
   394     080F                     	;# 
   395     0810                     	;# 
   396     0811                     	;# 
   397     0812                     	;# 
   398     0813                     	;# 
   399     0814                     	;# 
   400     0815                     	;# 
   401     0816                     	;# 
   402     0817                     	;# 
   403     0818                     	;# 
   404     0819                     	;# 
   405     081A                     	;# 
   406     081B                     	;# 
   407     081C                     	;# 
   408     081D                     	;# 
   409     081E                     	;# 
   410     081F                     	;# 
   411     090C                     	;# 
   412     090D                     	;# 
   413     090E                     	;# 
   414     090F                     	;# 
   415     0910                     	;# 
   416     0911                     	;# 
   417     0912                     	;# 
   418     0913                     	;# 
   419     0914                     	;# 
   420     0915                     	;# 
   421     0916                     	;# 
   422     0917                     	;# 
   423     0D8E                     	;# 
   424     0D8F                     	;# 
   425     0D90                     	;# 
   426     0D91                     	;# 
   427     0D91                     	;# 
   428     0D92                     	;# 
   429     0D93                     	;# 
   430     0D93                     	;# 
   431     0D94                     	;# 
   432     0D95                     	;# 
   433     0D95                     	;# 
   434     0D96                     	;# 
   435     0D97                     	;# 
   436     0D97                     	;# 
   437     0D98                     	;# 
   438     0D99                     	;# 
   439     0D99                     	;# 
   440     0D9A                     	;# 
   441     0D9B                     	;# 
   442     0D9C                     	;# 
   443     0D9C                     	;# 
   444     0D9D                     	;# 
   445     0D9D                     	;# 
   446     0D9E                     	;# 
   447     0D9F                     	;# 
   448     0DA0                     	;# 
   449     0DA1                     	;# 
   450     0DA1                     	;# 
   451     0DA2                     	;# 
   452     0DA3                     	;# 
   453     0DA3                     	;# 
   454     0DA4                     	;# 
   455     0DA5                     	;# 
   456     0DA5                     	;# 
   457     0DA6                     	;# 
   458     0DA7                     	;# 
   459     0DA7                     	;# 
   460     0DA8                     	;# 
   461     0DA9                     	;# 
   462     0DA9                     	;# 
   463     0DAA                     	;# 
   464     0DAB                     	;# 
   465     0DAC                     	;# 
   466     0DAC                     	;# 
   467     0DAD                     	;# 
   468     0DAD                     	;# 
   469     0DAE                     	;# 
   470     0DAF                     	;# 
   471     0DB0                     	;# 
   472     0DB1                     	;# 
   473     0DB1                     	;# 
   474     0DB2                     	;# 
   475     0DB3                     	;# 
   476     0DB3                     	;# 
   477     0DB4                     	;# 
   478     0DB5                     	;# 
   479     0DB5                     	;# 
   480     0DB6                     	;# 
   481     0DB7                     	;# 
   482     0DB7                     	;# 
   483     0DB8                     	;# 
   484     0DB9                     	;# 
   485     0DB9                     	;# 
   486     0DBA                     	;# 
   487     0DBB                     	;# 
   488     0DBC                     	;# 
   489     0DBC                     	;# 
   490     0DBD                     	;# 
   491     0DBD                     	;# 
   492     0DBE                     	;# 
   493     0DBF                     	;# 
   494     0DC0                     	;# 
   495     0E0C                     	;# 
   496     0E0D                     	;# 
   497     0E0E                     	;# 
   498     0E0F                     	;# 
   499     0E10                     	;# 
   500     0E11                     	;# 
   501     0E12                     	;# 
   502     0E13                     	;# 
   503     0E14                     	;# 
   504     0E15                     	;# 
   505     0E15                     	;# 
   506     0E15                     	;# 
   507     0E16                     	;# 
   508     0E16                     	;# 
   509     0E16                     	;# 
   510     0E17                     	;# 
   511     0E17                     	;# 
   512     0E17                     	;# 
   513     0E18                     	;# 
   514     0E18                     	;# 
   515     0E18                     	;# 
   516     0E19                     	;# 
   517     0E1A                     	;# 
   518     0E1B                     	;# 
   519     0E1D                     	;# 
   520     0E1E                     	;# 
   521     0E1F                     	;# 
   522     0E21                     	;# 
   523     0E22                     	;# 
   524     0E23                     	;# 
   525     0E24                     	;# 
   526     0E25                     	;# 
   527     0E26                     	;# 
   528     0E27                     	;# 
   529     0E28                     	;# 
   530     0E29                     	;# 
   531     0E2D                     	;# 
   532     0E2E                     	;# 
   533     0E2F                     	;# 
   534     0E30                     	;# 
   535     0E31                     	;# 
   536     0E32                     	;# 
   537     0E35                     	;# 
   538     0E36                     	;# 
   539     0E37                     	;# 
   540     0E38                     	;# 
   541     0E39                     	;# 
   542     0E3A                     	;# 
   543     0E3B                     	;# 
   544     0E3C                     	;# 
   545     0E3D                     	;# 
   546     0E3E                     	;# 
   547     0E90                     	;# 
   548     0E91                     	;# 
   549     0E92                     	;# 
   550     0E93                     	;# 
   551     0E94                     	;# 
   552     0E95                     	;# 
   553     0E96                     	;# 
   554     0E97                     	;# 
   555     0E98                     	;# 
   556     0E99                     	;# 
   557     0E9A                     	;# 
   558     0E9B                     	;# 
   559     0E9C                     	;# 
   560     0E9D                     	;# 
   561     0E9E                     	;# 
   562     0E9F                     	;# 
   563     0EA0                     	;# 
   564     0EA1                     	;# 
   565     0EA2                     	;# 
   566     0EA3                     	;# 
   567     0EA4                     	;# 
   568     0EA5                     	;# 
   569     0EA6                     	;# 
   570     0EA7                     	;# 
   571     0F0F                     	;# 
   572     0F10                     	;# 
   573     0F11                     	;# 
   574     0F12                     	;# 
   575     0F13                     	;# 
   576     0F14                     	;# 
   577     0F15                     	;# 
   578     0F16                     	;# 
   579     0F17                     	;# 
   580     0F18                     	;# 
   581     0F19                     	;# 
   582     0F1A                     	;# 
   583     0F1B                     	;# 
   584     0F1C                     	;# 
   585     0F1D                     	;# 
   586     0F1E                     	;# 
   587     0F1F                     	;# 
   588     0F20                     	;# 
   589     0F21                     	;# 
   590     0F22                     	;# 
   591     0F23                     	;# 
   592     0F24                     	;# 
   593     0F25                     	;# 
   594     0F26                     	;# 
   595     0F27                     	;# 
   596     0F28                     	;# 
   597     0F29                     	;# 
   598     0F2A                     	;# 
   599     0F2B                     	;# 
   600     0F2C                     	;# 
   601     0F2D                     	;# 
   602     0F2E                     	;# 
   603     0F2F                     	;# 
   604     0F30                     	;# 
   605     0F31                     	;# 
   606     0F32                     	;# 
   607     0F33                     	;# 
   608     0F34                     	;# 
   609     0F35                     	;# 
   610     0F36                     	;# 
   611     0F37                     	;# 
   612     0FE4                     	;# 
   613     0FE5                     	;# 
   614     0FE6                     	;# 
   615     0FE7                     	;# 
   616     0FE8                     	;# 
   617     0FE9                     	;# 
   618     0FEA                     	;# 
   619     0FEB                     	;# 
   620     0FED                     	;# 
   621     0FEE                     	;# 
   622     0FEF                     	;# 
   623                           
   624                           	psect	idataBANK0
   625     039C                     __pidataBANK0:
   626                           
   627                           ;initializer for main@F12360
   628     039C  3450               	retlw	80
   629     039D  346C               	retlw	108
   630     039E  3465               	retlw	101
   631     039F  3461               	retlw	97
   632     03A0  3473               	retlw	115
   633     03A1  3465               	retlw	101
   634     03A2  3420               	retlw	32
   635     03A3  3465               	retlw	101
   636     03A4  346E               	retlw	110
   637     03A5  3474               	retlw	116
   638     03A6  3465               	retlw	101
   639     03A7  3472               	retlw	114
   640     03A8  3420               	retlw	32
   641     03A9  3461               	retlw	97
   642     03AA  3420               	retlw	32
   643     03AB  3473               	retlw	115
   644     03AC  3474               	retlw	116
   645     03AD  3472               	retlw	114
   646     03AE  3469               	retlw	105
   647     03AF  346E               	retlw	110
   648     03B0  3467               	retlw	103
   649     03B1  340D               	retlw	13
   650     03B2  340A               	retlw	10
   651     03B3  3400               	retlw	0
   652     000C                     _PORTAbits	set	12
   653     000B                     _INTCONbits	set	11
   654     0011                     _PIR1bits	set	17
   655     0091                     _PIE1bits	set	145
   656     0097                     _OPTION_REGbits	set	151
   657     008E                     _TRISC	set	142
   658     008D                     _TRISB	set	141
   659     008C                     _TRISA	set	140
   660     009B                     _OSCCON	set	155
   661     010E                     _LATCbits	set	270
   662     010C                     _LATAbits	set	268
   663     010E                     _LATC	set	270
   664     010D                     _LATB	set	269
   665     010C                     _LATA	set	268
   666     0199                     _RC1REG	set	409
   667     019D                     _RC1STAbits	set	413
   668     019A                     _TX1REG	set	410
   669     019C                     _SP1BRGH	set	412
   670     019B                     _SP1BRGL	set	411
   671     019F                     _BAUD1CON	set	415
   672     019D                     _RC1STA	set	413
   673     019E                     _TX1STA	set	414
   674     018E                     _ANSELC	set	398
   675     018D                     _ANSELB	set	397
   676     018C                     _ANSELA	set	396
   677     020E                     _WPUC	set	526
   678     020D                     _WPUB	set	525
   679     020C                     _WPUA	set	524
   680     0291                     _CCPR1L	set	657
   681     0292                     _CCPR1H	set	658
   682     029E                     _CCPTMRS1bits	set	670
   683     0293                     _CCP1CON	set	659
   684     029F                     _CCPTMRS2bits	set	671
   685     048F                     _ADRESH	set	1167
   686     048E                     _ADRESL	set	1166
   687     0490                     _ADCON0bits	set	1168
   688     0491                     _ADCON1	set	1169
   689     0490                     _ADCON0	set	1168
   690     0494                     _T2PR	set	1172
   691     0495                     _T2CON	set	1173
   692     0497                     _T2CLKCONbits	set	1175
   693     061A                     _PWM9DCL	set	1562
   694     061B                     _PWM9DCH	set	1563
   695     061C                     _PWM9CON	set	1564
   696     0617                     _PWM4DCL	set	1559
   697     0618                     _PWM4DCH	set	1560
   698     0619                     _PWM4CON	set	1561
   699     0614                     _PWM3DCL	set	1556
   700     0615                     _PWM3DCH	set	1557
   701     0616                     _PWM3CON	set	1558
   702     0DAF                     _PWM6LDCONbits	set	3503
   703     0D9F                     _PWM5LDCONbits	set	3487
   704     0DA9                     _PWM6TMRL	set	3497
   705     0DAA                     _PWM6TMRH	set	3498
   706     0DA7                     _PWM6OFL	set	3495
   707     0DA8                     _PWM6OFH	set	3496
   708     0DA5                     _PWM6PRL	set	3493
   709     0DA6                     _PWM6PRH	set	3494
   710     0DA3                     _PWM6DCL	set	3491
   711     0DA4                     _PWM6DCH	set	3492
   712     0DA1                     _PWM6PHL	set	3489
   713     0DA2                     _PWM6PHH	set	3490
   714     0DB0                     _PWM6OFCON	set	3504
   715     0DAF                     _PWM6LDCON	set	3503
   716     0DAE                     _PWM6CLKCON	set	3502
   717     0DAB                     _PWM6CON	set	3499
   718     0D99                     _PWM5TMRL	set	3481
   719     0D9A                     _PWM5TMRH	set	3482
   720     0D97                     _PWM5OFL	set	3479
   721     0D98                     _PWM5OFH	set	3480
   722     0D95                     _PWM5PRL	set	3477
   723     0D96                     _PWM5PRH	set	3478
   724     0D93                     _PWM5DCL	set	3475
   725     0D94                     _PWM5DCH	set	3476
   726     0D91                     _PWM5PHL	set	3473
   727     0D92                     _PWM5PHH	set	3474
   728     0DA0                     _PWM5OFCON	set	3488
   729     0D9F                     _PWM5LDCON	set	3487
   730     0D9E                     _PWM5CLKCON	set	3486
   731     0D9B                     _PWM5CON	set	3483
   732     0E3D                     _RXPPS	set	3645
   733     0EA2                     _RC2PPS	set	3746
   734     0EA0                     _RC0PPS	set	3744
   735     0E96                     _RA6PPS	set	3734
   736     0E94                     _RA4PPS	set	3732
   737     0E9C                     _RB4PPS	set	3740
   738     0EA4                     _RC4PPS	set	3748
   739     0EA5                     _RC5PPS	set	3749
   740     0EA3                     _RC3PPS	set	3747
   741     0EA1                     _RC1PPS	set	3745
   742     0E97                     _RA7PPS	set	3735
   743     0E95                     _RA5PPS	set	3733
   744                           
   745                           	psect	cinit
   746     001F                     start_initialization:	
   747                           ; #config settings
   748                           
   749     001F                     __initialization:
   750                           
   751                           ; Initialize objects allocated to BANK0
   752     001F  309C               	movlw	low __pidataBANK0
   753     0020  0084               	movwf	4
   754     0021  3083               	movlw	(high __pidataBANK0)| (0+128)
   755     0022  0085               	movwf	5
   756     0023  303C               	movlw	low __pdataBANK0
   757     0024  0086               	movwf	6
   758     0025  3000               	movlw	high __pdataBANK0
   759     0026  0087               	movwf	7
   760     0027  3018               	movlw	24
   761     0028  3183  23CC  3180   	fcall	init_ram
   762                           
   763                           ; Clear objects allocated to COMMON
   764     002B  01FC               	clrf	__pbssCOMMON& (0+127)
   765     002C                     end_of_initialization:	
   766                           ;End of C runtime variable initialization code
   767                           
   768     002C                     __end_of__initialization:
   769     002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   770     002D  0020               	movlb	0
   771     002E  3180  2830         	ljmp	_main	;jump to C main() function
   772                           
   773                           	psect	bssCOMMON
   774     007C                     __pbssCOMMON:
   775     007C                     _g_ReadData:
   776     007C                     	ds	1
   777                           
   778                           	psect	dataBANK0
   779     003C                     __pdataBANK0:
   780     003C                     main@F12360:
   781     003C                     	ds	24
   782                           
   783                           	psect	inittext
   784     03CC                     init_ram:
   785     03CC  00FE               	movwf	btemp
   786     03CD                     initloop:
   787     03CD  0012               	moviw fsr0++
   788     03CE  001E               	movwi fsr1++
   789     03CF  0BFE               	decfsz	btemp,f
   790     03D0  2BCD               	goto	initloop
   791     03D1  3400               	retlw	0
   792                           
   793                           	psect	cstackCOMMON
   794     0070                     __pcstackCOMMON:
   795     0070                     ?_LEDON:
   796     0070                     ??_LEDON:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ?_LEDOFF:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ??_LEDOFF:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ?_main:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ?_ISR:	
   809                           ; 1 bytes @ 0x0
   810                           
   811     0070                     ??_ISR:	
   812                           ; 1 bytes @ 0x0
   813                           
   814     0070                     ?_switchC_Read:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     ?_PushSwitchRead:	
   818                           ; 2 bytes @ 0x0
   819                           
   820     0070                     ?___wmul:	
   821                           ; 2 bytes @ 0x0
   822                           
   823     0070                     ___wmul@multiplier:	
   824                           ; 2 bytes @ 0x0
   825                           
   826                           
   827                           ; 2 bytes @ 0x0
   828     0070                     	ds	2
   829     0072                     ??_switchC_Read:
   830     0072                     ??_PushSwitchRead:	
   831                           ; 1 bytes @ 0x2
   832                           
   833     0072                     ___wmul@multiplicand:	
   834                           ; 1 bytes @ 0x2
   835                           
   836                           
   837                           ; 2 bytes @ 0x2
   838     0072                     	ds	2
   839     0074                     ??___wmul:
   840     0074                     ___wmul@product:	
   841                           ; 1 bytes @ 0x4
   842                           
   843                           
   844                           ; 2 bytes @ 0x4
   845     0074                     	ds	2
   846     0076                     ?_motorA:
   847     0076                     ?_motorB:	
   848                           ; 1 bytes @ 0x6
   849                           
   850     0076                     ?_motorD:	
   851                           ; 1 bytes @ 0x6
   852                           
   853     0076                     ?_motorC:	
   854                           ; 1 bytes @ 0x6
   855                           
   856     0076                     motorA@duty:	
   857                           ; 1 bytes @ 0x6
   858                           
   859     0076                     motorB@duty:	
   860                           ; 2 bytes @ 0x6
   861                           
   862     0076                     motorC@duty:	
   863                           ; 2 bytes @ 0x6
   864                           
   865     0076                     motorD@duty:	
   866                           ; 2 bytes @ 0x6
   867                           
   868                           
   869                           ; 2 bytes @ 0x6
   870     0076                     	ds	2
   871     0078                     ??_motorA:
   872     0078                     ??_motorB:	
   873                           ; 1 bytes @ 0x8
   874                           
   875     0078                     ??_motorD:	
   876                           ; 1 bytes @ 0x8
   877                           
   878     0078                     ??_motorC:	
   879                           ; 1 bytes @ 0x8
   880                           
   881                           
   882                           ; 1 bytes @ 0x8
   883     0078                     	ds	2
   884     007A                     ??_main:
   885                           
   886                           ; 1 bytes @ 0xA
   887     007A                     	ds	2
   888                           
   889                           	psect	cstackBANK0
   890     0020                     __pcstackBANK0:
   891     0020                     main@str:
   892                           
   893                           ; 24 bytes @ 0x0
   894     0020                     	ds	24
   895     0038                     main@i:
   896                           
   897                           ; 2 bytes @ 0x18
   898     0038                     	ds	2
   899     003A                     main@i_565:
   900                           
   901                           ; 2 bytes @ 0x1A
   902     003A                     	ds	2
   903                           
   904                           	psect	maintext
   905     0030                     __pmaintext:	
   906 ;;
   907 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   908 ;;
   909 ;; *************** function _main *****************
   910 ;; Defined at:
   911 ;;		line 65 in file "main.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  i               2   26[BANK0 ] int 
   916 ;;  i               2   24[BANK0 ] int 
   917 ;;  str            24    0[BANK0 ] unsigned char [24]
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : B1F/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   928 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   930 ;;      Totals:         2      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   931 ;;Total ram usage:       30 bytes
   932 ;; Hardware stack levels required when called: 3
   933 ;; This function calls:
   934 ;;		_LEDOFF
   935 ;;		_LEDON
   936 ;;		_PushSwitchRead
   937 ;;		_motorA
   938 ;;		_motorB
   939 ;;		_motorC
   940 ;;		_motorD
   941 ;;		_switchC_Read
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947     0030                     _main:	
   948                           ;psect for function _main
   949                           
   950     0030                     l1510:	
   951                           ;incstack = 0
   952                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   953                           
   954                           
   955                           ;main.c: 67:     OSCCON = 0b11110000;
   956     0030  30F0               	movlw	240
   957     0031  0021               	movlb	1	; select bank1
   958     0032  009B               	movwf	27	;volatile
   959     0033                     l1512:
   960                           
   961                           ;main.c: 70:     ANSELA = 0x00;
   962     0033  0023               	movlb	3	; select bank3
   963     0034  018C               	clrf	12	;volatile
   964     0035                     l1514:
   965                           
   966                           ;main.c: 71:     ANSELB = 0b00001111;
   967     0035  300F               	movlw	15
   968     0036  008D               	movwf	13	;volatile
   969                           
   970                           ;main.c: 72:     ANSELC = 0x00;
   971     0037  018E               	clrf	14	;volatile
   972     0038                     l1516:
   973                           
   974                           ;main.c: 73:     TRISA = 0b00001111;
   975     0038  300F               	movlw	15
   976     0039  0021               	movlb	1	; select bank1
   977     003A  008C               	movwf	12	;volatile
   978     003B                     l1518:
   979                           
   980                           ;main.c: 74:     TRISB = 0b00101111;
   981     003B  302F               	movlw	47
   982     003C  008D               	movwf	13	;volatile
   983                           
   984                           ;main.c: 75:     TRISC = 0x00;
   985     003D  018E               	clrf	14	;volatile
   986                           
   987                           ;main.c: 76:     LATA = 0x00;
   988     003E  0022               	movlb	2	; select bank2
   989     003F  018C               	clrf	12	;volatile
   990                           
   991                           ;main.c: 77:     LATB = 0x00;
   992     0040  018D               	clrf	13	;volatile
   993                           
   994                           ;main.c: 78:     LATC = 0x00;
   995     0041  018E               	clrf	14	;volatile
   996     0042                     l1520:
   997                           
   998                           ;main.c: 81:     OPTION_REGbits.nWPUEN = 0;
   999     0042  0021               	movlb	1	; select bank1
  1000     0043  1397               	bcf	23,7	;volatile
  1001     0044                     l1522:
  1002                           
  1003                           ;main.c: 82:     WPUA = 0b00001111;
  1004     0044  300F               	movlw	15
  1005     0045  0024               	movlb	4	; select bank4
  1006     0046  008C               	movwf	12	;volatile
  1007     0047                     l1524:
  1008                           
  1009                           ;main.c: 83:     WPUB = 0x00;
  1010     0047  018D               	clrf	13	;volatile
  1011     0048                     l1526:
  1012                           
  1013                           ;main.c: 84:     WPUC = 0x00;
  1014     0048  018E               	clrf	14	;volatile
  1015     0049                     l1528:
  1016                           
  1017                           ;main.c: 87:     T2CLKCONbits.CS = 0b0001;
  1018     0049  0029               	movlb	9	; select bank9
  1019     004A  0817               	movf	23,w	;volatile
  1020     004B  39F0               	andlw	-16
  1021     004C  3801               	iorlw	1
  1022     004D  0097               	movwf	23	;volatile
  1023     004E                     l1530:
  1024                           
  1025                           ;main.c: 88:     T2CON = 0b10000000;
  1026     004E  3080               	movlw	128
  1027     004F  0095               	movwf	21	;volatile
  1028     0050                     l1532:
  1029                           
  1030                           ;main.c: 89:     T2PR = 0xFF;
  1031     0050  30FF               	movlw	255
  1032     0051  0094               	movwf	20	;volatile
  1033     0052                     l1534:
  1034                           
  1035                           ;main.c: 92:     RA5PPS = 0b011001;
  1036     0052  3019               	movlw	25
  1037     0053  003D               	movlb	29	; select bank29
  1038     0054  0095               	movwf	21	;volatile
  1039     0055                     l1536:
  1040                           
  1041                           ;main.c: 93:     PWM3CON = 0b10000000;
  1042     0055  3080               	movlw	128
  1043     0056  002C               	movlb	12	; select bank12
  1044     0057  0096               	movwf	22	;volatile
  1045     0058                     l1538:
  1046                           
  1047                           ;main.c: 94:     CCPTMRS2bits.P3TSEL = 0b00;
  1048     0058  30FC               	movlw	-4
  1049     0059  0025               	movlb	5	; select bank5
  1050     005A  059F               	andwf	31,f	;volatile
  1051     005B                     l1540:
  1052                           
  1053                           ;main.c: 95:     PWM3DCH = 0x00;
  1054     005B  002C               	movlb	12	; select bank12
  1055     005C  0195               	clrf	21	;volatile
  1056     005D                     l1542:
  1057                           
  1058                           ;main.c: 96:     PWM3DCL = 0x00;
  1059     005D  0194               	clrf	20	;volatile
  1060     005E                     l1544:
  1061                           
  1062                           ;main.c: 99:     RA7PPS = 0b011010;
  1063     005E  301A               	movlw	26
  1064     005F  003D               	movlb	29	; select bank29
  1065     0060  0097               	movwf	23	;volatile
  1066     0061                     l1546:
  1067                           
  1068                           ;main.c: 100:     PWM4CON = 0b10000000;
  1069     0061  3080               	movlw	128
  1070     0062  002C               	movlb	12	; select bank12
  1071     0063  0099               	movwf	25	;volatile
  1072     0064                     l1548:
  1073                           
  1074                           ;main.c: 101:     CCPTMRS2bits.P4TSEL = 0b00;
  1075     0064  30F3               	movlw	-13
  1076     0065  0025               	movlb	5	; select bank5
  1077     0066  059F               	andwf	31,f	;volatile
  1078     0067                     l1550:
  1079                           
  1080                           ;main.c: 102:     PWM4DCH = 0x00;
  1081     0067  002C               	movlb	12	; select bank12
  1082     0068  0198               	clrf	24	;volatile
  1083     0069                     l1552:
  1084                           
  1085                           ;main.c: 103:     PWM4DCL = 0x00;
  1086     0069  0197               	clrf	23	;volatile
  1087     006A                     l1554:
  1088                           
  1089                           ;main.c: 106:     RC1PPS = 0b011011;
  1090     006A  301B               	movlw	27
  1091     006B  003D               	movlb	29	; select bank29
  1092     006C  00A1               	movwf	33	;volatile
  1093     006D                     l1556:
  1094                           
  1095                           ;main.c: 107:     PWM9CON = 0b10000000;
  1096     006D  3080               	movlw	128
  1097     006E  002C               	movlb	12	; select bank12
  1098     006F  009C               	movwf	28	;volatile
  1099     0070                     l1558:
  1100                           
  1101                           ;main.c: 108:     CCPTMRS2bits.P9TSEL = 0b00;
  1102     0070  30CF               	movlw	-49
  1103     0071  0025               	movlb	5	; select bank5
  1104     0072  059F               	andwf	31,f	;volatile
  1105     0073                     l1560:
  1106                           
  1107                           ;main.c: 109:     PWM9DCH = 0x00;
  1108     0073  002C               	movlb	12	; select bank12
  1109     0074  019B               	clrf	27	;volatile
  1110     0075                     l1562:
  1111                           
  1112                           ;main.c: 110:     PWM9DCL = 0x00;
  1113     0075  019A               	clrf	26	;volatile
  1114     0076                     l1564:
  1115                           
  1116                           ;main.c: 113:     RC3PPS = 0b010101;
  1117     0076  3015               	movlw	21
  1118     0077  003D               	movlb	29	; select bank29
  1119     0078  00A3               	movwf	35	;volatile
  1120     0079                     l1566:
  1121                           
  1122                           ;main.c: 114:     CCP1CON = 0b10011100;
  1123     0079  309C               	movlw	156
  1124     007A  0025               	movlb	5	; select bank5
  1125     007B  0093               	movwf	19	;volatile
  1126     007C                     l1568:
  1127                           
  1128                           ;main.c: 115:     CCPTMRS1bits.C1TSEL = 0b00;
  1129     007C  30FC               	movlw	-4
  1130     007D  059E               	andwf	30,f	;volatile
  1131     007E                     l1570:
  1132                           
  1133                           ;main.c: 116:     CCPR1H = 0x00;
  1134     007E  0192               	clrf	18	;volatile
  1135     007F                     l1572:
  1136                           
  1137                           ;main.c: 117:     CCPR1L = 0x00;
  1138     007F  0191               	clrf	17	;volatile
  1139     0080                     l1574:
  1140                           
  1141                           ;main.c: 120:     RC5PPS = 0b011101;
  1142     0080  301D               	movlw	29
  1143     0081  003D               	movlb	29	; select bank29
  1144     0082  00A5               	movwf	37	;volatile
  1145     0083                     l1576:
  1146                           
  1147                           ;main.c: 121:     PWM5CON = 0b10000000;
  1148     0083  3080               	movlw	128
  1149     0084  003B               	movlb	27	; select bank27
  1150     0085  009B               	movwf	27	;volatile
  1151     0086                     l1578:
  1152                           
  1153                           ;main.c: 122:     PWM5CLKCON = 0b01000000;
  1154     0086  3040               	movlw	64
  1155     0087  009E               	movwf	30	;volatile
  1156     0088                     l1580:
  1157                           
  1158                           ;main.c: 123:     PWM5LDCON = 0x00;
  1159     0088  019F               	clrf	31	;volatile
  1160     0089                     l1582:
  1161                           
  1162                           ;main.c: 124:     PWM5OFCON = 0x00;
  1163     0089  01A0               	clrf	32	;volatile
  1164     008A                     l1584:
  1165                           
  1166                           ;main.c: 125:     PWM5PHH = 0x00;
  1167     008A  0192               	clrf	18	;volatile
  1168     008B                     l1586:
  1169                           
  1170                           ;main.c: 126:     PWM5PHL = 0x00;
  1171     008B  0191               	clrf	17	;volatile
  1172     008C                     l1588:
  1173                           
  1174                           ;main.c: 127:     PWM5DCH = (2899 >> 8) & 0x00FF;
  1175     008C  300B               	movlw	11
  1176     008D  0094               	movwf	20	;volatile
  1177     008E                     l1590:
  1178                           
  1179                           ;main.c: 128:     PWM5DCL = 2899 & 0x00FF;
  1180     008E  3053               	movlw	83
  1181     008F  0093               	movwf	19	;volatile
  1182     0090                     l1592:
  1183                           
  1184                           ;main.c: 129:     PWM5PRH = (39999 >> 8) & 0x00FF;
  1185     0090  309C               	movlw	156
  1186     0091  0096               	movwf	22	;volatile
  1187     0092                     l1594:
  1188                           
  1189                           ;main.c: 130:     PWM5PRL = 39999 & 0x00FF;
  1190     0092  303F               	movlw	63
  1191     0093  0095               	movwf	21	;volatile
  1192     0094                     l1596:
  1193                           
  1194                           ;main.c: 131:     PWM5OFH = 0x00;
  1195     0094  0198               	clrf	24	;volatile
  1196     0095                     l1598:
  1197                           
  1198                           ;main.c: 132:     PWM5OFL = 0x00;
  1199     0095  0197               	clrf	23	;volatile
  1200     0096                     l1600:
  1201                           
  1202                           ;main.c: 133:     PWM5TMRH = 0x00;
  1203     0096  019A               	clrf	26	;volatile
  1204     0097                     l1602:
  1205                           
  1206                           ;main.c: 134:     PWM5TMRL = 0x00;
  1207     0097  0199               	clrf	25	;volatile
  1208     0098                     l1604:
  1209                           
  1210                           ;main.c: 137:     _delay((unsigned long)((500)*(32000000/4000.0)));
  1211     0098  3015               	movlw	21
  1212     0099  00FB               	movwf	??_main+1
  1213     009A  304B               	movlw	75
  1214     009B  00FA               	movwf	??_main
  1215     009C  30BE               	movlw	190
  1216     009D                     u607:
  1217     009D  0B89               	decfsz	9,f
  1218     009E  289D               	goto	u607
  1219     009F  0BFA               	decfsz	??_main,f
  1220     00A0  289D               	goto	u607
  1221     00A1  0BFB               	decfsz	??_main+1,f
  1222     00A2  289D               	goto	u607
  1223     00A3  3200               	nop2
  1224     00A4                     l1606:
  1225                           
  1226                           ;main.c: 138:     RC4PPS = 0b011110;
  1227     00A4  301E               	movlw	30
  1228     00A5  003D               	movlb	29	; select bank29
  1229     00A6  00A4               	movwf	36	;volatile
  1230     00A7                     l1608:
  1231                           
  1232                           ;main.c: 139:     PWM6CON = 0b10000000;
  1233     00A7  3080               	movlw	128
  1234     00A8  003B               	movlb	27	; select bank27
  1235     00A9  00AB               	movwf	43	;volatile
  1236     00AA                     l1610:
  1237                           
  1238                           ;main.c: 140:     PWM6CLKCON = 0b01000000;
  1239     00AA  3040               	movlw	64
  1240     00AB  00AE               	movwf	46	;volatile
  1241     00AC                     l1612:
  1242                           
  1243                           ;main.c: 141:     PWM6LDCON = 0x00;
  1244     00AC  01AF               	clrf	47	;volatile
  1245     00AD                     l1614:
  1246                           
  1247                           ;main.c: 142:     PWM6OFCON = 0x00;
  1248     00AD  01B0               	clrf	48	;volatile
  1249     00AE                     l1616:
  1250                           
  1251                           ;main.c: 143:     PWM6PHH = 0x00;
  1252     00AE  01A2               	clrf	34	;volatile
  1253     00AF                     l1618:
  1254                           
  1255                           ;main.c: 144:     PWM6PHL = 0x00;
  1256     00AF  01A1               	clrf	33	;volatile
  1257     00B0                     l1620:
  1258                           
  1259                           ;main.c: 145:     PWM6DCH = (2999 >> 8) & 0x00FF;
  1260     00B0  300B               	movlw	11
  1261     00B1  00A4               	movwf	36	;volatile
  1262     00B2                     l1622:
  1263                           
  1264                           ;main.c: 146:     PWM6DCL = 2999 & 0x00FF;
  1265     00B2  30B7               	movlw	183
  1266     00B3  00A3               	movwf	35	;volatile
  1267     00B4                     l1624:
  1268                           
  1269                           ;main.c: 147:     PWM6PRH = (39999 >> 8) & 0x00FF;
  1270     00B4  309C               	movlw	156
  1271     00B5  00A6               	movwf	38	;volatile
  1272     00B6                     l1626:
  1273                           
  1274                           ;main.c: 148:     PWM6PRL = 39999 & 0x00FF;
  1275     00B6  303F               	movlw	63
  1276     00B7  00A5               	movwf	37	;volatile
  1277     00B8                     l1628:
  1278                           
  1279                           ;main.c: 149:     PWM6OFH = 0x00;
  1280     00B8  01A8               	clrf	40	;volatile
  1281     00B9                     l1630:
  1282                           
  1283                           ;main.c: 150:     PWM6OFL = 0x00;
  1284     00B9  01A7               	clrf	39	;volatile
  1285     00BA                     l1632:
  1286                           
  1287                           ;main.c: 151:     PWM6TMRH = 0x00;
  1288     00BA  01AA               	clrf	42	;volatile
  1289     00BB                     l1634:
  1290                           
  1291                           ;main.c: 152:     PWM6TMRL = 0x00;
  1292     00BB  01A9               	clrf	41	;volatile
  1293     00BC                     l1636:
  1294                           
  1295                           ;main.c: 155:     RXPPS = 0b001101;
  1296     00BC  300D               	movlw	13
  1297     00BD  003C               	movlb	28	; select bank28
  1298     00BE  00BD               	movwf	61	;volatile
  1299     00BF                     l1638:
  1300                           
  1301                           ;main.c: 156:     RB4PPS = 0b100100;
  1302     00BF  3024               	movlw	36
  1303     00C0  003D               	movlb	29	; select bank29
  1304     00C1  009C               	movwf	28	;volatile
  1305     00C2                     l1640:
  1306                           
  1307                           ;main.c: 157:     TX1STA = 0b00100100;
  1308     00C2  3024               	movlw	36
  1309     00C3  0023               	movlb	3	; select bank3
  1310     00C4  009E               	movwf	30	;volatile
  1311     00C5                     l1642:
  1312                           
  1313                           ;main.c: 158:     RC1STA = 0b10010000;
  1314     00C5  3090               	movlw	144
  1315     00C6  009D               	movwf	29	;volatile
  1316     00C7                     l1644:
  1317                           
  1318                           ;main.c: 159:     BAUD1CON = 0b00001000;
  1319     00C7  3008               	movlw	8
  1320     00C8  009F               	movwf	31	;volatile
  1321     00C9                     l1646:
  1322                           
  1323                           ;main.c: 160:     SP1BRGL = 416 & 0x00FF;
  1324     00C9  30A0               	movlw	160
  1325     00CA  009B               	movwf	27	;volatile
  1326     00CB                     l1648:
  1327                           
  1328                           ;main.c: 161:     SP1BRGH = (416 >> 8) & 0x00FF;
  1329     00CB  3001               	movlw	1
  1330     00CC  009C               	movwf	28	;volatile
  1331     00CD                     l1650:
  1332                           
  1333                           ;main.c: 163:     PIR1bits.RCIF = 0;
  1334     00CD  0020               	movlb	0	; select bank0
  1335     00CE  1291               	bcf	17,5	;volatile
  1336     00CF                     l1652:
  1337                           
  1338                           ;main.c: 164:     PIE1bits.RCIE = 1;
  1339     00CF  0021               	movlb	1	; select bank1
  1340     00D0  1691               	bsf	17,5	;volatile
  1341     00D1                     l1654:
  1342                           
  1343                           ;main.c: 165:     INTCONbits.PEIE = 1;
  1344     00D1  170B               	bsf	11,6	;volatile
  1345     00D2                     l1656:
  1346                           
  1347                           ;main.c: 166:     INTCONbits.GIE = 1;
  1348     00D2  178B               	bsf	11,7	;volatile
  1349     00D3                     l1658:
  1350                           
  1351                           ;main.c: 169:     ADCON0 = 0b10101100;
  1352     00D3  30AC               	movlw	172
  1353     00D4  0029               	movlb	9	; select bank9
  1354     00D5  0090               	movwf	16	;volatile
  1355     00D6                     l1660:
  1356                           
  1357                           ;main.c: 170:     ADCON1 = 0b10100000;
  1358     00D6  30A0               	movlw	160
  1359     00D7  0091               	movwf	17	;volatile
  1360     00D8                     l1662:
  1361                           
  1362                           ;main.c: 173:     unsigned char str[] = "Please enter a string\r\n";
  1363     00D8  303C               	movlw	low main@F12360
  1364     00D9  0086               	movwf	6
  1365     00DA  3000               	movlw	high main@F12360
  1366     00DB  0087               	movwf	7
  1367     00DC  3020               	movlw	low main@str
  1368     00DD  0084               	movwf	4
  1369     00DE  3000               	movlw	high main@str
  1370     00DF  0085               	movwf	5
  1371     00E0  3018               	movlw	24
  1372     00E1  00FA               	movwf	??_main
  1373     00E2                     u550:
  1374     00E2  0016               	moviw fsr1++
  1375     00E3  001A               	movwi fsr0++
  1376     00E4  0BFA               	decfsz	??_main,f
  1377     00E5  28E2               	goto	u550
  1378     00E6                     l1664:
  1379                           
  1380                           ;main.c: 177:         for(int i = -600; i <= 600; i++){
  1381     00E6  30A8               	movlw	168
  1382     00E7  0020               	movlb	0	; select bank0
  1383     00E8  00B8               	movwf	main@i
  1384     00E9  30FD               	movlw	253
  1385     00EA  00B9               	movwf	main@i+1
  1386     00EB                     l1670:
  1387                           
  1388                           ;main.c: 179:             if(switchC_Read()){
  1389     00EB  3183  23C1  3180   	fcall	_switchC_Read
  1390     00EE  0870               	movf	?_switchC_Read,w
  1391     00EF  0471               	iorwf	?_switchC_Read+1,w
  1392     00F0  1903               	btfsc	3,2
  1393     00F1  28F3               	goto	u561
  1394     00F2  28F4               	goto	u560
  1395     00F3                     u561:
  1396     00F3  2915               	goto	l1674
  1397     00F4                     u560:
  1398     00F4                     l1672:
  1399                           
  1400                           ;main.c: 180:                 motorA(i);
  1401     00F4  0020               	movlb	0	; select bank0
  1402     00F5  0839               	movf	main@i+1,w
  1403     00F6  00F7               	movwf	motorA@duty+1
  1404     00F7  0838               	movf	main@i,w
  1405     00F8  00F6               	movwf	motorA@duty
  1406     00F9  3183  230A  3180   	fcall	_motorA
  1407                           
  1408                           ;main.c: 181:                 motorB(i);
  1409     00FC  0020               	movlb	0	; select bank0
  1410     00FD  0839               	movf	main@i+1,w
  1411     00FE  00F7               	movwf	motorB@duty+1
  1412     00FF  0838               	movf	main@i,w
  1413     0100  00F6               	movwf	motorB@duty
  1414     0101  3182  2297  3180   	fcall	_motorB
  1415                           
  1416                           ;main.c: 182:                 motorD(i);
  1417     0104  0020               	movlb	0	; select bank0
  1418     0105  0839               	movf	main@i+1,w
  1419     0106  00F7               	movwf	motorD@duty+1
  1420     0107  0838               	movf	main@i,w
  1421     0108  00F6               	movwf	motorD@duty
  1422     0109  3181  21B1  3180   	fcall	_motorD
  1423                           
  1424                           ;main.c: 183:                 motorC(i);
  1425     010C  0020               	movlb	0	; select bank0
  1426     010D  0839               	movf	main@i+1,w
  1427     010E  00F7               	movwf	motorC@duty+1
  1428     010F  0838               	movf	main@i,w
  1429     0110  00F6               	movwf	motorC@duty
  1430     0111  3182  2224  3180   	fcall	_motorC
  1431                           
  1432                           ;main.c: 184:             }
  1433     0114  292D               	goto	l1676
  1434     0115                     l1674:
  1435                           
  1436                           ;main.c: 186:                 motorA(0);
  1437     0115  3000               	movlw	0
  1438     0116  00F6               	movwf	motorA@duty
  1439     0117  00F7               	movwf	motorA@duty+1
  1440     0118  3183  230A  3180   	fcall	_motorA
  1441                           
  1442                           ;main.c: 187:                 motorB(0);
  1443     011B  3000               	movlw	0
  1444     011C  00F6               	movwf	motorB@duty
  1445     011D  00F7               	movwf	motorB@duty+1
  1446     011E  3182  2297  3180   	fcall	_motorB
  1447                           
  1448                           ;main.c: 188:                 motorD(0);
  1449     0121  3000               	movlw	0
  1450     0122  00F6               	movwf	motorD@duty
  1451     0123  00F7               	movwf	motorD@duty+1
  1452     0124  3181  21B1  3180   	fcall	_motorD
  1453                           
  1454                           ;main.c: 189:                 motorC(0);
  1455     0127  3000               	movlw	0
  1456     0128  00F6               	movwf	motorC@duty
  1457     0129  00F7               	movwf	motorC@duty+1
  1458     012A  3182  2224  3180   	fcall	_motorC
  1459     012D                     l1676:
  1460                           
  1461                           ;main.c: 191:             LEDON();
  1462     012D  3183  23D2  3180   	fcall	_LEDON
  1463                           
  1464                           ;main.c: 192:             _delay((unsigned long)((10)*(32000000/4000.0)));
  1465     0130  3068               	movlw	104
  1466     0131  00FA               	movwf	??_main
  1467     0132  30E4               	movlw	228
  1468     0133                     u617:
  1469     0133  0B89               	decfsz	9,f
  1470     0134  2933               	goto	u617
  1471     0135  0BFA               	decfsz	??_main,f
  1472     0136  2933               	goto	u617
  1473     0137  3200               	nop2
  1474                           
  1475                           ;main.c: 193:         }
  1476     0138  3001               	movlw	1
  1477     0139  0020               	movlb	0	; select bank0
  1478     013A  07B8               	addwf	main@i,f
  1479     013B  3000               	movlw	0
  1480     013C  3DB9               	addwfc	main@i+1,f
  1481     013D  0839               	movf	main@i+1,w
  1482     013E  3A80               	xorlw	128
  1483     013F  00FA               	movwf	??_main
  1484     0140  3082               	movlw	130
  1485     0141  027A               	subwf	??_main,w
  1486     0142  1D03               	skipz
  1487     0143  2946               	goto	u575
  1488     0144  3059               	movlw	89
  1489     0145  0238               	subwf	main@i,w
  1490     0146                     u575:
  1491     0146  1C03               	skipc
  1492     0147  2949               	goto	u571
  1493     0148  294A               	goto	u570
  1494     0149                     u571:
  1495     0149  28EB               	goto	l1670
  1496     014A                     u570:
  1497     014A                     l1678:
  1498                           
  1499                           ;main.c: 194:         for(int i = 600; i >= -600; i--){
  1500     014A  3058               	movlw	88
  1501     014B  0020               	movlb	0	; select bank0
  1502     014C  00BA               	movwf	main@i_565
  1503     014D  3002               	movlw	2
  1504     014E  00BB               	movwf	main@i_565+1
  1505     014F                     l1682:
  1506                           
  1507                           ;main.c: 196:             if(PushSwitchRead()){
  1508     014F  3183  23B4  3180   	fcall	_PushSwitchRead
  1509     0152  0870               	movf	?_PushSwitchRead,w
  1510     0153  0471               	iorwf	?_PushSwitchRead+1,w
  1511     0154  1903               	btfsc	3,2
  1512     0155  2957               	goto	u581
  1513     0156  2958               	goto	u580
  1514     0157                     u581:
  1515     0157  2979               	goto	l1686
  1516     0158                     u580:
  1517     0158                     l1684:
  1518                           
  1519                           ;main.c: 197:                 motorA(i);
  1520     0158  0020               	movlb	0	; select bank0
  1521     0159  083B               	movf	main@i_565+1,w
  1522     015A  00F7               	movwf	motorA@duty+1
  1523     015B  083A               	movf	main@i_565,w
  1524     015C  00F6               	movwf	motorA@duty
  1525     015D  3183  230A  3180   	fcall	_motorA
  1526                           
  1527                           ;main.c: 198:                 motorB(i);
  1528     0160  0020               	movlb	0	; select bank0
  1529     0161  083B               	movf	main@i_565+1,w
  1530     0162  00F7               	movwf	motorB@duty+1
  1531     0163  083A               	movf	main@i_565,w
  1532     0164  00F6               	movwf	motorB@duty
  1533     0165  3182  2297  3180   	fcall	_motorB
  1534                           
  1535                           ;main.c: 199:                 motorD(i);
  1536     0168  0020               	movlb	0	; select bank0
  1537     0169  083B               	movf	main@i_565+1,w
  1538     016A  00F7               	movwf	motorD@duty+1
  1539     016B  083A               	movf	main@i_565,w
  1540     016C  00F6               	movwf	motorD@duty
  1541     016D  3181  21B1  3180   	fcall	_motorD
  1542                           
  1543                           ;main.c: 200:                 motorC(i);
  1544     0170  0020               	movlb	0	; select bank0
  1545     0171  083B               	movf	main@i_565+1,w
  1546     0172  00F7               	movwf	motorC@duty+1
  1547     0173  083A               	movf	main@i_565,w
  1548     0174  00F6               	movwf	motorC@duty
  1549     0175  3182  2224  3180   	fcall	_motorC
  1550                           
  1551                           ;main.c: 201:             }
  1552     0178  2991               	goto	l1688
  1553     0179                     l1686:
  1554                           
  1555                           ;main.c: 203:                 motorA(0);
  1556     0179  3000               	movlw	0
  1557     017A  00F6               	movwf	motorA@duty
  1558     017B  00F7               	movwf	motorA@duty+1
  1559     017C  3183  230A  3180   	fcall	_motorA
  1560                           
  1561                           ;main.c: 204:                 motorB(0);
  1562     017F  3000               	movlw	0
  1563     0180  00F6               	movwf	motorB@duty
  1564     0181  00F7               	movwf	motorB@duty+1
  1565     0182  3182  2297  3180   	fcall	_motorB
  1566                           
  1567                           ;main.c: 205:                 motorD(0);
  1568     0185  3000               	movlw	0
  1569     0186  00F6               	movwf	motorD@duty
  1570     0187  00F7               	movwf	motorD@duty+1
  1571     0188  3181  21B1  3180   	fcall	_motorD
  1572                           
  1573                           ;main.c: 206:                 motorC(0);
  1574     018B  3000               	movlw	0
  1575     018C  00F6               	movwf	motorC@duty
  1576     018D  00F7               	movwf	motorC@duty+1
  1577     018E  3182  2224  3180   	fcall	_motorC
  1578     0191                     l1688:
  1579                           
  1580                           ;main.c: 208:             LEDOFF();
  1581     0191  3183  23D5  3180   	fcall	_LEDOFF
  1582                           
  1583                           ;main.c: 209:             _delay((unsigned long)((10)*(32000000/4000.0)));
  1584     0194  3068               	movlw	104
  1585     0195  00FA               	movwf	??_main
  1586     0196  30E4               	movlw	228
  1587     0197                     u627:
  1588     0197  0B89               	decfsz	9,f
  1589     0198  2997               	goto	u627
  1590     0199  0BFA               	decfsz	??_main,f
  1591     019A  2997               	goto	u627
  1592     019B  3200               	nop2
  1593                           
  1594                           ;main.c: 210:         }
  1595     019C  30FF               	movlw	255
  1596     019D  0020               	movlb	0	; select bank0
  1597     019E  07BA               	addwf	main@i_565,f
  1598     019F  30FF               	movlw	255
  1599     01A0  3DBB               	addwfc	main@i_565+1,f
  1600     01A1  083B               	movf	main@i_565+1,w
  1601     01A2  3A80               	xorlw	128
  1602     01A3  00FA               	movwf	??_main
  1603     01A4  307D               	movlw	125
  1604     01A5  027A               	subwf	??_main,w
  1605     01A6  1D03               	skipz
  1606     01A7  29AA               	goto	u595
  1607     01A8  30A8               	movlw	168
  1608     01A9  023A               	subwf	main@i_565,w
  1609     01AA                     u595:
  1610     01AA  1803               	skipnc
  1611     01AB  29AD               	goto	u591
  1612     01AC  29AE               	goto	u590
  1613     01AD                     u591:
  1614     01AD  294F               	goto	l1682
  1615     01AE                     u590:
  1616     01AE  28E6               	goto	l1664
  1617     01AF  3180  281D         	ljmp	start
  1618     01B1                     __end_of_main:
  1619                           
  1620                           	psect	text1
  1621     03C1                     __ptext1:	
  1622 ;; *************** function _switchC_Read *****************
  1623 ;; Defined at:
  1624 ;;		line 375 in file "main.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2    0[COMMON] unsigned int 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1642 ;;Total ram usage:        4 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652     03C1                     _switchC_Read:	
  1653                           ;psect for function _switchC_Read
  1654                           
  1655     03C1                     l1346:	
  1656                           ;incstack = 0
  1657                           ; Regs used in _switchC_Read: [wreg+status,2+status,0]
  1658                           
  1659                           
  1660                           ;main.c: 376:     return PORTAbits.RA2;
  1661     03C1  0020               	movlb	0	; select bank0
  1662     03C2  0C0C               	rrf	12,w	;volatile
  1663     03C3  0C89               	rrf	9,f
  1664     03C4  3901               	andlw	1
  1665     03C5  00F2               	movwf	??_switchC_Read
  1666     03C6  01F3               	clrf	??_switchC_Read+1
  1667     03C7  0872               	movf	??_switchC_Read,w
  1668     03C8  00F0               	movwf	?_switchC_Read
  1669     03C9  0873               	movf	??_switchC_Read+1,w
  1670     03CA  00F1               	movwf	?_switchC_Read+1
  1671     03CB                     l294:
  1672     03CB  0008               	return
  1673     03CC                     __end_of_switchC_Read:
  1674                           
  1675                           	psect	text2
  1676     01B1                     __ptext2:	
  1677 ;; *************** function _motorD *****************
  1678 ;; Defined at:
  1679 ;;		line 332 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  duty            2    6[COMMON] int 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1696 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1697 ;;Total ram usage:        4 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 2
  1700 ;; This function calls:
  1701 ;;		___wmul
  1702 ;; This function is called by:
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707     01B1                     _motorD:	
  1708                           ;psect for function _motorD
  1709                           
  1710     01B1                     l1426:	
  1711                           ;incstack = 0
  1712                           ; Regs used in _motorD: [wreg+status,2+status,0+pclath+cstack]
  1713                           
  1714                           
  1715                           ;main.c: 334:     duty > 600 ? (duty = 600) : duty;
  1716     01B1  0877               	movf	motorD@duty+1,w
  1717     01B2  3A80               	xorlw	128
  1718     01B3  00F8               	movwf	??_motorD
  1719     01B4  3082               	movlw	130
  1720     01B5  0278               	subwf	??_motorD,w
  1721     01B6  1D03               	skipz
  1722     01B7  29BA               	goto	u475
  1723     01B8  3059               	movlw	89
  1724     01B9  0276               	subwf	motorD@duty,w
  1725     01BA                     u475:
  1726     01BA  1C03               	skipc
  1727     01BB  29BD               	goto	u471
  1728     01BC  29BE               	goto	u470
  1729     01BD                     u471:
  1730     01BD  29C2               	goto	l1430
  1731     01BE                     u470:
  1732     01BE                     l1428:
  1733     01BE  3058               	movlw	88
  1734     01BF  00F6               	movwf	motorD@duty
  1735     01C0  3002               	movlw	2
  1736     01C1  00F7               	movwf	motorD@duty+1
  1737     01C2                     l1430:
  1738                           
  1739                           ;main.c: 335:     duty < -600 ? (duty = 600) : duty;
  1740     01C2  0877               	movf	motorD@duty+1,w
  1741     01C3  3A80               	xorlw	128
  1742     01C4  00F8               	movwf	??_motorD
  1743     01C5  307D               	movlw	125
  1744     01C6  0278               	subwf	??_motorD,w
  1745     01C7  1D03               	skipz
  1746     01C8  29CB               	goto	u485
  1747     01C9  30A8               	movlw	168
  1748     01CA  0276               	subwf	motorD@duty,w
  1749     01CB                     u485:
  1750     01CB  1803               	skipnc
  1751     01CC  29CE               	goto	u481
  1752     01CD  29CF               	goto	u480
  1753     01CE                     u481:
  1754     01CE  29D3               	goto	l1434
  1755     01CF                     u480:
  1756     01CF                     l1432:
  1757     01CF  3058               	movlw	88
  1758     01D0  00F6               	movwf	motorD@duty
  1759     01D1  3002               	movlw	2
  1760     01D2  00F7               	movwf	motorD@duty+1
  1761     01D3                     l1434:
  1762                           
  1763                           ;main.c: 337:     if(duty > 0){
  1764     01D3  0877               	movf	motorD@duty+1,w
  1765     01D4  3A80               	xorlw	128
  1766     01D5  00F8               	movwf	??_motorD
  1767     01D6  3080               	movlw	128
  1768     01D7  0278               	subwf	??_motorD,w
  1769     01D8  1D03               	skipz
  1770     01D9  29DC               	goto	u495
  1771     01DA  3001               	movlw	1
  1772     01DB  0276               	subwf	motorD@duty,w
  1773     01DC                     u495:
  1774     01DC  1C03               	skipc
  1775     01DD  29DF               	goto	u491
  1776     01DE  29E0               	goto	u490
  1777     01DF                     u491:
  1778     01DF  29F5               	goto	l278
  1779     01E0                     u490:
  1780     01E0                     l1436:
  1781                           
  1782                           ;main.c: 338:         CCPR1L = (duty << 8) & 0x00FF;
  1783     01E0  0025               	movlb	5	; select bank5
  1784     01E1  0191               	clrf	17	;volatile
  1785     01E2                     l1438:
  1786                           
  1787                           ;main.c: 339:         CCPR1H = (duty >> 2) & 0x00FF;
  1788     01E2  0877               	movf	motorD@duty+1,w
  1789     01E3  00F9               	movwf	??_motorD+1
  1790     01E4  0876               	movf	motorD@duty,w
  1791     01E5  00F8               	movwf	??_motorD
  1792     01E6  0D79               	rlf	??_motorD+1,w
  1793     01E7  0CF9               	rrf	??_motorD+1,f
  1794     01E8  0CF8               	rrf	??_motorD,f
  1795     01E9  0D79               	rlf	??_motorD+1,w
  1796     01EA  0CF9               	rrf	??_motorD+1,f
  1797     01EB  0CF8               	rrf	??_motorD,f
  1798     01EC  0878               	movf	??_motorD,w
  1799     01ED  0092               	movwf	18	;volatile
  1800     01EE                     l1440:
  1801                           
  1802                           ;main.c: 340:         RC3PPS = 0b010101;
  1803     01EE  3015               	movlw	21
  1804     01EF  003D               	movlb	29	; select bank29
  1805     01F0  00A3               	movwf	35	;volatile
  1806                           
  1807                           ;main.c: 341:         RC2PPS = 0x00;
  1808     01F1  01A2               	clrf	34	;volatile
  1809     01F2                     l1442:
  1810                           
  1811                           ;main.c: 342:         LATCbits.LATC2 = 0;
  1812     01F2  0022               	movlb	2	; select bank2
  1813     01F3  110E               	bcf	14,2	;volatile
  1814                           
  1815                           ;main.c: 343:     }
  1816     01F4  2A23               	goto	l282
  1817     01F5                     l278:	
  1818                           ;main.c: 344:     else if(duty < 0){
  1819                           
  1820     01F5  1FF7               	btfss	motorD@duty+1,7
  1821     01F6  29F8               	goto	u501
  1822     01F7  29F9               	goto	u500
  1823     01F8                     u501:
  1824     01F8  2A1D               	goto	l1456
  1825     01F9                     u500:
  1826     01F9                     l1444:
  1827                           
  1828                           ;main.c: 345:         duty *= -1;
  1829     01F9  30FF               	movlw	255
  1830     01FA  00F0               	movwf	___wmul@multiplier
  1831     01FB  30FF               	movlw	255
  1832     01FC  00F1               	movwf	___wmul@multiplier+1
  1833     01FD  0877               	movf	motorD@duty+1,w
  1834     01FE  00F3               	movwf	___wmul@multiplicand+1
  1835     01FF  0876               	movf	motorD@duty,w
  1836     0200  00F2               	movwf	___wmul@multiplicand
  1837     0201  3183  237D  3181   	fcall	___wmul
  1838     0204  0871               	movf	?___wmul+1,w
  1839     0205  00F7               	movwf	motorD@duty+1
  1840     0206  0870               	movf	?___wmul,w
  1841     0207  00F6               	movwf	motorD@duty
  1842     0208                     l1446:
  1843                           
  1844                           ;main.c: 346:         CCPR1L = (duty << 8) & 0x00FF;
  1845     0208  0025               	movlb	5	; select bank5
  1846     0209  0191               	clrf	17	;volatile
  1847     020A                     l1448:
  1848                           
  1849                           ;main.c: 347:         CCPR1H = (duty >> 2) & 0x00FF;
  1850     020A  0877               	movf	motorD@duty+1,w
  1851     020B  00F9               	movwf	??_motorD+1
  1852     020C  0876               	movf	motorD@duty,w
  1853     020D  00F8               	movwf	??_motorD
  1854     020E  0D79               	rlf	??_motorD+1,w
  1855     020F  0CF9               	rrf	??_motorD+1,f
  1856     0210  0CF8               	rrf	??_motorD,f
  1857     0211  0D79               	rlf	??_motorD+1,w
  1858     0212  0CF9               	rrf	??_motorD+1,f
  1859     0213  0CF8               	rrf	??_motorD,f
  1860     0214  0878               	movf	??_motorD,w
  1861     0215  0092               	movwf	18	;volatile
  1862     0216                     l1450:
  1863                           
  1864                           ;main.c: 348:         RC2PPS = 0b010101;
  1865     0216  3015               	movlw	21
  1866     0217  003D               	movlb	29	; select bank29
  1867     0218  00A2               	movwf	34	;volatile
  1868     0219                     l1452:
  1869                           
  1870                           ;main.c: 349:         RC3PPS = 0x00;
  1871     0219  01A3               	clrf	35	;volatile
  1872     021A                     l1454:
  1873                           
  1874                           ;main.c: 350:         LATCbits.LATC3 = 0;
  1875     021A  0022               	movlb	2	; select bank2
  1876     021B  118E               	bcf	14,3	;volatile
  1877                           
  1878                           ;main.c: 351:     }
  1879     021C  2A23               	goto	l282
  1880     021D                     l1456:
  1881                           
  1882                           ;main.c: 353:         RC2PPS = 0x00;
  1883     021D  003D               	movlb	29	; select bank29
  1884     021E  01A2               	clrf	34	;volatile
  1885                           
  1886                           ;main.c: 354:         RC3PPS = 0x00;
  1887     021F  01A3               	clrf	35	;volatile
  1888     0220                     l1458:
  1889                           
  1890                           ;main.c: 355:         LATCbits.LATC2 = 0;
  1891     0220  0022               	movlb	2	; select bank2
  1892     0221  110E               	bcf	14,2	;volatile
  1893     0222                     l1460:
  1894                           
  1895                           ;main.c: 356:         LATCbits.LATC3 = 0;
  1896     0222  118E               	bcf	14,3	;volatile
  1897     0223                     l282:
  1898     0223  0008               	return
  1899     0224                     __end_of_motorD:
  1900                           
  1901                           	psect	text3
  1902     0224                     __ptext3:	
  1903 ;; *************** function _motorC *****************
  1904 ;; Defined at:
  1905 ;;		line 301 in file "main.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  duty            2    6[COMMON] int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1922 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1923 ;;Total ram usage:        4 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 2
  1926 ;; This function calls:
  1927 ;;		___wmul
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933     0224                     _motorC:	
  1934                           ;psect for function _motorC
  1935                           
  1936     0224                     l1464:	
  1937                           ;incstack = 0
  1938                           ; Regs used in _motorC: [wreg+status,2+status,0+pclath+cstack]
  1939                           
  1940                           
  1941                           ;main.c: 303:     duty > 600 ? (duty = 600) : duty;
  1942     0224  0877               	movf	motorC@duty+1,w
  1943     0225  3A80               	xorlw	128
  1944     0226  00F8               	movwf	??_motorC
  1945     0227  3082               	movlw	130
  1946     0228  0278               	subwf	??_motorC,w
  1947     0229  1D03               	skipz
  1948     022A  2A2D               	goto	u515
  1949     022B  3059               	movlw	89
  1950     022C  0276               	subwf	motorC@duty,w
  1951     022D                     u515:
  1952     022D  1C03               	skipc
  1953     022E  2A30               	goto	u511
  1954     022F  2A31               	goto	u510
  1955     0230                     u511:
  1956     0230  2A35               	goto	l1468
  1957     0231                     u510:
  1958     0231                     l1466:
  1959     0231  3058               	movlw	88
  1960     0232  00F6               	movwf	motorC@duty
  1961     0233  3002               	movlw	2
  1962     0234  00F7               	movwf	motorC@duty+1
  1963     0235                     l1468:
  1964                           
  1965                           ;main.c: 304:     duty < -600 ? (duty = 600) : duty;
  1966     0235  0877               	movf	motorC@duty+1,w
  1967     0236  3A80               	xorlw	128
  1968     0237  00F8               	movwf	??_motorC
  1969     0238  307D               	movlw	125
  1970     0239  0278               	subwf	??_motorC,w
  1971     023A  1D03               	skipz
  1972     023B  2A3E               	goto	u525
  1973     023C  30A8               	movlw	168
  1974     023D  0276               	subwf	motorC@duty,w
  1975     023E                     u525:
  1976     023E  1803               	skipnc
  1977     023F  2A41               	goto	u521
  1978     0240  2A42               	goto	u520
  1979     0241                     u521:
  1980     0241  2A46               	goto	l1472
  1981     0242                     u520:
  1982     0242                     l1470:
  1983     0242  3058               	movlw	88
  1984     0243  00F6               	movwf	motorC@duty
  1985     0244  3002               	movlw	2
  1986     0245  00F7               	movwf	motorC@duty+1
  1987     0246                     l1472:
  1988                           
  1989                           ;main.c: 306:     if(duty > 0){
  1990     0246  0877               	movf	motorC@duty+1,w
  1991     0247  3A80               	xorlw	128
  1992     0248  00F8               	movwf	??_motorC
  1993     0249  3080               	movlw	128
  1994     024A  0278               	subwf	??_motorC,w
  1995     024B  1D03               	skipz
  1996     024C  2A4F               	goto	u535
  1997     024D  3001               	movlw	1
  1998     024E  0276               	subwf	motorC@duty,w
  1999     024F                     u535:
  2000     024F  1C03               	skipc
  2001     0250  2A52               	goto	u531
  2002     0251  2A53               	goto	u530
  2003     0252                     u531:
  2004     0252  2A68               	goto	l263
  2005     0253                     u530:
  2006     0253                     l1474:
  2007                           
  2008                           ;main.c: 307:         PWM9DCL = (duty << 8) & 0x00FF;
  2009     0253  002C               	movlb	12	; select bank12
  2010     0254  019A               	clrf	26	;volatile
  2011     0255                     l1476:
  2012                           
  2013                           ;main.c: 308:         PWM9DCH = (duty >> 2) & 0x00FF;
  2014     0255  0877               	movf	motorC@duty+1,w
  2015     0256  00F9               	movwf	??_motorC+1
  2016     0257  0876               	movf	motorC@duty,w
  2017     0258  00F8               	movwf	??_motorC
  2018     0259  0D79               	rlf	??_motorC+1,w
  2019     025A  0CF9               	rrf	??_motorC+1,f
  2020     025B  0CF8               	rrf	??_motorC,f
  2021     025C  0D79               	rlf	??_motorC+1,w
  2022     025D  0CF9               	rrf	??_motorC+1,f
  2023     025E  0CF8               	rrf	??_motorC,f
  2024     025F  0878               	movf	??_motorC,w
  2025     0260  009B               	movwf	27	;volatile
  2026     0261                     l1478:
  2027                           
  2028                           ;main.c: 309:         RC1PPS = 0b011011;
  2029     0261  301B               	movlw	27
  2030     0262  003D               	movlb	29	; select bank29
  2031     0263  00A1               	movwf	33	;volatile
  2032                           
  2033                           ;main.c: 310:         RC0PPS = 0x00;
  2034     0264  01A0               	clrf	32	;volatile
  2035     0265                     l1480:
  2036                           
  2037                           ;main.c: 311:         LATCbits.LATC0 = 0;
  2038     0265  0022               	movlb	2	; select bank2
  2039     0266  100E               	bcf	14,0	;volatile
  2040                           
  2041                           ;main.c: 312:     }
  2042     0267  2A96               	goto	l267
  2043     0268                     l263:	
  2044                           ;main.c: 313:     else if(duty < 0){
  2045                           
  2046     0268  1FF7               	btfss	motorC@duty+1,7
  2047     0269  2A6B               	goto	u541
  2048     026A  2A6C               	goto	u540
  2049     026B                     u541:
  2050     026B  2A90               	goto	l1494
  2051     026C                     u540:
  2052     026C                     l1482:
  2053                           
  2054                           ;main.c: 314:         duty *= -1;
  2055     026C  30FF               	movlw	255
  2056     026D  00F0               	movwf	___wmul@multiplier
  2057     026E  30FF               	movlw	255
  2058     026F  00F1               	movwf	___wmul@multiplier+1
  2059     0270  0877               	movf	motorC@duty+1,w
  2060     0271  00F3               	movwf	___wmul@multiplicand+1
  2061     0272  0876               	movf	motorC@duty,w
  2062     0273  00F2               	movwf	___wmul@multiplicand
  2063     0274  3183  237D  3182   	fcall	___wmul
  2064     0277  0871               	movf	?___wmul+1,w
  2065     0278  00F7               	movwf	motorC@duty+1
  2066     0279  0870               	movf	?___wmul,w
  2067     027A  00F6               	movwf	motorC@duty
  2068     027B                     l1484:
  2069                           
  2070                           ;main.c: 315:         PWM9DCL = (duty << 8) & 0x00FF;
  2071     027B  002C               	movlb	12	; select bank12
  2072     027C  019A               	clrf	26	;volatile
  2073     027D                     l1486:
  2074                           
  2075                           ;main.c: 316:         PWM9DCH = (duty >> 2) & 0x00FF;
  2076     027D  0877               	movf	motorC@duty+1,w
  2077     027E  00F9               	movwf	??_motorC+1
  2078     027F  0876               	movf	motorC@duty,w
  2079     0280  00F8               	movwf	??_motorC
  2080     0281  0D79               	rlf	??_motorC+1,w
  2081     0282  0CF9               	rrf	??_motorC+1,f
  2082     0283  0CF8               	rrf	??_motorC,f
  2083     0284  0D79               	rlf	??_motorC+1,w
  2084     0285  0CF9               	rrf	??_motorC+1,f
  2085     0286  0CF8               	rrf	??_motorC,f
  2086     0287  0878               	movf	??_motorC,w
  2087     0288  009B               	movwf	27	;volatile
  2088     0289                     l1488:
  2089                           
  2090                           ;main.c: 317:         RC0PPS = 0b011011;
  2091     0289  301B               	movlw	27
  2092     028A  003D               	movlb	29	; select bank29
  2093     028B  00A0               	movwf	32	;volatile
  2094     028C                     l1490:
  2095                           
  2096                           ;main.c: 318:         RC1PPS = 0x00;
  2097     028C  01A1               	clrf	33	;volatile
  2098     028D                     l1492:
  2099                           
  2100                           ;main.c: 319:         LATCbits.LATC1 = 0;
  2101     028D  0022               	movlb	2	; select bank2
  2102     028E  108E               	bcf	14,1	;volatile
  2103                           
  2104                           ;main.c: 320:     }
  2105     028F  2A96               	goto	l267
  2106     0290                     l1494:
  2107                           
  2108                           ;main.c: 322:         RC0PPS = 0x00;
  2109     0290  003D               	movlb	29	; select bank29
  2110     0291  01A0               	clrf	32	;volatile
  2111                           
  2112                           ;main.c: 323:         RC1PPS = 0x00;
  2113     0292  01A1               	clrf	33	;volatile
  2114     0293                     l1496:
  2115                           
  2116                           ;main.c: 324:         LATCbits.LATC0 = 0;
  2117     0293  0022               	movlb	2	; select bank2
  2118     0294  100E               	bcf	14,0	;volatile
  2119     0295                     l1498:
  2120                           
  2121                           ;main.c: 325:         LATCbits.LATC1 = 0;
  2122     0295  108E               	bcf	14,1	;volatile
  2123     0296                     l267:
  2124     0296  0008               	return
  2125     0297                     __end_of_motorC:
  2126                           
  2127                           	psect	text4
  2128     0297                     __ptext4:	
  2129 ;; *************** function _motorB *****************
  2130 ;; Defined at:
  2131 ;;		line 270 in file "main.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  duty            2    6[COMMON] int 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0, pclath, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2147 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2148 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2149 ;;Total ram usage:        4 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 2
  2152 ;; This function calls:
  2153 ;;		___wmul
  2154 ;; This function is called by:
  2155 ;;		_main
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159     0297                     _motorB:	
  2160                           ;psect for function _motorB
  2161                           
  2162     0297                     l1388:	
  2163                           ;incstack = 0
  2164                           ; Regs used in _motorB: [wreg+status,2+status,0+pclath+cstack]
  2165                           
  2166                           
  2167                           ;main.c: 272:     duty > 600 ? (duty = 600) : duty;
  2168     0297  0877               	movf	motorB@duty+1,w
  2169     0298  3A80               	xorlw	128
  2170     0299  00F8               	movwf	??_motorB
  2171     029A  3082               	movlw	130
  2172     029B  0278               	subwf	??_motorB,w
  2173     029C  1D03               	skipz
  2174     029D  2AA0               	goto	u435
  2175     029E  3059               	movlw	89
  2176     029F  0276               	subwf	motorB@duty,w
  2177     02A0                     u435:
  2178     02A0  1C03               	skipc
  2179     02A1  2AA3               	goto	u431
  2180     02A2  2AA4               	goto	u430
  2181     02A3                     u431:
  2182     02A3  2AA8               	goto	l1392
  2183     02A4                     u430:
  2184     02A4                     l1390:
  2185     02A4  3058               	movlw	88
  2186     02A5  00F6               	movwf	motorB@duty
  2187     02A6  3002               	movlw	2
  2188     02A7  00F7               	movwf	motorB@duty+1
  2189     02A8                     l1392:
  2190                           
  2191                           ;main.c: 273:     duty < -600 ? (duty = 600) : duty;
  2192     02A8  0877               	movf	motorB@duty+1,w
  2193     02A9  3A80               	xorlw	128
  2194     02AA  00F8               	movwf	??_motorB
  2195     02AB  307D               	movlw	125
  2196     02AC  0278               	subwf	??_motorB,w
  2197     02AD  1D03               	skipz
  2198     02AE  2AB1               	goto	u445
  2199     02AF  30A8               	movlw	168
  2200     02B0  0276               	subwf	motorB@duty,w
  2201     02B1                     u445:
  2202     02B1  1803               	skipnc
  2203     02B2  2AB4               	goto	u441
  2204     02B3  2AB5               	goto	u440
  2205     02B4                     u441:
  2206     02B4  2AB9               	goto	l1396
  2207     02B5                     u440:
  2208     02B5                     l1394:
  2209     02B5  3058               	movlw	88
  2210     02B6  00F6               	movwf	motorB@duty
  2211     02B7  3002               	movlw	2
  2212     02B8  00F7               	movwf	motorB@duty+1
  2213     02B9                     l1396:
  2214                           
  2215                           ;main.c: 275:     if(duty > 0){
  2216     02B9  0877               	movf	motorB@duty+1,w
  2217     02BA  3A80               	xorlw	128
  2218     02BB  00F8               	movwf	??_motorB
  2219     02BC  3080               	movlw	128
  2220     02BD  0278               	subwf	??_motorB,w
  2221     02BE  1D03               	skipz
  2222     02BF  2AC2               	goto	u455
  2223     02C0  3001               	movlw	1
  2224     02C1  0276               	subwf	motorB@duty,w
  2225     02C2                     u455:
  2226     02C2  1C03               	skipc
  2227     02C3  2AC5               	goto	u451
  2228     02C4  2AC6               	goto	u450
  2229     02C5                     u451:
  2230     02C5  2ADB               	goto	l248
  2231     02C6                     u450:
  2232     02C6                     l1398:
  2233                           
  2234                           ;main.c: 276:         PWM4DCL = (duty << 8) & 0x00FF;
  2235     02C6  002C               	movlb	12	; select bank12
  2236     02C7  0197               	clrf	23	;volatile
  2237     02C8                     l1400:
  2238                           
  2239                           ;main.c: 277:         PWM4DCH = (duty >> 2) & 0x00FF;
  2240     02C8  0877               	movf	motorB@duty+1,w
  2241     02C9  00F9               	movwf	??_motorB+1
  2242     02CA  0876               	movf	motorB@duty,w
  2243     02CB  00F8               	movwf	??_motorB
  2244     02CC  0D79               	rlf	??_motorB+1,w
  2245     02CD  0CF9               	rrf	??_motorB+1,f
  2246     02CE  0CF8               	rrf	??_motorB,f
  2247     02CF  0D79               	rlf	??_motorB+1,w
  2248     02D0  0CF9               	rrf	??_motorB+1,f
  2249     02D1  0CF8               	rrf	??_motorB,f
  2250     02D2  0878               	movf	??_motorB,w
  2251     02D3  0098               	movwf	24	;volatile
  2252     02D4                     l1402:
  2253                           
  2254                           ;main.c: 278:         RA7PPS = 0b011010;
  2255     02D4  301A               	movlw	26
  2256     02D5  003D               	movlb	29	; select bank29
  2257     02D6  0097               	movwf	23	;volatile
  2258                           
  2259                           ;main.c: 279:         RA6PPS = 0x00;
  2260     02D7  0196               	clrf	22	;volatile
  2261     02D8                     l1404:
  2262                           
  2263                           ;main.c: 280:         LATAbits.LATA6 = 0;
  2264     02D8  0022               	movlb	2	; select bank2
  2265     02D9  130C               	bcf	12,6	;volatile
  2266                           
  2267                           ;main.c: 281:     }
  2268     02DA  2B09               	goto	l252
  2269     02DB                     l248:	
  2270                           ;main.c: 282:     else if(duty < 0){
  2271                           
  2272     02DB  1FF7               	btfss	motorB@duty+1,7
  2273     02DC  2ADE               	goto	u461
  2274     02DD  2ADF               	goto	u460
  2275     02DE                     u461:
  2276     02DE  2B03               	goto	l1418
  2277     02DF                     u460:
  2278     02DF                     l1406:
  2279                           
  2280                           ;main.c: 283:         duty *= -1;
  2281     02DF  30FF               	movlw	255
  2282     02E0  00F0               	movwf	___wmul@multiplier
  2283     02E1  30FF               	movlw	255
  2284     02E2  00F1               	movwf	___wmul@multiplier+1
  2285     02E3  0877               	movf	motorB@duty+1,w
  2286     02E4  00F3               	movwf	___wmul@multiplicand+1
  2287     02E5  0876               	movf	motorB@duty,w
  2288     02E6  00F2               	movwf	___wmul@multiplicand
  2289     02E7  3183  237D  3182   	fcall	___wmul
  2290     02EA  0871               	movf	?___wmul+1,w
  2291     02EB  00F7               	movwf	motorB@duty+1
  2292     02EC  0870               	movf	?___wmul,w
  2293     02ED  00F6               	movwf	motorB@duty
  2294     02EE                     l1408:
  2295                           
  2296                           ;main.c: 284:         PWM4DCL = (duty << 8) & 0x00FF;
  2297     02EE  002C               	movlb	12	; select bank12
  2298     02EF  0197               	clrf	23	;volatile
  2299     02F0                     l1410:
  2300                           
  2301                           ;main.c: 285:         PWM4DCH = (duty >> 2) & 0x00FF;
  2302     02F0  0877               	movf	motorB@duty+1,w
  2303     02F1  00F9               	movwf	??_motorB+1
  2304     02F2  0876               	movf	motorB@duty,w
  2305     02F3  00F8               	movwf	??_motorB
  2306     02F4  0D79               	rlf	??_motorB+1,w
  2307     02F5  0CF9               	rrf	??_motorB+1,f
  2308     02F6  0CF8               	rrf	??_motorB,f
  2309     02F7  0D79               	rlf	??_motorB+1,w
  2310     02F8  0CF9               	rrf	??_motorB+1,f
  2311     02F9  0CF8               	rrf	??_motorB,f
  2312     02FA  0878               	movf	??_motorB,w
  2313     02FB  0098               	movwf	24	;volatile
  2314     02FC                     l1412:
  2315                           
  2316                           ;main.c: 286:         RA6PPS = 0b011010;
  2317     02FC  301A               	movlw	26
  2318     02FD  003D               	movlb	29	; select bank29
  2319     02FE  0096               	movwf	22	;volatile
  2320     02FF                     l1414:
  2321                           
  2322                           ;main.c: 287:         RA7PPS = 0x00;
  2323     02FF  0197               	clrf	23	;volatile
  2324     0300                     l1416:
  2325                           
  2326                           ;main.c: 288:         LATAbits.LATA7 = 0;
  2327     0300  0022               	movlb	2	; select bank2
  2328     0301  138C               	bcf	12,7	;volatile
  2329                           
  2330                           ;main.c: 289:     }
  2331     0302  2B09               	goto	l252
  2332     0303                     l1418:
  2333                           
  2334                           ;main.c: 291:         RA6PPS = 0x00;
  2335     0303  003D               	movlb	29	; select bank29
  2336     0304  0196               	clrf	22	;volatile
  2337                           
  2338                           ;main.c: 292:         RA7PPS = 0x00;
  2339     0305  0197               	clrf	23	;volatile
  2340     0306                     l1420:
  2341                           
  2342                           ;main.c: 293:         LATAbits.LATA6 = 0;
  2343     0306  0022               	movlb	2	; select bank2
  2344     0307  130C               	bcf	12,6	;volatile
  2345     0308                     l1422:
  2346                           
  2347                           ;main.c: 294:         LATAbits.LATA7 = 0;
  2348     0308  138C               	bcf	12,7	;volatile
  2349     0309                     l252:
  2350     0309  0008               	return
  2351     030A                     __end_of_motorB:
  2352                           
  2353                           	psect	text5
  2354     030A                     __ptext5:	
  2355 ;; *************** function _motorA *****************
  2356 ;; Defined at:
  2357 ;;		line 239 in file "main.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  duty            2    6[COMMON] int 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2375 ;;Total ram usage:        4 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 2
  2378 ;; This function calls:
  2379 ;;		___wmul
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385     030A                     _motorA:	
  2386                           ;psect for function _motorA
  2387                           
  2388     030A                     l1350:	
  2389                           ;incstack = 0
  2390                           ; Regs used in _motorA: [wreg+status,2+status,0+pclath+cstack]
  2391                           
  2392                           
  2393                           ;main.c: 241:     duty > 600 ? (duty = 600) : duty;
  2394     030A  0877               	movf	motorA@duty+1,w
  2395     030B  3A80               	xorlw	128
  2396     030C  00F8               	movwf	??_motorA
  2397     030D  3082               	movlw	130
  2398     030E  0278               	subwf	??_motorA,w
  2399     030F  1D03               	skipz
  2400     0310  2B13               	goto	u395
  2401     0311  3059               	movlw	89
  2402     0312  0276               	subwf	motorA@duty,w
  2403     0313                     u395:
  2404     0313  1C03               	skipc
  2405     0314  2B16               	goto	u391
  2406     0315  2B17               	goto	u390
  2407     0316                     u391:
  2408     0316  2B1B               	goto	l1354
  2409     0317                     u390:
  2410     0317                     l1352:
  2411     0317  3058               	movlw	88
  2412     0318  00F6               	movwf	motorA@duty
  2413     0319  3002               	movlw	2
  2414     031A  00F7               	movwf	motorA@duty+1
  2415     031B                     l1354:
  2416                           
  2417                           ;main.c: 242:     duty < -600 ? (duty = 600) : duty;
  2418     031B  0877               	movf	motorA@duty+1,w
  2419     031C  3A80               	xorlw	128
  2420     031D  00F8               	movwf	??_motorA
  2421     031E  307D               	movlw	125
  2422     031F  0278               	subwf	??_motorA,w
  2423     0320  1D03               	skipz
  2424     0321  2B24               	goto	u405
  2425     0322  30A8               	movlw	168
  2426     0323  0276               	subwf	motorA@duty,w
  2427     0324                     u405:
  2428     0324  1803               	skipnc
  2429     0325  2B27               	goto	u401
  2430     0326  2B28               	goto	u400
  2431     0327                     u401:
  2432     0327  2B2C               	goto	l1358
  2433     0328                     u400:
  2434     0328                     l1356:
  2435     0328  3058               	movlw	88
  2436     0329  00F6               	movwf	motorA@duty
  2437     032A  3002               	movlw	2
  2438     032B  00F7               	movwf	motorA@duty+1
  2439     032C                     l1358:
  2440                           
  2441                           ;main.c: 244:     if(duty > 0){
  2442     032C  0877               	movf	motorA@duty+1,w
  2443     032D  3A80               	xorlw	128
  2444     032E  00F8               	movwf	??_motorA
  2445     032F  3080               	movlw	128
  2446     0330  0278               	subwf	??_motorA,w
  2447     0331  1D03               	skipz
  2448     0332  2B35               	goto	u415
  2449     0333  3001               	movlw	1
  2450     0334  0276               	subwf	motorA@duty,w
  2451     0335                     u415:
  2452     0335  1C03               	skipc
  2453     0336  2B38               	goto	u411
  2454     0337  2B39               	goto	u410
  2455     0338                     u411:
  2456     0338  2B4E               	goto	l233
  2457     0339                     u410:
  2458     0339                     l1360:
  2459                           
  2460                           ;main.c: 245:         PWM3DCL = (duty << 8) & 0x00FF;
  2461     0339  002C               	movlb	12	; select bank12
  2462     033A  0194               	clrf	20	;volatile
  2463     033B                     l1362:
  2464                           
  2465                           ;main.c: 246:         PWM3DCH = (duty >> 2) & 0x00FF;
  2466     033B  0877               	movf	motorA@duty+1,w
  2467     033C  00F9               	movwf	??_motorA+1
  2468     033D  0876               	movf	motorA@duty,w
  2469     033E  00F8               	movwf	??_motorA
  2470     033F  0D79               	rlf	??_motorA+1,w
  2471     0340  0CF9               	rrf	??_motorA+1,f
  2472     0341  0CF8               	rrf	??_motorA,f
  2473     0342  0D79               	rlf	??_motorA+1,w
  2474     0343  0CF9               	rrf	??_motorA+1,f
  2475     0344  0CF8               	rrf	??_motorA,f
  2476     0345  0878               	movf	??_motorA,w
  2477     0346  0095               	movwf	21	;volatile
  2478     0347                     l1364:
  2479                           
  2480                           ;main.c: 247:         RA5PPS = 0b011001;
  2481     0347  3019               	movlw	25
  2482     0348  003D               	movlb	29	; select bank29
  2483     0349  0095               	movwf	21	;volatile
  2484                           
  2485                           ;main.c: 248:         RA4PPS = 0x00;
  2486     034A  0194               	clrf	20	;volatile
  2487     034B                     l1366:
  2488                           
  2489                           ;main.c: 249:         LATAbits.LATA4 = 0;
  2490     034B  0022               	movlb	2	; select bank2
  2491     034C  120C               	bcf	12,4	;volatile
  2492                           
  2493                           ;main.c: 250:     }
  2494     034D  2B7C               	goto	l237
  2495     034E                     l233:	
  2496                           ;main.c: 251:     else if(duty < 0){
  2497                           
  2498     034E  1FF7               	btfss	motorA@duty+1,7
  2499     034F  2B51               	goto	u421
  2500     0350  2B52               	goto	u420
  2501     0351                     u421:
  2502     0351  2B76               	goto	l1380
  2503     0352                     u420:
  2504     0352                     l1368:
  2505                           
  2506                           ;main.c: 252:         duty *= -1;
  2507     0352  30FF               	movlw	255
  2508     0353  00F0               	movwf	___wmul@multiplier
  2509     0354  30FF               	movlw	255
  2510     0355  00F1               	movwf	___wmul@multiplier+1
  2511     0356  0877               	movf	motorA@duty+1,w
  2512     0357  00F3               	movwf	___wmul@multiplicand+1
  2513     0358  0876               	movf	motorA@duty,w
  2514     0359  00F2               	movwf	___wmul@multiplicand
  2515     035A  3183  237D  3183   	fcall	___wmul
  2516     035D  0871               	movf	?___wmul+1,w
  2517     035E  00F7               	movwf	motorA@duty+1
  2518     035F  0870               	movf	?___wmul,w
  2519     0360  00F6               	movwf	motorA@duty
  2520     0361                     l1370:
  2521                           
  2522                           ;main.c: 253:         PWM3DCL = (duty << 8) & 0x00FF;
  2523     0361  002C               	movlb	12	; select bank12
  2524     0362  0194               	clrf	20	;volatile
  2525     0363                     l1372:
  2526                           
  2527                           ;main.c: 254:         PWM3DCH = (duty >> 2) & 0x00FF;
  2528     0363  0877               	movf	motorA@duty+1,w
  2529     0364  00F9               	movwf	??_motorA+1
  2530     0365  0876               	movf	motorA@duty,w
  2531     0366  00F8               	movwf	??_motorA
  2532     0367  0D79               	rlf	??_motorA+1,w
  2533     0368  0CF9               	rrf	??_motorA+1,f
  2534     0369  0CF8               	rrf	??_motorA,f
  2535     036A  0D79               	rlf	??_motorA+1,w
  2536     036B  0CF9               	rrf	??_motorA+1,f
  2537     036C  0CF8               	rrf	??_motorA,f
  2538     036D  0878               	movf	??_motorA,w
  2539     036E  0095               	movwf	21	;volatile
  2540     036F                     l1374:
  2541                           
  2542                           ;main.c: 255:         RA4PPS = 0b011001;
  2543     036F  3019               	movlw	25
  2544     0370  003D               	movlb	29	; select bank29
  2545     0371  0094               	movwf	20	;volatile
  2546     0372                     l1376:
  2547                           
  2548                           ;main.c: 256:         RA5PPS = 0x00;
  2549     0372  0195               	clrf	21	;volatile
  2550     0373                     l1378:
  2551                           
  2552                           ;main.c: 257:         LATAbits.LATA5 = 0;
  2553     0373  0022               	movlb	2	; select bank2
  2554     0374  128C               	bcf	12,5	;volatile
  2555                           
  2556                           ;main.c: 258:     }
  2557     0375  2B7C               	goto	l237
  2558     0376                     l1380:
  2559                           
  2560                           ;main.c: 260:         RA4PPS = 0x00;
  2561     0376  003D               	movlb	29	; select bank29
  2562     0377  0194               	clrf	20	;volatile
  2563                           
  2564                           ;main.c: 261:         RA5PPS = 0x00;
  2565     0378  0195               	clrf	21	;volatile
  2566     0379                     l1382:
  2567                           
  2568                           ;main.c: 262:         LATAbits.LATA4 = 0;
  2569     0379  0022               	movlb	2	; select bank2
  2570     037A  120C               	bcf	12,4	;volatile
  2571     037B                     l1384:
  2572                           
  2573                           ;main.c: 263:         LATAbits.LATA5 = 0;
  2574     037B  128C               	bcf	12,5	;volatile
  2575     037C                     l237:
  2576     037C  0008               	return
  2577     037D                     __end_of_motorA:
  2578                           
  2579                           	psect	text6
  2580     037D                     __ptext6:	
  2581 ;; *************** function ___wmul *****************
  2582 ;; Defined at:
  2583 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  multiplier      2    0[COMMON] unsigned int 
  2586 ;;  multiplicand    2    2[COMMON] unsigned int 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  product         2    4[COMMON] unsigned int 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  2    0[COMMON] unsigned int 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2601 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2602 ;;Total ram usage:        6 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_motorA
  2609 ;;		_motorB
  2610 ;;		_motorC
  2611 ;;		_motorD
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615     037D                     ___wmul:	
  2616                           ;psect for function ___wmul
  2617                           
  2618     037D                     l1332:	
  2619                           ;incstack = 0
  2620                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2621                           
  2622     037D  01F4               	clrf	___wmul@product
  2623     037E  01F5               	clrf	___wmul@product+1
  2624     037F                     l1334:
  2625     037F  1C70               	btfss	___wmul@multiplier,0
  2626     0380  2B82               	goto	u351
  2627     0381  2B83               	goto	u350
  2628     0382                     u351:
  2629     0382  2B87               	goto	l428
  2630     0383                     u350:
  2631     0383                     l1336:
  2632     0383  0872               	movf	___wmul@multiplicand,w
  2633     0384  07F4               	addwf	___wmul@product,f
  2634     0385  0873               	movf	___wmul@multiplicand+1,w
  2635     0386  3DF5               	addwfc	___wmul@product+1,f
  2636     0387                     l428:
  2637     0387  3001               	movlw	1
  2638     0388                     u365:
  2639     0388  35F2               	lslf	___wmul@multiplicand,f
  2640     0389  0DF3               	rlf	___wmul@multiplicand+1,f
  2641     038A  0B89               	decfsz	9,f
  2642     038B  2B88               	goto	u365
  2643     038C                     l1338:
  2644     038C  3001               	movlw	1
  2645     038D                     u375:
  2646     038D  36F1               	lsrf	___wmul@multiplier+1,f
  2647     038E  0CF0               	rrf	___wmul@multiplier,f
  2648     038F  0B89               	decfsz	9,f
  2649     0390  2B8D               	goto	u375
  2650     0391                     l1340:
  2651     0391  0870               	movf	___wmul@multiplier,w
  2652     0392  0471               	iorwf	___wmul@multiplier+1,w
  2653     0393  1D03               	btfss	3,2
  2654     0394  2B96               	goto	u381
  2655     0395  2B97               	goto	u380
  2656     0396                     u381:
  2657     0396  2B7F               	goto	l1334
  2658     0397                     u380:
  2659     0397                     l1342:
  2660     0397  0875               	movf	___wmul@product+1,w
  2661     0398  00F1               	movwf	?___wmul+1
  2662     0399  0874               	movf	___wmul@product,w
  2663     039A  00F0               	movwf	?___wmul
  2664     039B                     l430:
  2665     039B  0008               	return
  2666     039C                     __end_of___wmul:
  2667                           
  2668                           	psect	text7
  2669     03B4                     __ptext7:	
  2670 ;; *************** function _PushSwitchRead *****************
  2671 ;; Defined at:
  2672 ;;		line 363 in file "main.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;		None
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2    0[COMMON] unsigned int 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2688 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2689 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2690 ;;Total ram usage:        5 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700     03B4                     _PushSwitchRead:	
  2701                           ;psect for function _PushSwitchRead
  2702                           
  2703     03B4                     l1504:	
  2704                           ;incstack = 0
  2705                           ; Regs used in _PushSwitchRead: [wreg+status,2+status,0]
  2706                           
  2707                           
  2708                           ;main.c: 364:     return PORTAbits.RA3;
  2709     03B4  0020               	movlb	0	; select bank0
  2710     03B5  0C0C               	rrf	12,w	;volatile
  2711     03B6  00F2               	movwf	??_PushSwitchRead
  2712     03B7  0CF2               	rrf	??_PushSwitchRead,f
  2713     03B8  0C72               	rrf	??_PushSwitchRead,w
  2714     03B9  3901               	andlw	1
  2715     03BA  00F3               	movwf	??_PushSwitchRead+1
  2716     03BB  01F4               	clrf	??_PushSwitchRead+2
  2717     03BC  0873               	movf	??_PushSwitchRead+1,w
  2718     03BD  00F0               	movwf	?_PushSwitchRead
  2719     03BE  0874               	movf	??_PushSwitchRead+2,w
  2720     03BF  00F1               	movwf	?_PushSwitchRead+1
  2721     03C0                     l285:
  2722     03C0  0008               	return
  2723     03C1                     __end_of_PushSwitchRead:
  2724                           
  2725                           	psect	text8
  2726     03D2                     __ptext8:	
  2727 ;; *************** function _LEDON *****************
  2728 ;; Defined at:
  2729 ;;		line 458 in file "main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		None
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757     03D2                     _LEDON:	
  2758                           ;psect for function _LEDON
  2759                           
  2760     03D2                     l1502:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _LEDON: []
  2763                           
  2764                           
  2765                           ;main.c: 459:     LATCbits.LATC6 = 1;
  2766     03D2  0022               	movlb	2	; select bank2
  2767     03D3  170E               	bsf	14,6	;volatile
  2768     03D4                     l346:	
  2769                           ;main.c: 460:     return;
  2770                           
  2771     03D4  0008               	return
  2772     03D5                     __end_of_LEDON:
  2773                           
  2774                           	psect	text9
  2775     03D5                     __ptext9:	
  2776 ;; *************** function _LEDOFF *****************
  2777 ;; Defined at:
  2778 ;;		line 463 in file "main.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		None
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; Hardware stack levels required when called: 1
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806     03D5                     _LEDOFF:	
  2807                           ;psect for function _LEDOFF
  2808                           
  2809     03D5                     l1508:	
  2810                           ;incstack = 0
  2811                           ; Regs used in _LEDOFF: []
  2812                           
  2813                           
  2814                           ;main.c: 464:     LATCbits.LATC6 = 0;
  2815     03D5  0022               	movlb	2	; select bank2
  2816     03D6  130E               	bcf	14,6	;volatile
  2817     03D7                     l349:	
  2818                           ;main.c: 465:     return;
  2819                           
  2820     03D7  0008               	return
  2821     03D8                     __end_of_LEDOFF:
  2822                           
  2823                           	psect	intentry
  2824     0004                     __pintentry:	
  2825 ;; *************** function _ISR *****************
  2826 ;; Defined at:
  2827 ;;		line 468 in file "main.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		Interrupt level 1
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854     0004                     _ISR:
  2855                           
  2856                           ;incstack = 0
  2857     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2858                           
  2859                           ; Regs used in _ISR: [wreg+status,2]
  2860     0005  3180               	pagesel	$
  2861     0006                     i1l1320:
  2862                           
  2863                           ;main.c: 469:     if(PIR1bits.RCIF){
  2864     0006  0020               	movlb	0	; select bank0
  2865     0007  1E91               	btfss	17,5	;volatile
  2866     0008  280A               	goto	u32_21
  2867     0009  280B               	goto	u32_20
  2868     000A                     u32_21:
  2869     000A  281B               	goto	i1l360
  2870     000B                     u32_20:
  2871     000B                     i1l1322:
  2872                           
  2873                           ;main.c: 470:         PIR1bits.RCIF = 0;
  2874     000B  1291               	bcf	17,5	;volatile
  2875                           
  2876                           ;main.c: 471:         if(RC1STAbits.FERR || RC1STAbits.OERR){
  2877     000C  0023               	movlb	3	; select bank3
  2878     000D  191D               	btfsc	29,2	;volatile
  2879     000E  2810               	goto	u33_21
  2880     000F  2811               	goto	u33_20
  2881     0010                     u33_21:
  2882     0010  2815               	goto	i1l1326
  2883     0011                     u33_20:
  2884     0011                     i1l1324:
  2885     0011  1C9D               	btfss	29,1	;volatile
  2886     0012  2814               	goto	u34_21
  2887     0013  2815               	goto	u34_20
  2888     0014                     u34_21:
  2889     0014  2819               	goto	i1l1330
  2890     0015                     u34_20:
  2891     0015                     i1l1326:
  2892                           
  2893                           ;main.c: 472:             RC1STA = 0x00;
  2894     0015  019D               	clrf	29	;volatile
  2895     0016                     i1l1328:
  2896                           
  2897                           ;main.c: 473:             RC1STA = 0x90;
  2898     0016  3090               	movlw	144
  2899     0017  009D               	movwf	29	;volatile
  2900                           
  2901                           ;main.c: 474:         }
  2902     0018  281B               	goto	i1l360
  2903     0019                     i1l1330:
  2904                           
  2905                           ;main.c: 476:             g_ReadData = RC1REG;
  2906     0019  0819               	movf	25,w	;volatile
  2907     001A  00FC               	movwf	_g_ReadData
  2908     001B                     i1l360:
  2909     001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2910     001C  0009               	retfie
  2911     001D                     __end_of_ISR:
  2912     007E                     btemp	set	126	;btemp
  2913     007E                     int$flags	set	126
  2914     007E                     wtemp0	set	126
  2915                           
  2916                           	psect	idloc
  2917                           
  2918                           ;Config register IDLOC0 @ 0x8000
  2919                           ;	unspecified, using default values
  2920     8000                     	org	32768
  2921     8000  3FFF               	dw	16383
  2922                           
  2923                           ;Config register IDLOC1 @ 0x8001
  2924                           ;	unspecified, using default values
  2925     8001                     	org	32769
  2926     8001  3FFF               	dw	16383
  2927                           
  2928                           ;Config register IDLOC2 @ 0x8002
  2929                           ;	unspecified, using default values
  2930     8002                     	org	32770
  2931     8002  3FFF               	dw	16383
  2932                           
  2933                           ;Config register IDLOC3 @ 0x8003
  2934                           ;	unspecified, using default values
  2935     8003                     	org	32771
  2936     8003  3FFF               	dw	16383
  2937                           
  2938                           	psect	config
  2939                           
  2940                           ;Config register CONFIG1 @ 0x8007
  2941                           ;	Oscillator Selection Bits
  2942                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2943                           ;	Watchdog Timer Enable
  2944                           ;	WDTE = OFF, WDT disabled
  2945                           ;	Power-up Timer Enable
  2946                           ;	PWRTE = ON, PWRT enabled
  2947                           ;	MCLR Pin Function Select
  2948                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2949                           ;	Flash Program Memory Code Protection
  2950                           ;	CP = OFF, Program memory code protection is disabled
  2951                           ;	Brown-out Reset Enable
  2952                           ;	BOREN = ON, Brown-out Reset enabled
  2953                           ;	Clock Out Enable
  2954                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2955                           ;	Internal/External Switchover Mode
  2956                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  2957                           ;	Fail-Safe Clock Monitor Enable
  2958                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2959     8007                     	org	32775
  2960     8007  0FC4               	dw	4036
  2961                           
  2962                           ;Config register CONFIG2 @ 0x8008
  2963                           ;	Flash Memory Self-Write Protection
  2964                           ;	WRT = OFF, Write protection off
  2965                           ;	Peripheral Pin Select one-way control
  2966                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  2967                           ;	Zero-cross detect disable
  2968                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  2969                           ;	Phase Lock Loop enable
  2970                           ;	PLLEN = ON, 4x PLL is always enabled
  2971                           ;	Stack Overflow/Underflow Reset Enable
  2972                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2973                           ;	Brown-out Reset Voltage Selection
  2974                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  2975                           ;	Low-Power Brown Out Reset
  2976                           ;	LPBOR = OFF, Low-Power BOR is disabled
  2977                           ;	Low-Voltage Programming Enable
  2978                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2979     8008                     	org	32776
  2980     8008  1BFF               	dw	7167

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     28      52
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motorA
    _main->_motorB
    _main->_motorC
    _main->_motorD
    _motorD->___wmul
    _motorC->___wmul
    _motorB->___wmul
    _motorA->___wmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    4913
                                             10 COMMON     2     2      0
                                              0 BANK0     28    28      0
                             _LEDOFF
                              _LEDON
                     _PushSwitchRead
                             _motorA
                             _motorB
                             _motorC
                             _motorD
                       _switchC_Read
 ---------------------------------------------------------------------------------
 (1) _switchC_Read                                         4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _motorD                                               4     2      2    1161
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorC                                               4     2      2    1161
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorB                                               4     2      2    1161
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorA                                               4     2      2    1161
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PushSwitchRead                                       5     3      2       0
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LEDON                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDOFF                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDOFF
   _LEDON
   _PushSwitchRead
   _motorA
     ___wmul
   _motorB
     ___wmul
   _motorC
     ___wmul
   _motorD
     ___wmul
   _switchC_Read

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      C       D       3       92.9%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     1C      34       5       65.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      41      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      41      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 16 16:15:05 2023

    ___wmul@multiplicand 0072                      l233 034E                      l252 0309  
                    l237 037C                      l430 039B                      l263 0268  
                    l248 02DB                      l346 03D4                      l282 0223  
                    l267 0296                      l428 0387                      l349 03D7  
                    l285 03C0                      l278 01F5                      l294 03CB  
                    u400 0328                      u401 0327                      u410 0339  
                    u411 0338                      u420 0352                      u500 01F9  
                    u421 0351                      u405 0324                      u501 01F8  
                    u350 0383                      u430 02A4                      u510 0231  
                    u351 0382                      u415 0335                      u431 02A3  
                    u511 0230                      u440 02B5                      u520 0242  
                    u441 02B4                      u521 0241                      u450 02C6  
                    u530 0253                      u451 02C5                      u435 02A0  
                    u531 0252                      u515 022D                      u380 0397  
                    u460 02DF                      u540 026C                      _ISR 0004  
                    u381 0396                      u365 0388                      u461 02DE  
                    u445 02B1                      u541 026B                      u525 023E  
                    u390 0317                      u470 01BE                      u550 00E2  
                    u375 038D                      u391 0316                      u455 02C2  
                    u535 024F                      u471 01BD                      u607 009D  
                    u480 01CF                      u560 00F4                      u481 01CE  
                    u617 0133                      u561 00F3                      u490 01E0  
                    u570 014A                      u395 0313                      u491 01DF  
                    u475 01BA                      u627 0197                      u571 0149  
                    u580 0158                      u485 01CB                      u581 0157  
                    u590 01AE                      u495 01DC                      u591 01AD  
                    u575 0146                      u595 01AA                      wreg 0009  
                   ?_ISR 0070                     l1400 02C8                     l1410 02F0  
                   l1402 02D4                     l1340 0391                     l1332 037D  
                   l1420 0306                     l1412 02FC                     l1404 02D8  
                   l1502 03D2                     l1342 0397                     l1334 037F  
                   l1350 030A                     l1422 0308                     l1414 02FF  
                   l1406 02DF                     l1430 01C2                     l1510 0030  
                   l1504 03B4                     l1336 0383                     l1360 0339  
                   l1352 0317                     l1416 0300                     l1408 02EE  
                   l1440 01EE                     l1432 01CF                     l1600 0096  
                   l1520 0042                     l1512 0033                     l1338 038C  
                   l1370 0361                     l1362 033B                     l1354 031B  
                   l1418 0303                     l1450 0216                     l1442 01F2  
                   l1434 01D3                     l1426 01B1                     l1346 03C1  
                   l1610 00AA                     l1602 0097                     l1530 004E  
                   l1522 0044                     l1514 0035                     l1508 03D5  
                   l1372 0363                     l1380 0376                     l1364 0347  
                   l1356 0328                     l1460 0222                     l1452 0219  
                   l1444 01F9                     l1436 01E0                     l1428 01BE  
                   l1620 00B0                     l1612 00AC                     l1604 0098  
                   l1540 005B                     l1532 0050                     l1524 0047  
                   l1516 0038                     l1382 0379                     l1374 036F  
                   l1366 034B                     l1358 032C                     l1390 02A4  
                   l1470 0242                     l1454 021A                     l1446 0208  
                   l1438 01E2                     l1630 00B9                     l1622 00B2  
                   l1614 00AD                     l1606 00A4                     l1550 0067  
                   l1542 005D                     l1534 0052                     l1526 0048  
                   l1518 003B                     l1384 037B                     l1376 0372  
                   l1368 0352                     l1392 02A8                     l1480 0265  
                   l1472 0246                     l1464 0224                     l1448 020A  
                   l1456 021D                     l1640 00C2                     l1632 00BA  
                   l1624 00B4                     l1616 00AE                     l1608 00A7  
                   l1560 0073                     l1552 0069                     l1544 005E  
                   l1536 0055                     l1528 0049                     l1378 0373  
                   l1394 02B5                     l1490 028C                     l1482 026C  
                   l1474 0253                     l1466 0231                     l1458 0220  
                   l1650 00CD                     l1642 00C5                     l1634 00BB  
                   l1626 00B6                     l1618 00AF                     l1570 007E  
                   l1562 0075                     l1554 006A                     l1546 0061  
                   l1538 0058                     l1396 02B9                     l1388 0297  
                   l1492 028D                     l1484 027B                     l1476 0255  
                   l1468 0235                     l1660 00D6                     l1652 00CF  
                   l1644 00C7                     l1636 00BC                     l1628 00B8  
                   l1580 0088                     l1572 007F                     l1564 0076  
                   l1556 006D                     l1548 0064                     l1398 02C6  
                   l1486 027D                     l1494 0290                     l1478 0261  
                   l1670 00EB                     l1662 00D8                     l1654 00D1  
                   l1646 00C9                     l1638 00BF                     l1590 008E  
                   l1582 0089                     l1574 0080                     l1566 0079  
                   l1558 0070                     l1496 0293                     l1488 0289  
                   l1672 00F4                     l1664 00E6                     l1656 00D2  
                   l1648 00CB                     l1592 0090                     l1584 008A  
                   l1576 0083                     l1568 007C                     l1498 0295  
                   l1682 014F                     l1674 0115                     l1658 00D3  
                   l1594 0092                     l1586 008B                     l1578 0086  
                   l1684 0158                     l1676 012D                     l1596 0094  
                   l1588 008C                     l1686 0179                     l1678 014A  
                   l1598 0095                     l1688 0191                     _LATA 010C  
                   _LATB 010D                     _LATC 010E                     _T2PR 0494  
                   _WPUA 020C                     _WPUB 020D                     _WPUC 020E  
                   _main 0030                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 001D                    ??_ISR 0070                    ?_main 0070  
                  _T2CON 0495                    _LEDON 03D2                    i1l360 001B  
                  u32_20 000B                    u32_21 000A                    u33_20 0011  
                  u33_21 0010                    u34_20 0015                    u34_21 0014  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _RXPPS 0E3D                    main@i 0038                    status 0003  
                  wtemp0 007E             _switchC_Read 03C1          __initialization 001F  
           __end_of_main 01B1                   ??_main 007A                   ?_LEDON 0070  
                 _ADCON0 0490                   _ADCON1 0491         ??_PushSwitchRead 0072  
                 _ADRESH 048F                   _ADRESL 048E                   _CCPR1H 0292  
                 _CCPR1L 0291                   _ANSELA 018C                   _ANSELB 018D  
                 _ANSELC 018E                   _LEDOFF 03D5                   _RC1REG 0199  
                 _RA4PPS 0E94                   _RC0PPS 0EA0                   _RA5PPS 0E95  
                 _RC1PPS 0EA1                   _RC1STA 019D                   _RB4PPS 0E9C  
                 _RA6PPS 0E96                   _RC2PPS 0EA2                   _RA7PPS 0E97  
                 _RC3PPS 0EA3                   _RC4PPS 0EA4                   i1l1320 0006  
                 i1l1330 0019                   i1l1322 000B                   _RC5PPS 0EA5  
                 i1l1324 0011                   i1l1326 0015                   i1l1328 0016  
                 _OSCCON 009B                   _TX1REG 019A                   _TX1STA 019E  
           _CCPTMRS1bits 029E             _CCPTMRS2bits 029F                   ___wmul 037D  
                 _motorA 030A                   _motorB 0297                   _motorC 0224  
                 _motorD 01B1  __end_of__initialization 002C            __end_of_LEDON 03D5  
             _g_ReadData 007C           __pcstackCOMMON 0070             __pidataBANK0 039C  
                ??_LEDON 0070           _OPTION_REGbits 0097                  ?_LEDOFF 0070  
           _T2CLKCONbits 0497               __pmaintext 0030                  ?___wmul 0070  
             __pintentry 0004                  _CCP1CON 0293                  ?_motorA 0076  
                ?_motorB 0076                  ?_motorC 0076                  ?_motorD 0076  
                _SP1BRGH 019C                  _SP1BRGL 019B                  _PWM3DCH 0615  
                _PWM3DCL 0614                  _PWM4DCH 0618                  _PWM4DCL 0617  
                _PWM5DCH 0D94                  _PWM5DCL 0D93                  _PWM6DCH 0DA4  
                _PWM3CON 0616                  _PWM6DCL 0DA3                  _PWM4CON 0619  
                _PWM5CON 0D9B                  _PWM9DCH 061B                  _PWM6CON 0DAB  
                _PWM9DCL 061A                  _PWM5OFH 0D98                  _PWM5OFL 0D97  
                _PWM5PHH 0D92                  _PWM6OFH 0DA8                  _PWM9CON 061C  
                _PWM5PHL 0D91                  _PWM6OFL 0DA7                  _PWM6PHH 0DA2  
                _PWM6PHL 0DA1                  _PWM5PRH 0D96                  _PWM5PRL 0D95  
                _PWM6PRH 0DA6                  _PWM6PRL 0DA5                  __ptext1 03C1  
                __ptext2 01B1                  __ptext3 0224                  __ptext4 0297  
                __ptext5 030A                  __ptext6 037D                  __ptext7 03B4  
                __ptext8 03D2                  __ptext9 03D5                  main@str 0020  
   end_of_initialization 002C                  init_ram 03CC                  initloop 03CD  
             main@F12360 003C                _PWM5LDCON 0D9F                _PWM6LDCON 0DAF  
              _PWM5OFCON 0DA0                _PWM6OFCON 0DB0                _PORTAbits 000C  
         __end_of_LEDOFF 03D8           __end_of___wmul 039C           __end_of_motorA 037D  
         __end_of_motorB 030A           __end_of_motorC 0297           __end_of_motorD 0224  
    start_initialization 001F              __end_of_ISR 001D                 ??_LEDOFF 0070  
          _PWM5LDCONbits 0D9F                 ??___wmul 0074              __pdataBANK0 003C  
          _PWM6LDCONbits 0DAF                 ??_motorA 0078                 ??_motorB 0078  
               ??_motorC 0078                 ??_motorD 0078              __pbssCOMMON 007C  
              ___latbits 0003            __pcstackBANK0 0020            ?_switchC_Read 0070  
               _BAUD1CON 019F               motorA@duty 0076               motorB@duty 0076  
             motorC@duty 0076               motorD@duty 0076           ??_switchC_Read 0072  
         ___wmul@product 0074                 _LATAbits 010C                 _LATCbits 010E  
               _PIE1bits 0091                 _PIR1bits 0011                 _PWM5TMRH 0D9A  
               _PWM5TMRL 0D99                 _PWM6TMRH 0DAA                 _PWM6TMRL 0DA9  
             _ADCON0bits 0490                main@i_565 003A        ___wmul@multiplier 0070  
         _PushSwitchRead 03B4   __end_of_PushSwitchRead 03C1               _RC1STAbits 019D  
               int$flags 007E     __end_of_switchC_Read 03CC               _INTCONbits 000B  
               intlevel1 0000          ?_PushSwitchRead 0070               _PWM5CLKCON 0D9E  
             _PWM6CLKCON 0DAE  
