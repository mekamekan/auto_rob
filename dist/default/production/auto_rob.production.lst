

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 17 14:07:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1778
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1778 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0000                     	;# 
    71     0001                     	;# 
    72     0002                     	;# 
    73     0003                     	;# 
    74     0004                     	;# 
    75     0005                     	;# 
    76     0006                     	;# 
    77     0007                     	;# 
    78     0008                     	;# 
    79     0009                     	;# 
    80     000A                     	;# 
    81     000B                     	;# 
    82     000C                     	;# 
    83     000D                     	;# 
    84     000E                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0013                     	;# 
    89     0014                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001C                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     0090                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0095                     	;# 
   112     0096                     	;# 
   113     0097                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     0111                     	;# 
   126     0112                     	;# 
   127     0113                     	;# 
   128     0114                     	;# 
   129     0115                     	;# 
   130     0116                     	;# 
   131     0117                     	;# 
   132     0118                     	;# 
   133     0119                     	;# 
   134     011A                     	;# 
   135     011B                     	;# 
   136     011C                     	;# 
   137     011D                     	;# 
   138     018C                     	;# 
   139     018D                     	;# 
   140     018E                     	;# 
   141     0191                     	;# 
   142     0191                     	;# 
   143     0192                     	;# 
   144     0193                     	;# 
   145     0193                     	;# 
   146     0194                     	;# 
   147     0195                     	;# 
   148     0196                     	;# 
   149     0197                     	;# 
   150     0199                     	;# 
   151     0199                     	;# 
   152     0199                     	;# 
   153     019A                     	;# 
   154     019A                     	;# 
   155     019A                     	;# 
   156     019B                     	;# 
   157     019B                     	;# 
   158     019B                     	;# 
   159     019B                     	;# 
   160     019B                     	;# 
   161     019C                     	;# 
   162     019C                     	;# 
   163     019C                     	;# 
   164     019D                     	;# 
   165     019D                     	;# 
   166     019D                     	;# 
   167     019E                     	;# 
   168     019E                     	;# 
   169     019E                     	;# 
   170     019F                     	;# 
   171     019F                     	;# 
   172     019F                     	;# 
   173     019F                     	;# 
   174     019F                     	;# 
   175     020C                     	;# 
   176     020D                     	;# 
   177     020E                     	;# 
   178     0210                     	;# 
   179     0211                     	;# 
   180     0211                     	;# 
   181     0212                     	;# 
   182     0212                     	;# 
   183     0213                     	;# 
   184     0213                     	;# 
   185     0214                     	;# 
   186     0214                     	;# 
   187     0215                     	;# 
   188     0215                     	;# 
   189     0215                     	;# 
   190     0215                     	;# 
   191     0216                     	;# 
   192     0216                     	;# 
   193     0217                     	;# 
   194     0217                     	;# 
   195     021B                     	;# 
   196     021C                     	;# 
   197     021D                     	;# 
   198     021E                     	;# 
   199     021F                     	;# 
   200     028C                     	;# 
   201     028D                     	;# 
   202     028E                     	;# 
   203     0291                     	;# 
   204     0291                     	;# 
   205     0292                     	;# 
   206     0293                     	;# 
   207     0294                     	;# 
   208     0295                     	;# 
   209     0295                     	;# 
   210     0296                     	;# 
   211     0297                     	;# 
   212     0298                     	;# 
   213     0299                     	;# 
   214     0299                     	;# 
   215     029A                     	;# 
   216     029B                     	;# 
   217     029C                     	;# 
   218     029E                     	;# 
   219     029F                     	;# 
   220     030C                     	;# 
   221     030D                     	;# 
   222     030E                     	;# 
   223     0315                     	;# 
   224     0316                     	;# 
   225     0317                     	;# 
   226     0318                     	;# 
   227     0319                     	;# 
   228     031B                     	;# 
   229     031C                     	;# 
   230     031D                     	;# 
   231     031E                     	;# 
   232     031F                     	;# 
   233     038C                     	;# 
   234     038D                     	;# 
   235     038E                     	;# 
   236     0390                     	;# 
   237     0391                     	;# 
   238     0392                     	;# 
   239     0393                     	;# 
   240     0394                     	;# 
   241     0395                     	;# 
   242     0396                     	;# 
   243     0397                     	;# 
   244     0398                     	;# 
   245     0399                     	;# 
   246     039D                     	;# 
   247     039E                     	;# 
   248     039F                     	;# 
   249     040D                     	;# 
   250     040F                     	;# 
   251     040F                     	;# 
   252     0410                     	;# 
   253     0411                     	;# 
   254     0412                     	;# 
   255     0413                     	;# 
   256     0413                     	;# 
   257     0414                     	;# 
   258     0414                     	;# 
   259     0415                     	;# 
   260     0416                     	;# 
   261     0417                     	;# 
   262     0418                     	;# 
   263     041A                     	;# 
   264     041A                     	;# 
   265     041B                     	;# 
   266     041B                     	;# 
   267     041C                     	;# 
   268     041D                     	;# 
   269     041E                     	;# 
   270     041F                     	;# 
   271     048E                     	;# 
   272     048E                     	;# 
   273     048F                     	;# 
   274     0490                     	;# 
   275     0491                     	;# 
   276     0492                     	;# 
   277     0493                     	;# 
   278     0493                     	;# 
   279     0494                     	;# 
   280     0494                     	;# 
   281     0495                     	;# 
   282     0496                     	;# 
   283     0497                     	;# 
   284     0498                     	;# 
   285     049A                     	;# 
   286     049A                     	;# 
   287     049B                     	;# 
   288     049B                     	;# 
   289     049C                     	;# 
   290     049D                     	;# 
   291     049E                     	;# 
   292     049F                     	;# 
   293     050F                     	;# 
   294     0510                     	;# 
   295     0511                     	;# 
   296     0512                     	;# 
   297     0513                     	;# 
   298     0514                     	;# 
   299     0515                     	;# 
   300     0516                     	;# 
   301     0517                     	;# 
   302     0518                     	;# 
   303     0519                     	;# 
   304     051A                     	;# 
   305     058D                     	;# 
   306     058E                     	;# 
   307     058F                     	;# 
   308     058F                     	;# 
   309     058F                     	;# 
   310     0590                     	;# 
   311     0590                     	;# 
   312     0591                     	;# 
   313     0592                     	;# 
   314     0592                     	;# 
   315     0592                     	;# 
   316     0593                     	;# 
   317     0593                     	;# 
   318     0594                     	;# 
   319     0595                     	;# 
   320     0595                     	;# 
   321     0596                     	;# 
   322     0597                     	;# 
   323     0597                     	;# 
   324     0598                     	;# 
   325     0599                     	;# 
   326     0599                     	;# 
   327     0599                     	;# 
   328     059A                     	;# 
   329     059A                     	;# 
   330     059E                     	;# 
   331     059F                     	;# 
   332     059F                     	;# 
   333     0614                     	;# 
   334     0614                     	;# 
   335     0615                     	;# 
   336     0616                     	;# 
   337     0617                     	;# 
   338     0617                     	;# 
   339     0618                     	;# 
   340     0619                     	;# 
   341     061A                     	;# 
   342     061A                     	;# 
   343     061B                     	;# 
   344     061C                     	;# 
   345     068D                     	;# 
   346     068E                     	;# 
   347     068F                     	;# 
   348     0690                     	;# 
   349     0691                     	;# 
   350     0692                     	;# 
   351     0693                     	;# 
   352     0694                     	;# 
   353     0695                     	;# 
   354     0696                     	;# 
   355     0697                     	;# 
   356     0698                     	;# 
   357     0699                     	;# 
   358     069A                     	;# 
   359     069B                     	;# 
   360     069C                     	;# 
   361     069D                     	;# 
   362     069E                     	;# 
   363     069F                     	;# 
   364     070D                     	;# 
   365     070E                     	;# 
   366     070F                     	;# 
   367     0710                     	;# 
   368     0711                     	;# 
   369     0712                     	;# 
   370     0713                     	;# 
   371     0714                     	;# 
   372     0715                     	;# 
   373     0716                     	;# 
   374     0717                     	;# 
   375     0718                     	;# 
   376     0719                     	;# 
   377     071A                     	;# 
   378     071B                     	;# 
   379     071C                     	;# 
   380     071D                     	;# 
   381     071E                     	;# 
   382     071F                     	;# 
   383     078E                     	;# 
   384     078F                     	;# 
   385     0790                     	;# 
   386     0791                     	;# 
   387     0792                     	;# 
   388     0793                     	;# 
   389     0794                     	;# 
   390     0795                     	;# 
   391     0796                     	;# 
   392     0797                     	;# 
   393     0798                     	;# 
   394     0799                     	;# 
   395     079A                     	;# 
   396     079B                     	;# 
   397     079C                     	;# 
   398     079D                     	;# 
   399     079E                     	;# 
   400     079F                     	;# 
   401     080D                     	;# 
   402     080E                     	;# 
   403     080F                     	;# 
   404     0810                     	;# 
   405     0811                     	;# 
   406     0812                     	;# 
   407     0813                     	;# 
   408     0814                     	;# 
   409     0815                     	;# 
   410     0816                     	;# 
   411     0817                     	;# 
   412     0818                     	;# 
   413     0819                     	;# 
   414     081A                     	;# 
   415     081B                     	;# 
   416     081C                     	;# 
   417     081D                     	;# 
   418     081E                     	;# 
   419     081F                     	;# 
   420     090C                     	;# 
   421     090D                     	;# 
   422     090E                     	;# 
   423     090F                     	;# 
   424     0910                     	;# 
   425     0911                     	;# 
   426     0912                     	;# 
   427     0913                     	;# 
   428     0914                     	;# 
   429     0915                     	;# 
   430     0916                     	;# 
   431     0917                     	;# 
   432     0D8E                     	;# 
   433     0D8F                     	;# 
   434     0D90                     	;# 
   435     0D91                     	;# 
   436     0D91                     	;# 
   437     0D92                     	;# 
   438     0D93                     	;# 
   439     0D93                     	;# 
   440     0D94                     	;# 
   441     0D95                     	;# 
   442     0D95                     	;# 
   443     0D96                     	;# 
   444     0D97                     	;# 
   445     0D97                     	;# 
   446     0D98                     	;# 
   447     0D99                     	;# 
   448     0D99                     	;# 
   449     0D9A                     	;# 
   450     0D9B                     	;# 
   451     0D9C                     	;# 
   452     0D9C                     	;# 
   453     0D9D                     	;# 
   454     0D9D                     	;# 
   455     0D9E                     	;# 
   456     0D9F                     	;# 
   457     0DA0                     	;# 
   458     0DA1                     	;# 
   459     0DA1                     	;# 
   460     0DA2                     	;# 
   461     0DA3                     	;# 
   462     0DA3                     	;# 
   463     0DA4                     	;# 
   464     0DA5                     	;# 
   465     0DA5                     	;# 
   466     0DA6                     	;# 
   467     0DA7                     	;# 
   468     0DA7                     	;# 
   469     0DA8                     	;# 
   470     0DA9                     	;# 
   471     0DA9                     	;# 
   472     0DAA                     	;# 
   473     0DAB                     	;# 
   474     0DAC                     	;# 
   475     0DAC                     	;# 
   476     0DAD                     	;# 
   477     0DAD                     	;# 
   478     0DAE                     	;# 
   479     0DAF                     	;# 
   480     0DB0                     	;# 
   481     0DB1                     	;# 
   482     0DB1                     	;# 
   483     0DB2                     	;# 
   484     0DB3                     	;# 
   485     0DB3                     	;# 
   486     0DB4                     	;# 
   487     0DB5                     	;# 
   488     0DB5                     	;# 
   489     0DB6                     	;# 
   490     0DB7                     	;# 
   491     0DB7                     	;# 
   492     0DB8                     	;# 
   493     0DB9                     	;# 
   494     0DB9                     	;# 
   495     0DBA                     	;# 
   496     0DBB                     	;# 
   497     0DBC                     	;# 
   498     0DBC                     	;# 
   499     0DBD                     	;# 
   500     0DBD                     	;# 
   501     0DBE                     	;# 
   502     0DBF                     	;# 
   503     0DC0                     	;# 
   504     0E0C                     	;# 
   505     0E0D                     	;# 
   506     0E0E                     	;# 
   507     0E0F                     	;# 
   508     0E10                     	;# 
   509     0E11                     	;# 
   510     0E12                     	;# 
   511     0E13                     	;# 
   512     0E14                     	;# 
   513     0E15                     	;# 
   514     0E15                     	;# 
   515     0E15                     	;# 
   516     0E16                     	;# 
   517     0E16                     	;# 
   518     0E16                     	;# 
   519     0E17                     	;# 
   520     0E17                     	;# 
   521     0E17                     	;# 
   522     0E18                     	;# 
   523     0E18                     	;# 
   524     0E18                     	;# 
   525     0E19                     	;# 
   526     0E1A                     	;# 
   527     0E1B                     	;# 
   528     0E1D                     	;# 
   529     0E1E                     	;# 
   530     0E1F                     	;# 
   531     0E21                     	;# 
   532     0E22                     	;# 
   533     0E23                     	;# 
   534     0E24                     	;# 
   535     0E25                     	;# 
   536     0E26                     	;# 
   537     0E27                     	;# 
   538     0E28                     	;# 
   539     0E29                     	;# 
   540     0E2D                     	;# 
   541     0E2E                     	;# 
   542     0E2F                     	;# 
   543     0E30                     	;# 
   544     0E31                     	;# 
   545     0E32                     	;# 
   546     0E35                     	;# 
   547     0E36                     	;# 
   548     0E37                     	;# 
   549     0E38                     	;# 
   550     0E39                     	;# 
   551     0E3A                     	;# 
   552     0E3B                     	;# 
   553     0E3C                     	;# 
   554     0E3D                     	;# 
   555     0E3E                     	;# 
   556     0E90                     	;# 
   557     0E91                     	;# 
   558     0E92                     	;# 
   559     0E93                     	;# 
   560     0E94                     	;# 
   561     0E95                     	;# 
   562     0E96                     	;# 
   563     0E97                     	;# 
   564     0E98                     	;# 
   565     0E99                     	;# 
   566     0E9A                     	;# 
   567     0E9B                     	;# 
   568     0E9C                     	;# 
   569     0E9D                     	;# 
   570     0E9E                     	;# 
   571     0E9F                     	;# 
   572     0EA0                     	;# 
   573     0EA1                     	;# 
   574     0EA2                     	;# 
   575     0EA3                     	;# 
   576     0EA4                     	;# 
   577     0EA5                     	;# 
   578     0EA6                     	;# 
   579     0EA7                     	;# 
   580     0F0F                     	;# 
   581     0F10                     	;# 
   582     0F11                     	;# 
   583     0F12                     	;# 
   584     0F13                     	;# 
   585     0F14                     	;# 
   586     0F15                     	;# 
   587     0F16                     	;# 
   588     0F17                     	;# 
   589     0F18                     	;# 
   590     0F19                     	;# 
   591     0F1A                     	;# 
   592     0F1B                     	;# 
   593     0F1C                     	;# 
   594     0F1D                     	;# 
   595     0F1E                     	;# 
   596     0F1F                     	;# 
   597     0F20                     	;# 
   598     0F21                     	;# 
   599     0F22                     	;# 
   600     0F23                     	;# 
   601     0F24                     	;# 
   602     0F25                     	;# 
   603     0F26                     	;# 
   604     0F27                     	;# 
   605     0F28                     	;# 
   606     0F29                     	;# 
   607     0F2A                     	;# 
   608     0F2B                     	;# 
   609     0F2C                     	;# 
   610     0F2D                     	;# 
   611     0F2E                     	;# 
   612     0F2F                     	;# 
   613     0F30                     	;# 
   614     0F31                     	;# 
   615     0F32                     	;# 
   616     0F33                     	;# 
   617     0F34                     	;# 
   618     0F35                     	;# 
   619     0F36                     	;# 
   620     0F37                     	;# 
   621     0FE4                     	;# 
   622     0FE5                     	;# 
   623     0FE6                     	;# 
   624     0FE7                     	;# 
   625     0FE8                     	;# 
   626     0FE9                     	;# 
   627     0FEA                     	;# 
   628     0FEB                     	;# 
   629     0FED                     	;# 
   630     0FEE                     	;# 
   631     0FEF                     	;# 
   632                           
   633                           	psect	idataBANK1
   634     043E                     __pidataBANK1:
   635                           
   636                           ;initializer for main@F12361
   637     043E  3450               	retlw	80
   638     043F  346C               	retlw	108
   639     0440  3465               	retlw	101
   640     0441  3461               	retlw	97
   641     0442  3473               	retlw	115
   642     0443  3465               	retlw	101
   643     0444  3420               	retlw	32
   644     0445  3465               	retlw	101
   645     0446  346E               	retlw	110
   646     0447  3474               	retlw	116
   647     0448  3465               	retlw	101
   648     0449  3472               	retlw	114
   649     044A  3420               	retlw	32
   650     044B  3461               	retlw	97
   651     044C  3420               	retlw	32
   652     044D  3473               	retlw	115
   653     044E  3474               	retlw	116
   654     044F  3472               	retlw	114
   655     0450  3469               	retlw	105
   656     0451  346E               	retlw	110
   657     0452  3467               	retlw	103
   658     0453  340D               	retlw	13
   659     0454  340A               	retlw	10
   660     0455  3400               	retlw	0
   661     000C                     _PORTAbits	set	12
   662     000B                     _INTCONbits	set	11
   663     0011                     _PIR1bits	set	17
   664     0091                     _PIE1bits	set	145
   665     0097                     _OPTION_REGbits	set	151
   666     008E                     _TRISC	set	142
   667     008D                     _TRISB	set	141
   668     008C                     _TRISA	set	140
   669     009B                     _OSCCON	set	155
   670     010C                     _LATAbits	set	268
   671     010E                     _LATCbits	set	270
   672     010D                     _LATBbits	set	269
   673     010E                     _LATC	set	270
   674     010D                     _LATB	set	269
   675     010C                     _LATA	set	268
   676     0199                     _RC1REG	set	409
   677     019D                     _RC1STAbits	set	413
   678     019A                     _TX1REG	set	410
   679     019C                     _SP1BRGH	set	412
   680     019B                     _SP1BRGL	set	411
   681     019F                     _BAUD1CON	set	415
   682     019D                     _RC1STA	set	413
   683     019E                     _TX1STA	set	414
   684     018E                     _ANSELC	set	398
   685     018D                     _ANSELB	set	397
   686     018C                     _ANSELA	set	396
   687     020E                     _WPUC	set	526
   688     020D                     _WPUB	set	525
   689     020C                     _WPUA	set	524
   690     0295                     _CCPR2L	set	661
   691     0296                     _CCPR2H	set	662
   692     0297                     _CCP2CON	set	663
   693     0291                     _CCPR1L	set	657
   694     0292                     _CCPR1H	set	658
   695     029E                     _CCPTMRS1bits	set	670
   696     0293                     _CCP1CON	set	659
   697     029F                     _CCPTMRS2bits	set	671
   698     048F                     _ADRESH	set	1167
   699     048E                     _ADRESL	set	1166
   700     0490                     _ADCON0bits	set	1168
   701     0491                     _ADCON1	set	1169
   702     0490                     _ADCON0	set	1168
   703     0494                     _T2PR	set	1172
   704     0495                     _T2CON	set	1173
   705     0497                     _T2CLKCONbits	set	1175
   706     061A                     _PWM9DCL	set	1562
   707     061B                     _PWM9DCH	set	1563
   708     061C                     _PWM9CON	set	1564
   709     0617                     _PWM4DCL	set	1559
   710     0618                     _PWM4DCH	set	1560
   711     0619                     _PWM4CON	set	1561
   712     0614                     _PWM3DCL	set	1556
   713     0615                     _PWM3DCH	set	1557
   714     0616                     _PWM3CON	set	1558
   715     0DAF                     _PWM6LDCONbits	set	3503
   716     0D9F                     _PWM5LDCONbits	set	3487
   717     0DA9                     _PWM6TMRL	set	3497
   718     0DAA                     _PWM6TMRH	set	3498
   719     0DA7                     _PWM6OFL	set	3495
   720     0DA8                     _PWM6OFH	set	3496
   721     0DA5                     _PWM6PRL	set	3493
   722     0DA6                     _PWM6PRH	set	3494
   723     0DA3                     _PWM6DCL	set	3491
   724     0DA4                     _PWM6DCH	set	3492
   725     0DA1                     _PWM6PHL	set	3489
   726     0DA2                     _PWM6PHH	set	3490
   727     0DB0                     _PWM6OFCON	set	3504
   728     0DAF                     _PWM6LDCON	set	3503
   729     0DAE                     _PWM6CLKCON	set	3502
   730     0DAB                     _PWM6CON	set	3499
   731     0D99                     _PWM5TMRL	set	3481
   732     0D9A                     _PWM5TMRH	set	3482
   733     0D97                     _PWM5OFL	set	3479
   734     0D98                     _PWM5OFH	set	3480
   735     0D95                     _PWM5PRL	set	3477
   736     0D96                     _PWM5PRH	set	3478
   737     0D93                     _PWM5DCL	set	3475
   738     0D94                     _PWM5DCH	set	3476
   739     0D91                     _PWM5PHL	set	3473
   740     0D92                     _PWM5PHH	set	3474
   741     0DA0                     _PWM5OFCON	set	3488
   742     0D9F                     _PWM5LDCON	set	3487
   743     0D9E                     _PWM5CLKCON	set	3486
   744     0D9B                     _PWM5CON	set	3483
   745     0E3D                     _RXPPS	set	3645
   746     0EA2                     _RC2PPS	set	3746
   747     0EA0                     _RC0PPS	set	3744
   748     0E97                     _RA7PPS	set	3735
   749     0E94                     _RA4PPS	set	3732
   750     0E9B                     _RB3PPS	set	3739
   751     0E9C                     _RB4PPS	set	3740
   752     0EA4                     _RC4PPS	set	3748
   753     0EA5                     _RC5PPS	set	3749
   754     0EA7                     _RC7PPS	set	3751
   755     0EA3                     _RC3PPS	set	3747
   756     0EA1                     _RC1PPS	set	3745
   757     0E96                     _RA6PPS	set	3734
   758     0E95                     _RA5PPS	set	3733
   759                           
   760                           	psect	stringtext1
   761     046F                     __pstringtext1:
   762     046F                     STR_1:
   763     046F  3456               	retlw	86	;'V'
   764     0470  346F               	retlw	111	;'o'
   765     0471  346C               	retlw	108	;'l'
   766     0472  343A               	retlw	58	;':'
   767     0473  3425               	retlw	37	;'%'
   768     0474  3475               	retlw	117	;'u'
   769     0475  340D               	retlw	13
   770     0476  340A               	retlw	10
   771     0477  3400               	retlw	0
   772                           
   773                           	psect	stringtext2
   774     0000                     __pstringtext2:
   775                           
   776                           	psect	cinit
   777     0020                     start_initialization:	
   778                           ; #config settings
   779                           
   780     0020                     __initialization:
   781                           
   782                           ; Initialize objects allocated to BANK1
   783     0020  303E               	movlw	low __pidataBANK1
   784     0021  0084               	movwf	4
   785     0022  3084               	movlw	(high __pidataBANK1)| (0+128)
   786     0023  0085               	movwf	5
   787     0024  30C0               	movlw	low __pdataBANK1
   788     0025  0086               	movwf	6
   789     0026  3000               	movlw	high __pdataBANK1
   790     0027  0087               	movwf	7
   791     0028  3018               	movlw	24
   792     0029  3184  2481  3180   	fcall	init_ram
   793                           
   794                           ; Clear objects allocated to BANK0
   795     002C  01E7               	clrf	__pbssBANK0& (0+127)
   796     002D  01E8               	clrf	(__pbssBANK0+1)& (0+127)
   797     002E  01E9               	clrf	(__pbssBANK0+2)& (0+127)
   798     002F  01EA               	clrf	(__pbssBANK0+3)& (0+127)
   799     0030  01EB               	clrf	(__pbssBANK0+4)& (0+127)
   800     0031  01EC               	clrf	(__pbssBANK0+5)& (0+127)
   801                           
   802                           ; Clear objects allocated to BANK1
   803     0032  30A0               	movlw	low __pbssBANK1
   804     0033  0084               	movwf	4
   805     0034  3000               	movlw	high __pbssBANK1
   806     0035  0085               	movwf	5
   807     0036  3020               	movlw	32
   808     0037  3184  2487  3180   	fcall	clear_ram0
   809     003A                     end_of_initialization:	
   810                           ;End of C runtime variable initialization code
   811                           
   812     003A                     __end_of__initialization:
   813     003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   814     003B  0020               	movlb	0
   815     003C  3180  283E         	ljmp	_main	;jump to C main() function
   816                           
   817                           	psect	bssBANK0
   818     0067                     __pbssBANK0:
   819     0067                     _width:
   820     0067                     	ds	2
   821     0069                     _prec:
   822     0069                     	ds	2
   823     006B                     _flags:
   824     006B                     	ds	1
   825     006C                     _g_ReadData:
   826     006C                     	ds	1
   827                           
   828                           	psect	bssBANK1
   829     00A0                     __pbssBANK1:
   830     00A0                     _dbuf:
   831     00A0                     	ds	32
   832                           
   833                           	psect	dataBANK1
   834     00C0                     __pdataBANK1:
   835     00C0                     main@F12361:
   836     00C0                     	ds	24
   837                           
   838                           	psect	inittext
   839     0481                     init_ram:
   840     0481  00FE               	movwf	btemp
   841     0482                     initloop:
   842     0482  0012               	moviw fsr0++
   843     0483  001E               	movwi fsr1++
   844     0484  0BFE               	decfsz	btemp,f
   845     0485  2C82               	goto	initloop
   846     0486  3400               	retlw	0
   847                           
   848                           	psect	clrtext
   849     0487                     clear_ram0:	
   850                           ;	Called with FSR0 containing the base address, and
   851                           ;	WREG with the size to clear
   852                           
   853     0487  0064               	clrwdt	;clear the watchdog before getting into this loop
   854     0488                     clrloop0:
   855     0488  0180               	clrf	0	;clear RAM location pointed to by FSR
   856     0489  3101               	addfsr 0,1
   857     048A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   858     048B  2C88               	goto	clrloop0	;have we reached the end yet?
   859     048C  3400               	retlw	0	;all done for this memory range, return
   860                           
   861                           	psect	cstackBANK1
   862     00D8                     __pcstackBANK1:
   863     00D8                     main@str:
   864                           
   865                           ; 24 bytes @ 0x0
   866     00D8                     	ds	24
   867                           
   868                           	psect	cstackCOMMON
   869     0070                     __pcstackCOMMON:
   870     0070                     ?_main:
   871     0070                     ?_DataWrite:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ??_DataWrite:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     ?_putch:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_ISR:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ??_ISR:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ??___lodiv:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ??___lomod:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ?_ADC_result:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     DataWrite@data:	
   896                           ; 2 bytes @ 0x0
   897                           
   898                           
   899                           ; 1 bytes @ 0x0
   900     0070                     	ds	1
   901     0071                     ??_putch:
   902     0071                     putch@data:	
   903                           ; 1 bytes @ 0x1
   904                           
   905     0071                     ___lomod@counter:	
   906                           ; 1 bytes @ 0x1
   907                           
   908     0071                     ___lodiv@quotient:	
   909                           ; 1 bytes @ 0x1
   910                           
   911                           
   912                           ; 8 bytes @ 0x1
   913     0071                     	ds	1
   914     0072                     ??_ADC_result:
   915     0072                     ?_fputc:	
   916                           ; 1 bytes @ 0x2
   917                           
   918     0072                     fputc@c:	
   919                           ; 2 bytes @ 0x2
   920                           
   921                           
   922                           ; 2 bytes @ 0x2
   923     0072                     	ds	1
   924     0073                     ADC_result@adcValue:
   925                           
   926                           ; 2 bytes @ 0x3
   927     0073                     	ds	1
   928     0074                     fputc@fp:
   929                           
   930                           ; 1 bytes @ 0x4
   931     0074                     	ds	1
   932     0075                     ??_fputc:
   933     0075                     ADC_result@ch:	
   934                           ; 1 bytes @ 0x5
   935                           
   936                           
   937                           ; 1 bytes @ 0x5
   938     0075                     	ds	1
   939     0076                     ?_sensorA_Read:
   940                           
   941                           ; 2 bytes @ 0x6
   942     0076                     	ds	2
   943     0078                     ??_sensorA_Read:
   944                           
   945                           ; 1 bytes @ 0x8
   946     0078                     	ds	1
   947     0079                     ___lodiv@counter:
   948                           
   949                           ; 1 bytes @ 0x9
   950     0079                     	ds	1
   951     007A                     ?_fputs:
   952     007A                     fputs@fp:	
   953                           ; 2 bytes @ 0xA
   954                           
   955                           
   956                           ; 1 bytes @ 0xA
   957     007A                     	ds	1
   958     007B                     ??_fputs:
   959                           
   960                           ; 1 bytes @ 0xB
   961     007B                     	ds	2
   962     007D                     ??_pad:
   963                           
   964                           ; 1 bytes @ 0xD
   965     007D                     	ds	1
   966     007E                     ??_printf:
   967                           
   968                           	psect	cstackBANK0
   969     0020                     __pcstackBANK0:	
   970                           ; 1 bytes @ 0xE
   971                           
   972     0020                     ?___lodiv:
   973     0020                     ?___lomod:	
   974                           ; 8 bytes @ 0x0
   975                           
   976     0020                     fputs@c:	
   977                           ; 8 bytes @ 0x0
   978                           
   979     0020                     ___lodiv@divisor:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0020                     ___lomod@divisor:	
   983                           ; 8 bytes @ 0x0
   984                           
   985                           
   986                           ; 8 bytes @ 0x0
   987     0020                     	ds	1
   988     0021                     fputs@i:
   989                           
   990                           ; 2 bytes @ 0x1
   991     0021                     	ds	2
   992     0023                     fputs@s:
   993                           
   994                           ; 1 bytes @ 0x3
   995     0023                     	ds	1
   996     0024                     ?_pad:
   997     0024                     pad@buf:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000                           
  1001                           ; 1 bytes @ 0x4
  1002     0024                     	ds	1
  1003     0025                     pad@p:
  1004                           
  1005                           ; 2 bytes @ 0x5
  1006     0025                     	ds	2
  1007     0027                     pad@i:
  1008                           
  1009                           ; 2 bytes @ 0x7
  1010     0027                     	ds	1
  1011     0028                     ___lodiv@dividend:
  1012     0028                     ___lomod@dividend:	
  1013                           ; 8 bytes @ 0x8
  1014                           
  1015                           
  1016                           ; 8 bytes @ 0x8
  1017     0028                     	ds	1
  1018     0029                     pad@w:
  1019                           
  1020                           ; 2 bytes @ 0x9
  1021     0029                     	ds	2
  1022     002B                     pad@fp:
  1023                           
  1024                           ; 1 bytes @ 0xB
  1025     002B                     	ds	5
  1026     0030                     ?_utoa:
  1027     0030                     utoa@d:	
  1028                           ; 1 bytes @ 0x10
  1029                           
  1030                           
  1031                           ; 8 bytes @ 0x10
  1032     0030                     	ds	8
  1033     0038                     ??_utoa:
  1034                           
  1035                           ; 1 bytes @ 0x18
  1036     0038                     	ds	1
  1037     0039                     utoa@w:
  1038                           
  1039                           ; 2 bytes @ 0x19
  1040     0039                     	ds	2
  1041     003B                     utoa@p:
  1042                           
  1043                           ; 2 bytes @ 0x1B
  1044     003B                     	ds	2
  1045     003D                     utoa@fp:
  1046                           
  1047                           ; 1 bytes @ 0x1D
  1048     003D                     	ds	1
  1049     003E                     utoa@n:
  1050                           
  1051                           ; 8 bytes @ 0x1E
  1052     003E                     	ds	8
  1053     0046                     utoa@i:
  1054                           
  1055                           ; 2 bytes @ 0x26
  1056     0046                     	ds	2
  1057     0048                     ?_vfpfcnvrt:
  1058     0048                     vfpfcnvrt@fmt:	
  1059                           ; 1 bytes @ 0x28
  1060                           
  1061                           
  1062                           ; 1 bytes @ 0x28
  1063     0048                     	ds	1
  1064     0049                     vfpfcnvrt@ap:
  1065                           
  1066                           ; 1 bytes @ 0x29
  1067     0049                     	ds	1
  1068     004A                     ??_vfpfcnvrt:
  1069                           
  1070                           ; 1 bytes @ 0x2A
  1071     004A                     	ds	4
  1072     004E                     vfpfcnvrt@convarg:
  1073                           
  1074                           ; 8 bytes @ 0x2E
  1075     004E                     	ds	8
  1076     0056                     vfpfcnvrt@fp:
  1077                           
  1078                           ; 1 bytes @ 0x36
  1079     0056                     	ds	1
  1080     0057                     vfpfcnvrt@cp:
  1081                           
  1082                           ; 2 bytes @ 0x37
  1083     0057                     	ds	2
  1084     0059                     ?_vfprintf:
  1085     0059                     vfprintf@fmt:	
  1086                           ; 2 bytes @ 0x39
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0x39
  1090     0059                     	ds	2
  1091     005B                     vfprintf@ap:
  1092                           
  1093                           ; 1 bytes @ 0x3B
  1094     005B                     	ds	1
  1095     005C                     ??_vfprintf:
  1096                           
  1097                           ; 1 bytes @ 0x3C
  1098     005C                     	ds	1
  1099     005D                     vfprintf@fp:
  1100                           
  1101                           ; 1 bytes @ 0x3D
  1102     005D                     	ds	1
  1103     005E                     vfprintf@cfmt:
  1104                           
  1105                           ; 2 bytes @ 0x3E
  1106     005E                     	ds	2
  1107     0060                     ?_printf:
  1108     0060                     printf@fmt:	
  1109                           ; 2 bytes @ 0x40
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x40
  1113     0060                     	ds	4
  1114     0064                     printf@ap:
  1115                           
  1116                           ; 1 bytes @ 0x44
  1117     0064                     	ds	1
  1118     0065                     ??_main:
  1119                           
  1120                           ; 1 bytes @ 0x45
  1121     0065                     	ds	2
  1122                           
  1123                           	psect	maintext
  1124     003E                     __pmaintext:	
  1125 ;;
  1126 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1127 ;;
  1128 ;; *************** function _main *****************
  1129 ;; Defined at:
  1130 ;;		line 65 in file "main.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  str            24    0[BANK1 ] unsigned char [24]
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : B1F/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1145 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1146 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1147 ;;      Totals:         0       2      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1148 ;;Total ram usage:       26 bytes
  1149 ;; Hardware stack levels required when called: 10
  1150 ;; This function calls:
  1151 ;;		_printf
  1152 ;;		_sensorA_Read
  1153 ;; This function is called by:
  1154 ;;		Startup code after reset
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158     003E                     _main:	
  1159                           ;psect for function _main
  1160                           
  1161     003E                     l1753:	
  1162                           ;incstack = 0
  1163                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1164                           
  1165                           
  1166                           ;main.c: 67:     OSCCON = 0b11110000;
  1167     003E  30F0               	movlw	240
  1168     003F  0021               	movlb	1	; select bank1
  1169     0040  009B               	movwf	27	;volatile
  1170     0041                     l1755:
  1171                           
  1172                           ;main.c: 70:     ANSELA = 0x00;
  1173     0041  0023               	movlb	3	; select bank3
  1174     0042  018C               	clrf	12	;volatile
  1175     0043                     l1757:
  1176                           
  1177                           ;main.c: 71:     ANSELB = 0b00000111;
  1178     0043  3007               	movlw	7
  1179     0044  008D               	movwf	13	;volatile
  1180                           
  1181                           ;main.c: 72:     ANSELC = 0x00;
  1182     0045  018E               	clrf	14	;volatile
  1183     0046                     l1759:
  1184                           
  1185                           ;main.c: 73:     TRISA = 0b00001111;
  1186     0046  300F               	movlw	15
  1187     0047  0021               	movlb	1	; select bank1
  1188     0048  008C               	movwf	12	;volatile
  1189     0049                     l1761:
  1190                           
  1191                           ;main.c: 74:     TRISB = 0b00100111;
  1192     0049  3027               	movlw	39
  1193     004A  008D               	movwf	13	;volatile
  1194                           
  1195                           ;main.c: 75:     TRISC = 0x00;
  1196     004B  018E               	clrf	14	;volatile
  1197                           
  1198                           ;main.c: 76:     LATA = 0x00;
  1199     004C  0022               	movlb	2	; select bank2
  1200     004D  018C               	clrf	12	;volatile
  1201                           
  1202                           ;main.c: 77:     LATB = 0x00;
  1203     004E  018D               	clrf	13	;volatile
  1204                           
  1205                           ;main.c: 78:     LATC = 0x00;
  1206     004F  018E               	clrf	14	;volatile
  1207     0050                     l1763:
  1208                           
  1209                           ;main.c: 81:     OPTION_REGbits.nWPUEN = 0;
  1210     0050  0021               	movlb	1	; select bank1
  1211     0051  1397               	bcf	23,7	;volatile
  1212     0052                     l1765:
  1213                           
  1214                           ;main.c: 82:     WPUA = 0b00001111;
  1215     0052  300F               	movlw	15
  1216     0053  0024               	movlb	4	; select bank4
  1217     0054  008C               	movwf	12	;volatile
  1218     0055                     l1767:
  1219                           
  1220                           ;main.c: 83:     WPUB = 0x00;
  1221     0055  018D               	clrf	13	;volatile
  1222     0056                     l1769:
  1223                           
  1224                           ;main.c: 84:     WPUC = 0x00;
  1225     0056  018E               	clrf	14	;volatile
  1226     0057                     l1771:
  1227                           
  1228                           ;main.c: 87:     T2CLKCONbits.CS = 0b0001;
  1229     0057  0029               	movlb	9	; select bank9
  1230     0058  0817               	movf	23,w	;volatile
  1231     0059  39F0               	andlw	-16
  1232     005A  3801               	iorlw	1
  1233     005B  0097               	movwf	23	;volatile
  1234     005C                     l1773:
  1235                           
  1236                           ;main.c: 88:     T2CON = 0b10000000;
  1237     005C  3080               	movlw	128
  1238     005D  0095               	movwf	21	;volatile
  1239     005E                     l1775:
  1240                           
  1241                           ;main.c: 89:     T2PR = 0xFF;
  1242     005E  30FF               	movlw	255
  1243     005F  0094               	movwf	20	;volatile
  1244     0060                     l1777:
  1245                           
  1246                           ;main.c: 92:     RA5PPS = 0b011001;
  1247     0060  3019               	movlw	25
  1248     0061  003D               	movlb	29	; select bank29
  1249     0062  0095               	movwf	21	;volatile
  1250     0063                     l1779:
  1251                           
  1252                           ;main.c: 93:     PWM3CON = 0b10000000;
  1253     0063  3080               	movlw	128
  1254     0064  002C               	movlb	12	; select bank12
  1255     0065  0096               	movwf	22	;volatile
  1256     0066                     l1781:
  1257                           
  1258                           ;main.c: 94:     CCPTMRS2bits.P3TSEL = 0b00;
  1259     0066  30FC               	movlw	-4
  1260     0067  0025               	movlb	5	; select bank5
  1261     0068  059F               	andwf	31,f	;volatile
  1262     0069                     l1783:
  1263                           
  1264                           ;main.c: 95:     PWM3DCH = 0x00;
  1265     0069  002C               	movlb	12	; select bank12
  1266     006A  0195               	clrf	21	;volatile
  1267     006B                     l1785:
  1268                           
  1269                           ;main.c: 96:     PWM3DCL = 0x00;
  1270     006B  0194               	clrf	20	;volatile
  1271     006C                     l1787:
  1272                           
  1273                           ;main.c: 99:     RA6PPS = 0b011010;
  1274     006C  301A               	movlw	26
  1275     006D  003D               	movlb	29	; select bank29
  1276     006E  0096               	movwf	22	;volatile
  1277     006F                     l1789:
  1278                           
  1279                           ;main.c: 100:     PWM4CON = 0b10000000;
  1280     006F  3080               	movlw	128
  1281     0070  002C               	movlb	12	; select bank12
  1282     0071  0099               	movwf	25	;volatile
  1283     0072                     l1791:
  1284                           
  1285                           ;main.c: 101:     CCPTMRS2bits.P4TSEL = 0b00;
  1286     0072  30F3               	movlw	-13
  1287     0073  0025               	movlb	5	; select bank5
  1288     0074  059F               	andwf	31,f	;volatile
  1289     0075                     l1793:
  1290                           
  1291                           ;main.c: 102:     PWM4DCH = 0x00;
  1292     0075  002C               	movlb	12	; select bank12
  1293     0076  0198               	clrf	24	;volatile
  1294     0077                     l1795:
  1295                           
  1296                           ;main.c: 103:     PWM4DCL = 0x00;
  1297     0077  0197               	clrf	23	;volatile
  1298     0078                     l1797:
  1299                           
  1300                           ;main.c: 106:     RC1PPS = 0b011011;
  1301     0078  301B               	movlw	27
  1302     0079  003D               	movlb	29	; select bank29
  1303     007A  00A1               	movwf	33	;volatile
  1304     007B                     l1799:
  1305                           
  1306                           ;main.c: 107:     PWM9CON = 0b10000000;
  1307     007B  3080               	movlw	128
  1308     007C  002C               	movlb	12	; select bank12
  1309     007D  009C               	movwf	28	;volatile
  1310     007E                     l1801:
  1311                           
  1312                           ;main.c: 108:     CCPTMRS2bits.P9TSEL = 0b00;
  1313     007E  30CF               	movlw	-49
  1314     007F  0025               	movlb	5	; select bank5
  1315     0080  059F               	andwf	31,f	;volatile
  1316     0081                     l1803:
  1317                           
  1318                           ;main.c: 109:     PWM9DCH = 0x00;
  1319     0081  002C               	movlb	12	; select bank12
  1320     0082  019B               	clrf	27	;volatile
  1321     0083                     l1805:
  1322                           
  1323                           ;main.c: 110:     PWM9DCL = 0x00;
  1324     0083  019A               	clrf	26	;volatile
  1325     0084                     l1807:
  1326                           
  1327                           ;main.c: 113:     RC3PPS = 0b010101;
  1328     0084  3015               	movlw	21
  1329     0085  003D               	movlb	29	; select bank29
  1330     0086  00A3               	movwf	35	;volatile
  1331     0087                     l1809:
  1332                           
  1333                           ;main.c: 114:     CCP1CON = 0b10011100;
  1334     0087  309C               	movlw	156
  1335     0088  0025               	movlb	5	; select bank5
  1336     0089  0093               	movwf	19	;volatile
  1337     008A                     l1811:
  1338                           
  1339                           ;main.c: 115:     CCPTMRS1bits.C1TSEL = 0b00;
  1340     008A  30FC               	movlw	-4
  1341     008B  059E               	andwf	30,f	;volatile
  1342     008C                     l1813:
  1343                           
  1344                           ;main.c: 116:     CCPR1H = 0x00;
  1345     008C  0192               	clrf	18	;volatile
  1346     008D                     l1815:
  1347                           
  1348                           ;main.c: 117:     CCPR1L = 0x00;
  1349     008D  0191               	clrf	17	;volatile
  1350     008E                     l1817:
  1351                           
  1352                           ;main.c: 120:     RC7PPS = 0b010110;
  1353     008E  3016               	movlw	22
  1354     008F  003D               	movlb	29	; select bank29
  1355     0090  00A7               	movwf	39	;volatile
  1356     0091                     l1819:
  1357                           
  1358                           ;main.c: 121:     CCP2CON = 0b10011100;
  1359     0091  309C               	movlw	156
  1360     0092  0025               	movlb	5	; select bank5
  1361     0093  0097               	movwf	23	;volatile
  1362     0094                     l1821:
  1363                           
  1364                           ;main.c: 122:     CCPTMRS1bits.C2TSEL = 0b00;
  1365     0094  30F3               	movlw	-13
  1366     0095  059E               	andwf	30,f	;volatile
  1367     0096                     l1823:
  1368                           
  1369                           ;main.c: 123:     CCPR2H = 0x00;
  1370     0096  0196               	clrf	22	;volatile
  1371     0097                     l1825:
  1372                           
  1373                           ;main.c: 124:     CCPR2L = 0x00;
  1374     0097  0195               	clrf	21	;volatile
  1375     0098                     l1827:
  1376                           
  1377                           ;main.c: 128:     RC5PPS = 0b011101;
  1378     0098  301D               	movlw	29
  1379     0099  003D               	movlb	29	; select bank29
  1380     009A  00A5               	movwf	37	;volatile
  1381     009B                     l1829:
  1382                           
  1383                           ;main.c: 129:     PWM5CON = 0b10000000;
  1384     009B  3080               	movlw	128
  1385     009C  003B               	movlb	27	; select bank27
  1386     009D  009B               	movwf	27	;volatile
  1387     009E                     l1831:
  1388                           
  1389                           ;main.c: 130:     PWM5CLKCON = 0b01000000;
  1390     009E  3040               	movlw	64
  1391     009F  009E               	movwf	30	;volatile
  1392                           
  1393                           ;main.c: 131:     PWM5LDCON = 0x00;
  1394     00A0  019F               	clrf	31	;volatile
  1395                           
  1396                           ;main.c: 132:     PWM5OFCON = 0x00;
  1397     00A1  01A0               	clrf	32	;volatile
  1398                           
  1399                           ;main.c: 133:     PWM5PHH = 0x00;
  1400     00A2  0192               	clrf	18	;volatile
  1401                           
  1402                           ;main.c: 134:     PWM5PHL = 0x00;
  1403     00A3  0191               	clrf	17	;volatile
  1404     00A4                     l1833:
  1405                           
  1406                           ;main.c: 135:     PWM5DCH = (2899 >> 8) & 0x00FF;
  1407     00A4  300B               	movlw	11
  1408     00A5  0094               	movwf	20	;volatile
  1409     00A6                     l1835:
  1410                           
  1411                           ;main.c: 136:     PWM5DCL = 2899 & 0x00FF;
  1412     00A6  3053               	movlw	83
  1413     00A7  0093               	movwf	19	;volatile
  1414     00A8                     l1837:
  1415                           
  1416                           ;main.c: 137:     PWM5PRH = (39999 >> 8) & 0x00FF;
  1417     00A8  309C               	movlw	156
  1418     00A9  0096               	movwf	22	;volatile
  1419     00AA                     l1839:
  1420                           
  1421                           ;main.c: 138:     PWM5PRL = 39999 & 0x00FF;
  1422     00AA  303F               	movlw	63
  1423     00AB  0095               	movwf	21	;volatile
  1424                           
  1425                           ;main.c: 139:     PWM5OFH = 0x00;
  1426     00AC  0198               	clrf	24	;volatile
  1427                           
  1428                           ;main.c: 140:     PWM5OFL = 0x00;
  1429     00AD  0197               	clrf	23	;volatile
  1430                           
  1431                           ;main.c: 141:     PWM5TMRH = 0x00;
  1432     00AE  019A               	clrf	26	;volatile
  1433                           
  1434                           ;main.c: 142:     PWM5TMRL = 0x00;
  1435     00AF  0199               	clrf	25	;volatile
  1436     00B0                     l1841:
  1437                           
  1438                           ;main.c: 145:     _delay((unsigned long)((500)*(32000000/4000.0)));
  1439     00B0  3015               	movlw	21
  1440     00B1  0020               	movlb	0	; select bank0
  1441     00B2  00E6               	movwf	??_main+1
  1442     00B3  304B               	movlw	75
  1443     00B4  00E5               	movwf	??_main
  1444     00B5  30BE               	movlw	190
  1445     00B6                     u837:
  1446     00B6  0B89               	decfsz	9,f
  1447     00B7  28B6               	goto	u837
  1448     00B8  0BE5               	decfsz	??_main,f
  1449     00B9  28B6               	goto	u837
  1450     00BA  0BE6               	decfsz	??_main+1,f
  1451     00BB  28B6               	goto	u837
  1452     00BC  0000               	nop
  1453     00BD                     l1843:
  1454                           
  1455                           ;main.c: 146:     RC4PPS = 0b011110;
  1456     00BD  301E               	movlw	30
  1457     00BE  003D               	movlb	29	; select bank29
  1458     00BF  00A4               	movwf	36	;volatile
  1459     00C0                     l1845:
  1460                           
  1461                           ;main.c: 147:     PWM6CON = 0b10000000;
  1462     00C0  3080               	movlw	128
  1463     00C1  003B               	movlb	27	; select bank27
  1464     00C2  00AB               	movwf	43	;volatile
  1465     00C3                     l1847:
  1466                           
  1467                           ;main.c: 148:     PWM6CLKCON = 0b01000000;
  1468     00C3  3040               	movlw	64
  1469     00C4  00AE               	movwf	46	;volatile
  1470                           
  1471                           ;main.c: 149:     PWM6LDCON = 0x00;
  1472     00C5  01AF               	clrf	47	;volatile
  1473                           
  1474                           ;main.c: 150:     PWM6OFCON = 0x00;
  1475     00C6  01B0               	clrf	48	;volatile
  1476                           
  1477                           ;main.c: 151:     PWM6PHH = 0x00;
  1478     00C7  01A2               	clrf	34	;volatile
  1479                           
  1480                           ;main.c: 152:     PWM6PHL = 0x00;
  1481     00C8  01A1               	clrf	33	;volatile
  1482     00C9                     l1849:
  1483                           
  1484                           ;main.c: 153:     PWM6DCH = (2999 >> 8) & 0x00FF;
  1485     00C9  300B               	movlw	11
  1486     00CA  00A4               	movwf	36	;volatile
  1487     00CB                     l1851:
  1488                           
  1489                           ;main.c: 154:     PWM6DCL = 2999 & 0x00FF;
  1490     00CB  30B7               	movlw	183
  1491     00CC  00A3               	movwf	35	;volatile
  1492     00CD                     l1853:
  1493                           
  1494                           ;main.c: 155:     PWM6PRH = (39999 >> 8) & 0x00FF;
  1495     00CD  309C               	movlw	156
  1496     00CE  00A6               	movwf	38	;volatile
  1497     00CF                     l1855:
  1498                           
  1499                           ;main.c: 156:     PWM6PRL = 39999 & 0x00FF;
  1500     00CF  303F               	movlw	63
  1501     00D0  00A5               	movwf	37	;volatile
  1502                           
  1503                           ;main.c: 157:     PWM6OFH = 0x00;
  1504     00D1  01A8               	clrf	40	;volatile
  1505                           
  1506                           ;main.c: 158:     PWM6OFL = 0x00;
  1507     00D2  01A7               	clrf	39	;volatile
  1508                           
  1509                           ;main.c: 159:     PWM6TMRH = 0x00;
  1510     00D3  01AA               	clrf	42	;volatile
  1511                           
  1512                           ;main.c: 160:     PWM6TMRL = 0x00;
  1513     00D4  01A9               	clrf	41	;volatile
  1514     00D5                     l1857:
  1515                           
  1516                           ;main.c: 163:     RXPPS = 0b001101;
  1517     00D5  300D               	movlw	13
  1518     00D6  003C               	movlb	28	; select bank28
  1519     00D7  00BD               	movwf	61	;volatile
  1520     00D8                     l1859:
  1521                           
  1522                           ;main.c: 164:     RB4PPS = 0b100100;
  1523     00D8  3024               	movlw	36
  1524     00D9  003D               	movlb	29	; select bank29
  1525     00DA  009C               	movwf	28	;volatile
  1526     00DB                     l1861:
  1527                           
  1528                           ;main.c: 165:     TX1STA = 0b00100100;
  1529     00DB  3024               	movlw	36
  1530     00DC  0023               	movlb	3	; select bank3
  1531     00DD  009E               	movwf	30	;volatile
  1532     00DE                     l1863:
  1533                           
  1534                           ;main.c: 166:     RC1STA = 0b10010000;
  1535     00DE  3090               	movlw	144
  1536     00DF  009D               	movwf	29	;volatile
  1537     00E0                     l1865:
  1538                           
  1539                           ;main.c: 167:     BAUD1CON = 0b00001000;
  1540     00E0  3008               	movlw	8
  1541     00E1  009F               	movwf	31	;volatile
  1542     00E2                     l1867:
  1543                           
  1544                           ;main.c: 168:     SP1BRGL = 416 & 0x00FF;
  1545     00E2  30A0               	movlw	160
  1546     00E3  009B               	movwf	27	;volatile
  1547     00E4                     l1869:
  1548                           
  1549                           ;main.c: 169:     SP1BRGH = (416 >> 8) & 0x00FF;
  1550     00E4  3001               	movlw	1
  1551     00E5  009C               	movwf	28	;volatile
  1552     00E6                     l1871:
  1553                           
  1554                           ;main.c: 171:     PIR1bits.RCIF = 0;
  1555     00E6  0020               	movlb	0	; select bank0
  1556     00E7  1291               	bcf	17,5	;volatile
  1557     00E8                     l1873:
  1558                           
  1559                           ;main.c: 172:     PIE1bits.RCIE = 1;
  1560     00E8  0021               	movlb	1	; select bank1
  1561     00E9  1691               	bsf	17,5	;volatile
  1562     00EA                     l1875:
  1563                           
  1564                           ;main.c: 173:     INTCONbits.PEIE = 1;
  1565     00EA  170B               	bsf	11,6	;volatile
  1566     00EB                     l1877:
  1567                           
  1568                           ;main.c: 174:     INTCONbits.GIE = 1;
  1569     00EB  178B               	bsf	11,7	;volatile
  1570     00EC                     l1879:
  1571                           
  1572                           ;main.c: 177:     ADCON0 = 0b10101100;
  1573     00EC  30AC               	movlw	172
  1574     00ED  0029               	movlb	9	; select bank9
  1575     00EE  0090               	movwf	16	;volatile
  1576     00EF                     l1881:
  1577                           
  1578                           ;main.c: 178:     ADCON1 = 0b10100000;
  1579     00EF  30A0               	movlw	160
  1580     00F0  0091               	movwf	17	;volatile
  1581     00F1                     l1883:
  1582                           
  1583                           ;main.c: 181:     unsigned char str[] = "Please enter a string\r\n";
  1584     00F1  30C0               	movlw	low main@F12361
  1585     00F2  0086               	movwf	6
  1586     00F3  3000               	movlw	high main@F12361
  1587     00F4  0087               	movwf	7
  1588     00F5  30D8               	movlw	low main@str
  1589     00F6  0084               	movwf	4
  1590     00F7  3000               	movlw	high main@str
  1591     00F8  0085               	movwf	5
  1592     00F9  3018               	movlw	24
  1593     00FA  0020               	movlb	0	; select bank0
  1594     00FB  00E5               	movwf	??_main
  1595     00FC                     u790:
  1596     00FC  0016               	moviw fsr1++
  1597     00FD  001A               	movwi fsr0++
  1598     00FE  0BE5               	decfsz	??_main,f
  1599     00FF  28FC               	goto	u790
  1600     0100                     l1885:
  1601                           
  1602                           ;main.c: 244:         printf("Vol:%u\r\n", sensorA_Read());
  1603     0100  306F               	movlw	low (STR_1| (0+32768))
  1604     0101  0020               	movlb	0	; select bank0
  1605     0102  00E0               	movwf	printf@fmt
  1606     0103  3084               	movlw	high (STR_1| (0+32768))
  1607     0104  00E1               	movwf	printf@fmt+1
  1608     0105  3184  2478  3180   	fcall	_sensorA_Read
  1609     0108  0877               	movf	?_sensorA_Read+1,w
  1610     0109  0020               	movlb	0	; select bank0
  1611     010A  00E3               	movwf	?_printf+3
  1612     010B  0876               	movf	?_sensorA_Read,w
  1613     010C  00E2               	movwf	?_printf+2
  1614     010D  3184  2456  3180   	fcall	_printf
  1615     0110  2900               	goto	l1885
  1616     0111  3180  281E         	ljmp	start
  1617     0113                     __end_of_main:
  1618                           
  1619                           	psect	text1
  1620     0478                     __ptext1:	
  1621 ;; *************** function _sensorA_Read *****************
  1622 ;; Defined at:
  1623 ;;		line 484 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2    6[COMMON] unsigned int 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1641 ;;Total ram usage:        2 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 2
  1644 ;; This function calls:
  1645 ;;		_ADC_result
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651     0478                     _sensorA_Read:	
  1652                           ;psect for function _sensorA_Read
  1653                           
  1654     0478                     l1743:	
  1655                           ;incstack = 0
  1656                           ; Regs used in _sensorA_Read: [wreg+status,2+status,0+pclath+cstack]
  1657                           
  1658                           
  1659                           ;main.c: 485:     return ADC_result(12);
  1660     0478  300C               	movlw	12
  1661     0479  3184  2402  3184   	fcall	_ADC_result
  1662     047C  0871               	movf	?_ADC_result+1,w
  1663     047D  00F7               	movwf	?_sensorA_Read+1
  1664     047E  0870               	movf	?_ADC_result,w
  1665     047F  00F6               	movwf	?_sensorA_Read
  1666     0480                     l341:
  1667     0480  0008               	return
  1668     0481                     __end_of_sensorA_Read:
  1669                           
  1670                           	psect	text2
  1671     0402                     __ptext2:	
  1672 ;; *************** function _ADC_result *****************
  1673 ;; Defined at:
  1674 ;;		line 469 in file "main.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  ch              1    wreg     unsigned char 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  ch              1    5[COMMON] unsigned char 
  1679 ;;  adcValue        2    3[COMMON] unsigned int 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  2    0[COMMON] unsigned int 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1690 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1692 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1693 ;;Total ram usage:        6 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_sensorA_Read
  1700 ;;		_sensorB_Read
  1701 ;;		_sensorC_Read
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705     0402                     _ADC_result:	
  1706                           ;psect for function _ADC_result
  1707                           
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _ADC_result: [wreg+status,2+status,0]
  1711                           ;ADC_result@ch stored from wreg
  1712     0402  00F5               	movwf	ADC_result@ch
  1713     0403                     l1719:
  1714                           
  1715                           ;main.c: 471:     unsigned int adcValue;;main.c: 473:     ADCON0bits.CHS = ch;
  1716     0403  0875               	movf	ADC_result@ch,w
  1717     0404  00F2               	movwf	??_ADC_result
  1718     0405  0DF2               	rlf	??_ADC_result,f
  1719     0406  0DF2               	rlf	??_ADC_result,f
  1720     0407  0029               	movlb	9	; select bank9
  1721     0408  0810               	movf	16,w	;volatile
  1722     0409  0672               	xorwf	??_ADC_result,w
  1723     040A  3903               	andlw	-253
  1724     040B  0672               	xorwf	??_ADC_result,w
  1725     040C  0090               	movwf	16	;volatile
  1726     040D                     l1721:
  1727                           
  1728                           ;main.c: 474:     ADCON0bits.ADON = 1;
  1729     040D  1410               	bsf	16,0	;volatile
  1730     040E                     l1723:
  1731                           
  1732                           ;main.c: 475:     _delay((unsigned long)((5)*(32000000/4000000.0)));
  1733     040E  300D               	movlw	13
  1734     040F                     u847:
  1735     040F  0B89               	decfsz	9,f
  1736     0410  2C0F               	goto	u847
  1737     0411  0000               	nop
  1738     0412                     l1725:
  1739                           
  1740                           ;main.c: 476:     ADCON0bits.GO = 1;
  1741     0412  0029               	movlb	9	; select bank9
  1742     0413  1490               	bsf	16,1	;volatile
  1743     0414                     l335:	
  1744                           ;main.c: 477:     while(ADCON0bits.GO);
  1745                           
  1746     0414  1890               	btfsc	16,1	;volatile
  1747     0415  2C17               	goto	u771
  1748     0416  2C18               	goto	u770
  1749     0417                     u771:
  1750     0417  2C14               	goto	l335
  1751     0418                     u770:
  1752     0418                     l1727:
  1753                           
  1754                           ;main.c: 478:     adcValue = ADRESL + (256 * ADRESH);
  1755     0418  080F               	movf	15,w	;volatile
  1756     0419  00F4               	movwf	ADC_result@adcValue+1
  1757     041A  080E               	movf	14,w	;volatile
  1758     041B  00F3               	movwf	ADC_result@adcValue
  1759     041C                     l1729:
  1760                           
  1761                           ;main.c: 479:     ADCON0bits.ADON = 0;
  1762     041C  1010               	bcf	16,0	;volatile
  1763                           
  1764                           ;main.c: 480:     return adcValue;
  1765     041D  0874               	movf	ADC_result@adcValue+1,w
  1766     041E  00F1               	movwf	?_ADC_result+1
  1767     041F  0873               	movf	ADC_result@adcValue,w
  1768     0420  00F0               	movwf	?_ADC_result
  1769     0421                     l338:
  1770     0421  0008               	return
  1771     0422                     __end_of_ADC_result:
  1772                           
  1773                           	psect	text3
  1774     0456                     __ptext3:	
  1775 ;; *************** function _printf *****************
  1776 ;; Defined at:
  1777 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1780 ;;		 -> STR_1(9), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  ret             2    0        int 
  1783 ;;  ap              1   68[BANK0 ] PTR void [1]
  1784 ;;		 -> ?_printf(2), 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  2   64[BANK0 ] int 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1797 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1798 ;;Total ram usage:        5 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 9
  1801 ;; This function calls:
  1802 ;;		_vfprintf
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808     0456                     _printf:	
  1809                           ;psect for function _printf
  1810                           
  1811     0456                     l1747:	
  1812                           ;incstack = 0
  1813                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1814                           
  1815     0456  3062               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1816     0457  0020               	movlb	0	; select bank0
  1817     0458  00E4               	movwf	printf@ap
  1818     0459                     l1749:
  1819     0459  0861               	movf	printf@fmt+1,w
  1820     045A  00DA               	movwf	vfprintf@fmt+1
  1821     045B  0860               	movf	printf@fmt,w
  1822     045C  00D9               	movwf	vfprintf@fmt
  1823     045D  3064               	movlw	(low (printf@ap| 0))& (0+255)
  1824     045E  00DB               	movwf	vfprintf@ap
  1825     045F  3000               	movlw	0
  1826     0460  3184  2422  3184   	fcall	_vfprintf
  1827     0463                     l895:
  1828     0463  0008               	return
  1829     0464                     __end_of_printf:
  1830                           
  1831                           	psect	text4
  1832     0422                     __ptext4:	
  1833 ;; *************** function _vfprintf *****************
  1834 ;; Defined at:
  1835 ;;		line 1520 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  fp              1    wreg     PTR struct _IO_FILE
  1838 ;;		 -> NULL(0), 
  1839 ;;  fmt             2   57[BANK0 ] PTR const unsigned char 
  1840 ;;		 -> STR_1(9), 
  1841 ;;  ap              1   59[BANK0 ] PTR PTR void 
  1842 ;;		 -> printf@ap(1), 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  1845 ;;		 -> NULL(0), 
  1846 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  1847 ;;		 -> STR_1(9), 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  2   57[BANK0 ] int 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1857 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1858 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1860 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1861 ;;Total ram usage:        7 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 8
  1864 ;; This function calls:
  1865 ;;		_vfpfcnvrt
  1866 ;; This function is called by:
  1867 ;;		_printf
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871     0422                     _vfprintf:	
  1872                           ;psect for function _vfprintf
  1873                           
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1877                           ;vfprintf@fp stored from wreg
  1878     0422  0020               	movlb	0	; select bank0
  1879     0423  00DD               	movwf	vfprintf@fp
  1880     0424                     l1733:
  1881                           
  1882                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1883     0424  085A               	movf	vfprintf@fmt+1,w
  1884     0425  00DF               	movwf	vfprintf@cfmt+1
  1885     0426  0859               	movf	vfprintf@fmt,w
  1886     0427  00DE               	movwf	vfprintf@cfmt
  1887                           
  1888                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1889     0428  2C31               	goto	l1737
  1890     0429                     l1735:
  1891                           
  1892                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1893     0429  305E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1894     042A  00C8               	movwf	vfpfcnvrt@fmt
  1895     042B  085B               	movf	vfprintf@ap,w
  1896     042C  00C9               	movwf	vfpfcnvrt@ap
  1897     042D  085D               	movf	vfprintf@fp,w
  1898     042E  3181  21D3  3184   	fcall	_vfpfcnvrt
  1899     0431                     l1737:
  1900                           
  1901                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1902     0431  0020               	movlb	0	; select bank0
  1903     0432  085E               	movf	vfprintf@cfmt,w
  1904     0433  0084               	movwf	4
  1905     0434  085F               	movf	vfprintf@cfmt+1,w
  1906     0435  0085               	movwf	5
  1907     0436  0012               	moviw fsr0++
  1908     0437  1D03               	btfss	3,2
  1909     0438  2C3A               	goto	u781
  1910     0439  2C3B               	goto	u780
  1911     043A                     u781:
  1912     043A  2C29               	goto	l1735
  1913     043B                     u780:
  1914     043B                     l1739:
  1915                           
  1916                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1917     043B  01D9               	clrf	?_vfprintf
  1918     043C  01DA               	clrf	?_vfprintf+1
  1919     043D                     l947:
  1920     043D  0008               	return
  1921     043E                     __end_of_vfprintf:
  1922                           
  1923                           	psect	text5
  1924     01D3                     __ptext5:	
  1925 ;; *************** function _vfpfcnvrt *****************
  1926 ;; Defined at:
  1927 ;;		line 1007 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  fp              1    wreg     PTR struct _IO_FILE
  1930 ;;		 -> NULL(0), 
  1931 ;;  fmt             1   40[BANK0 ] PTR PTR unsigned char 
  1932 ;;		 -> vfprintf@cfmt(2), 
  1933 ;;  ap              1   41[BANK0 ] PTR PTR void 
  1934 ;;		 -> printf@ap(1), 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  fp              1   54[BANK0 ] PTR struct _IO_FILE
  1937 ;;		 -> NULL(0), 
  1938 ;;  convarg         8   46[BANK0 ] struct .
  1939 ;;  cp              2   55[BANK0 ] PTR unsigned char 
  1940 ;;		 -> STR_1(9), 
  1941 ;;  i               2    0        int 
  1942 ;;  done            2    0        int 
  1943 ;;  c               1    0        unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1953 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1956 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:       17 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 7
  1960 ;; This function calls:
  1961 ;;		_fputc
  1962 ;;		_utoa
  1963 ;; This function is called by:
  1964 ;;		_vfprintf
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968     01D3                     _vfpfcnvrt:	
  1969                           ;psect for function _vfpfcnvrt
  1970                           
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1974                           ;vfpfcnvrt@fp stored from wreg
  1975     01D3  0020               	movlb	0	; select bank0
  1976     01D4  00D6               	movwf	vfpfcnvrt@fp
  1977     01D5                     l1681:
  1978                           
  1979                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1980     01D5  0848               	movf	vfpfcnvrt@fmt,w
  1981     01D6  0086               	movwf	6
  1982     01D7  0187               	clrf	7
  1983     01D8  3F40               	moviw [0]fsr1
  1984     01D9  00CA               	movwf	??_vfpfcnvrt
  1985     01DA  3F41               	moviw [1]fsr1
  1986     01DB  00CB               	movwf	??_vfpfcnvrt+1
  1987     01DC  084A               	movf	??_vfpfcnvrt,w
  1988     01DD  0084               	movwf	4
  1989     01DE  084B               	movf	??_vfpfcnvrt+1,w
  1990     01DF  0085               	movwf	5
  1991     01E0  0012               	moviw fsr0++
  1992     01E1  3A25               	xorlw	37
  1993     01E2  1D03               	btfss	3,2
  1994     01E3  29E5               	goto	u751
  1995     01E4  29E6               	goto	u750
  1996     01E5                     u751:
  1997     01E5  2A5A               	goto	l1709
  1998     01E6                     u750:
  1999     01E6                     l1683:
  2000                           
  2001                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2002     01E6  0848               	movf	vfpfcnvrt@fmt,w
  2003     01E7  0086               	movwf	6
  2004     01E8  0187               	clrf	7
  2005     01E9  3001               	movlw	1
  2006     01EA  0781               	addwf	1,f
  2007     01EB  3141               	addfsr 1,1
  2008     01EC  1803               	skipnc
  2009     01ED  0A81               	incf	1,f
  2010     01EE                     l1685:
  2011                           
  2012                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2013     01EE  01E7               	clrf	_width
  2014     01EF  01E8               	clrf	_width+1
  2015     01F0  1003               	clrc
  2016     01F1  3000               	movlw	0
  2017     01F2  1803               	btfsc	3,0
  2018     01F3  3001               	movlw	1
  2019     01F4  00EB               	movwf	_flags
  2020     01F5                     l1687:
  2021                           
  2022                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2023     01F5  30FF               	movlw	255
  2024     01F6  00E9               	movwf	_prec
  2025     01F7  30FF               	movlw	255
  2026     01F8  00EA               	movwf	_prec+1
  2027     01F9                     l1689:
  2028                           
  2029                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  2030     01F9  0848               	movf	vfpfcnvrt@fmt,w
  2031     01FA  0086               	movwf	6
  2032     01FB  0187               	clrf	7
  2033     01FC  3F40               	moviw [0]fsr1
  2034     01FD  00D7               	movwf	vfpfcnvrt@cp
  2035     01FE  3F41               	moviw [1]fsr1
  2036     01FF  00D8               	movwf	vfpfcnvrt@cp+1
  2037     0200                     l1691:
  2038     0200  0857               	movf	vfpfcnvrt@cp,w
  2039     0201  0084               	movwf	4
  2040     0202  0858               	movf	vfpfcnvrt@cp+1,w
  2041     0203  0085               	movwf	5
  2042     0204  0012               	moviw fsr0++
  2043     0205  3A75               	xorlw	117
  2044     0206  1D03               	btfss	3,2
  2045     0207  2A09               	goto	u761
  2046     0208  2A0A               	goto	u760
  2047     0209                     u761:
  2048     0209  2A50               	goto	l1705
  2049     020A                     u760:
  2050     020A                     l1693:
  2051                           
  2052                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;D:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2053     020A  0849               	movf	vfpfcnvrt@ap,w
  2054     020B  0086               	movwf	6
  2055     020C  0187               	clrf	7
  2056     020D  0801               	movf	1,w
  2057     020E  0084               	movwf	4
  2058     020F  0185               	clrf	5
  2059     0210  3002               	movlw	2
  2060     0211  0781               	addwf	1,f
  2061     0212  3F00               	moviw [0]fsr0
  2062     0213  00CE               	movwf	vfpfcnvrt@convarg
  2063     0214  3F01               	moviw [1]fsr0
  2064     0215  00CF               	movwf	vfpfcnvrt@convarg+1
  2065     0216  01D0               	clrf	vfpfcnvrt@convarg+2
  2066     0217  01D1               	clrf	vfpfcnvrt@convarg+3
  2067     0218  01D2               	clrf	vfpfcnvrt@convarg+4
  2068     0219  01D3               	clrf	vfpfcnvrt@convarg+5
  2069     021A  01D4               	clrf	vfpfcnvrt@convarg+6
  2070     021B  01D5               	clrf	vfpfcnvrt@convarg+7
  2071     021C                     l1695:
  2072                           
  2073                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2074     021C  0857               	movf	vfpfcnvrt@cp,w
  2075     021D  3E01               	addlw	1
  2076     021E  00CA               	movwf	??_vfpfcnvrt
  2077     021F  3000               	movlw	0
  2078     0220  3D58               	addwfc	vfpfcnvrt@cp+1,w
  2079     0221  00CB               	movwf	??_vfpfcnvrt+1
  2080     0222  0848               	movf	vfpfcnvrt@fmt,w
  2081     0223  0086               	movwf	6
  2082     0224  0187               	clrf	7
  2083     0225  084A               	movf	??_vfpfcnvrt,w
  2084     0226  3FC0               	movwi [0]fsr1
  2085     0227  084B               	movf	??_vfpfcnvrt+1,w
  2086     0228  3FC1               	movwi [1]fsr1
  2087                           
  2088                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2089     0229  2A3F               	goto	l1703
  2090     022A                     l1697:
  2091                           
  2092                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2093     022A  084E               	movf	vfpfcnvrt@convarg,w
  2094     022B  00B0               	movwf	utoa@d
  2095     022C  084F               	movf	vfpfcnvrt@convarg+1,w
  2096     022D  00B1               	movwf	utoa@d+1
  2097     022E  0850               	movf	vfpfcnvrt@convarg+2,w
  2098     022F  00B2               	movwf	utoa@d+2
  2099     0230  0851               	movf	vfpfcnvrt@convarg+3,w
  2100     0231  00B3               	movwf	utoa@d+3
  2101     0232  0852               	movf	vfpfcnvrt@convarg+4,w
  2102     0233  00B4               	movwf	utoa@d+4
  2103     0234  0853               	movf	vfpfcnvrt@convarg+5,w
  2104     0235  00B5               	movwf	utoa@d+5
  2105     0236  0854               	movf	vfpfcnvrt@convarg+6,w
  2106     0237  00B6               	movwf	utoa@d+6
  2107     0238  0855               	movf	vfpfcnvrt@convarg+7,w
  2108     0239  00B7               	movwf	utoa@d+7
  2109     023A  0856               	movf	vfpfcnvrt@fp,w
  2110     023B  3181  2113  3181   	fcall	_utoa
  2111     023E  2A72               	goto	l940
  2112     023F                     l1703:
  2113     023F  0857               	movf	vfpfcnvrt@cp,w
  2114     0240  0084               	movwf	4
  2115     0241  0858               	movf	vfpfcnvrt@cp+1,w
  2116     0242  0085               	movwf	5
  2117     0243  0800               	movf	0,w	;code access
  2118     0244  00CA               	movwf	??_vfpfcnvrt
  2119     0245  01CB               	clrf	??_vfpfcnvrt+1
  2120                           
  2121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2122                           ; Switch size 1, requested type "simple"
  2123                           ; Number of cases is 1, Range of values is 0 to 0
  2124                           ; switch strategies available:
  2125                           ; Name         Instructions Cycles
  2126                           ; simple_byte            4     3 (average)
  2127                           ; direct_byte            8     6 (fixed)
  2128                           ; jumptable            260     6 (fixed)
  2129                           ;	Chosen strategy is simple_byte
  2130     0246  084B               	movf	??_vfpfcnvrt+1,w
  2131     0247  3A00               	xorlw	0	; case 0
  2132     0248  1903               	skipnz
  2133     0249  2A4B               	goto	l1927
  2134     024A  2A50               	goto	l1705
  2135     024B                     l1927:
  2136                           
  2137                           ; Switch size 1, requested type "simple"
  2138                           ; Number of cases is 1, Range of values is 117 to 117
  2139                           ; switch strategies available:
  2140                           ; Name         Instructions Cycles
  2141                           ; simple_byte            4     3 (average)
  2142                           ; direct_byte           11     9 (fixed)
  2143                           ; jumptable            263     9 (fixed)
  2144                           ;	Chosen strategy is simple_byte
  2145     024B  084A               	movf	??_vfpfcnvrt,w
  2146     024C  3A75               	xorlw	117	; case 117
  2147     024D  1903               	skipnz
  2148     024E  2A2A               	goto	l1697
  2149     024F  2A50               	goto	l1705
  2150     0250                     l1705:
  2151                           
  2152                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2153     0250  0020               	movlb	0	; select bank0
  2154     0251  0848               	movf	vfpfcnvrt@fmt,w
  2155     0252  0086               	movwf	6
  2156     0253  0187               	clrf	7
  2157     0254  3001               	movlw	1
  2158     0255  0781               	addwf	1,f
  2159     0256  3141               	addfsr 1,1
  2160     0257  1803               	skipnc
  2161     0258  0A81               	incf	1,f
  2162     0259  2A72               	goto	l940
  2163     025A                     l1709:
  2164                           
  2165                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2166     025A  0848               	movf	vfpfcnvrt@fmt,w
  2167     025B  0086               	movwf	6
  2168     025C  0187               	clrf	7
  2169     025D  3F40               	moviw [0]fsr1
  2170     025E  00CA               	movwf	??_vfpfcnvrt
  2171     025F  3F41               	moviw [1]fsr1
  2172     0260  00CB               	movwf	??_vfpfcnvrt+1
  2173     0261  084A               	movf	??_vfpfcnvrt,w
  2174     0262  0084               	movwf	4
  2175     0263  084B               	movf	??_vfpfcnvrt+1,w
  2176     0264  0085               	movwf	5
  2177     0265  0800               	movf	0,w	;code access
  2178     0266  00CC               	movwf	??_vfpfcnvrt+2
  2179     0267  01CD               	clrf	??_vfpfcnvrt+3
  2180     0268  084C               	movf	??_vfpfcnvrt+2,w
  2181     0269  00F2               	movwf	fputc@c
  2182     026A  084D               	movf	??_vfpfcnvrt+3,w
  2183     026B  00F3               	movwf	fputc@c+1
  2184     026C  0856               	movf	vfpfcnvrt@fp,w
  2185     026D  00F4               	movwf	fputc@fp
  2186     026E  3183  2368  3181   	fcall	_fputc
  2187     0271  2A50               	goto	l1705
  2188     0272                     l940:
  2189     0272  0008               	return
  2190     0273                     __end_of_vfpfcnvrt:
  2191                           
  2192                           	psect	text6
  2193     0113                     __ptext6:	
  2194 ;; *************** function _utoa *****************
  2195 ;; Defined at:
  2196 ;;		line 894 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  fp              1    wreg     PTR struct _IO_FILE
  2199 ;;		 -> NULL(0), 
  2200 ;;  d               8   16[BANK0 ] unsigned long long 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  2203 ;;		 -> NULL(0), 
  2204 ;;  n               8   30[BANK0 ] unsigned long long 
  2205 ;;  i               2   38[BANK0 ] int 
  2206 ;;  p               2   27[BANK0 ] int 
  2207 ;;  w               2   25[BANK0 ] int 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2217 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2218 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2220 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2221 ;;Total ram usage:       24 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 6
  2224 ;; This function calls:
  2225 ;;		___lodiv
  2226 ;;		___lomod
  2227 ;;		_pad
  2228 ;; This function is called by:
  2229 ;;		_vfpfcnvrt
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233     0113                     _utoa:	
  2234                           ;psect for function _utoa
  2235                           
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2239                           ;utoa@fp stored from wreg
  2240     0113  0020               	movlb	0	; select bank0
  2241     0114  00BD               	movwf	utoa@fp
  2242     0115                     l1651:
  2243                           
  2244                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);D:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;D:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  2245     0115  086A               	movf	_prec+1,w
  2246     0116  3A80               	xorlw	128
  2247     0117  00B8               	movwf	??_utoa
  2248     0118  3080               	movlw	128
  2249     0119  0238               	subwf	??_utoa,w
  2250     011A  1D03               	skipz
  2251     011B  291E               	goto	u715
  2252     011C  3001               	movlw	1
  2253     011D  0269               	subwf	_prec,w
  2254     011E                     u715:
  2255     011E  1803               	skipnc
  2256     011F  2921               	goto	u711
  2257     0120  2922               	goto	u710
  2258     0121                     u711:
  2259     0121  2928               	goto	l1655
  2260     0122                     u710:
  2261     0122                     l1653:
  2262     0122  3001               	movlw	1
  2263     0123  0020               	movlb	0	; select bank0
  2264     0124  00BB               	movwf	utoa@p
  2265     0125  3000               	movlw	0
  2266     0126  00BC               	movwf	utoa@p+1
  2267     0127  292D               	goto	l925
  2268     0128                     l1655:
  2269     0128  0020               	movlb	0	; select bank0
  2270     0129  086A               	movf	_prec+1,w
  2271     012A  00BC               	movwf	utoa@p+1
  2272     012B  0869               	movf	_prec,w
  2273     012C  00BB               	movwf	utoa@p
  2274     012D                     l925:
  2275                           
  2276                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  2277     012D  0868               	movf	_width+1,w
  2278     012E  00BA               	movwf	utoa@w+1
  2279     012F  0867               	movf	_width,w
  2280     0130  00B9               	movwf	utoa@w
  2281     0131                     l1657:
  2282                           
  2283                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  2284     0131  0830               	movf	utoa@d,w
  2285     0132  00BE               	movwf	utoa@n
  2286     0133  0831               	movf	utoa@d+1,w
  2287     0134  00BF               	movwf	utoa@n+1
  2288     0135  0832               	movf	utoa@d+2,w
  2289     0136  00C0               	movwf	utoa@n+2
  2290     0137  0833               	movf	utoa@d+3,w
  2291     0138  00C1               	movwf	utoa@n+3
  2292     0139  0834               	movf	utoa@d+4,w
  2293     013A  00C2               	movwf	utoa@n+4
  2294     013B  0835               	movf	utoa@d+5,w
  2295     013C  00C3               	movwf	utoa@n+5
  2296     013D  0836               	movf	utoa@d+6,w
  2297     013E  00C4               	movwf	utoa@n+6
  2298     013F  0837               	movf	utoa@d+7,w
  2299     0140  00C5               	movwf	utoa@n+7
  2300                           
  2301                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  2302     0141  301F               	movlw	31
  2303     0142  00C6               	movwf	utoa@i
  2304     0143  3000               	movlw	0
  2305     0144  00C7               	movwf	utoa@i+1
  2306     0145                     l1659:
  2307                           
  2308                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  2309     0145  0021               	movlb	1	; select bank1
  2310     0146  01BF               	clrf	(_dbuf^(0+128)+31)
  2311                           
  2312                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2313     0147  29A6               	goto	l1671
  2314     0148                     l1661:
  2315                           
  2316                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;D:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  2317     0148  30FF               	movlw	255
  2318     0149  0020               	movlb	0	; select bank0
  2319     014A  07C6               	addwf	utoa@i,f
  2320     014B  30FF               	movlw	255
  2321     014C  3DC7               	addwfc	utoa@i+1,f
  2322     014D                     l1663:
  2323                           
  2324                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  2325     014D  0846               	movf	utoa@i,w
  2326     014E  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2327     014F  0086               	movwf	6
  2328     0150  0187               	clrf	7
  2329     0151  300A               	movlw	10
  2330     0152  00A0               	movwf	___lomod@divisor
  2331     0153  01A1               	clrf	___lomod@divisor+1
  2332     0154  01A2               	clrf	___lomod@divisor+2
  2333     0155  01A3               	clrf	___lomod@divisor+3
  2334     0156  01A4               	clrf	___lomod@divisor+4
  2335     0157  01A5               	clrf	___lomod@divisor+5
  2336     0158  01A6               	clrf	___lomod@divisor+6
  2337     0159  01A7               	clrf	___lomod@divisor+7
  2338     015A  083E               	movf	utoa@n,w
  2339     015B  00A8               	movwf	___lomod@dividend
  2340     015C  083F               	movf	utoa@n+1,w
  2341     015D  00A9               	movwf	___lomod@dividend+1
  2342     015E  0840               	movf	utoa@n+2,w
  2343     015F  00AA               	movwf	___lomod@dividend+2
  2344     0160  0841               	movf	utoa@n+3,w
  2345     0161  00AB               	movwf	___lomod@dividend+3
  2346     0162  0842               	movf	utoa@n+4,w
  2347     0163  00AC               	movwf	___lomod@dividend+4
  2348     0164  0843               	movf	utoa@n+5,w
  2349     0165  00AD               	movwf	___lomod@dividend+5
  2350     0166  0844               	movf	utoa@n+6,w
  2351     0167  00AE               	movwf	___lomod@dividend+6
  2352     0168  0845               	movf	utoa@n+7,w
  2353     0169  00AF               	movwf	___lomod@dividend+7
  2354     016A  3182  22F7  3181   	fcall	___lomod
  2355     016D  0020               	movlb	0	; select bank0
  2356     016E  0820               	movf	?___lomod,w
  2357     016F  3E30               	addlw	48
  2358     0170  0081               	movwf	1
  2359     0171                     l1665:
  2360                           
  2361                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  2362     0171  30FF               	movlw	255
  2363     0172  07BB               	addwf	utoa@p,f
  2364     0173  30FF               	movlw	255
  2365     0174  3DBC               	addwfc	utoa@p+1,f
  2366     0175                     l1667:
  2367                           
  2368                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  2369     0175  30FF               	movlw	255
  2370     0176  07B9               	addwf	utoa@w,f
  2371     0177  30FF               	movlw	255
  2372     0178  3DBA               	addwfc	utoa@w+1,f
  2373     0179                     l1669:
  2374                           
  2375                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  2376     0179  300A               	movlw	10
  2377     017A  00A0               	movwf	___lodiv@divisor
  2378     017B  01A1               	clrf	___lodiv@divisor+1
  2379     017C  01A2               	clrf	___lodiv@divisor+2
  2380     017D  01A3               	clrf	___lodiv@divisor+3
  2381     017E  01A4               	clrf	___lodiv@divisor+4
  2382     017F  01A5               	clrf	___lodiv@divisor+5
  2383     0180  01A6               	clrf	___lodiv@divisor+6
  2384     0181  01A7               	clrf	___lodiv@divisor+7
  2385     0182  083E               	movf	utoa@n,w
  2386     0183  00A8               	movwf	___lodiv@dividend
  2387     0184  083F               	movf	utoa@n+1,w
  2388     0185  00A9               	movwf	___lodiv@dividend+1
  2389     0186  0840               	movf	utoa@n+2,w
  2390     0187  00AA               	movwf	___lodiv@dividend+2
  2391     0188  0841               	movf	utoa@n+3,w
  2392     0189  00AB               	movwf	___lodiv@dividend+3
  2393     018A  0842               	movf	utoa@n+4,w
  2394     018B  00AC               	movwf	___lodiv@dividend+4
  2395     018C  0843               	movf	utoa@n+5,w
  2396     018D  00AD               	movwf	___lodiv@dividend+5
  2397     018E  0844               	movf	utoa@n+6,w
  2398     018F  00AE               	movwf	___lodiv@dividend+6
  2399     0190  0845               	movf	utoa@n+7,w
  2400     0191  00AF               	movwf	___lodiv@dividend+7
  2401     0192  3182  2273  3181   	fcall	___lodiv
  2402     0195  0020               	movlb	0	; select bank0
  2403     0196  0820               	movf	?___lodiv,w
  2404     0197  00BE               	movwf	utoa@n
  2405     0198  0821               	movf	?___lodiv+1,w
  2406     0199  00BF               	movwf	utoa@n+1
  2407     019A  0822               	movf	?___lodiv+2,w
  2408     019B  00C0               	movwf	utoa@n+2
  2409     019C  0823               	movf	?___lodiv+3,w
  2410     019D  00C1               	movwf	utoa@n+3
  2411     019E  0824               	movf	?___lodiv+4,w
  2412     019F  00C2               	movwf	utoa@n+4
  2413     01A0  0825               	movf	?___lodiv+5,w
  2414     01A1  00C3               	movwf	utoa@n+5
  2415     01A2  0826               	movf	?___lodiv+6,w
  2416     01A3  00C4               	movwf	utoa@n+6
  2417     01A4  0827               	movf	?___lodiv+7,w
  2418     01A5  00C5               	movwf	utoa@n+7
  2419     01A6                     l1671:
  2420                           
  2421                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2422     01A6  0020               	movlb	0	; select bank0
  2423     01A7  0846               	movf	utoa@i,w
  2424     01A8  0447               	iorwf	utoa@i+1,w
  2425     01A9  1903               	btfsc	3,2
  2426     01AA  29AC               	goto	u721
  2427     01AB  29AD               	goto	u720
  2428     01AC                     u721:
  2429     01AC  29C6               	goto	l1677
  2430     01AD                     u720:
  2431     01AD                     l1673:
  2432     01AD  083E               	movf	utoa@n,w
  2433     01AE  043F               	iorwf	utoa@n+1,w
  2434     01AF  0440               	iorwf	utoa@n+2,w
  2435     01B0  0441               	iorwf	utoa@n+3,w
  2436     01B1  0442               	iorwf	utoa@n+4,w
  2437     01B2  0443               	iorwf	utoa@n+5,w
  2438     01B3  0444               	iorwf	utoa@n+6,w
  2439     01B4  0445               	iorwf	utoa@n+7,w
  2440     01B5  1D03               	skipz
  2441     01B6  29B8               	goto	u731
  2442     01B7  29B9               	goto	u730
  2443     01B8                     u731:
  2444     01B8  2948               	goto	l1661
  2445     01B9                     u730:
  2446     01B9                     l1675:
  2447     01B9  083C               	movf	utoa@p+1,w
  2448     01BA  3A80               	xorlw	128
  2449     01BB  00B8               	movwf	??_utoa
  2450     01BC  3080               	movlw	128
  2451     01BD  0238               	subwf	??_utoa,w
  2452     01BE  1D03               	skipz
  2453     01BF  29C2               	goto	u745
  2454     01C0  3001               	movlw	1
  2455     01C1  023B               	subwf	utoa@p,w
  2456     01C2                     u745:
  2457     01C2  1803               	skipnc
  2458     01C3  29C5               	goto	u741
  2459     01C4  29C6               	goto	u740
  2460     01C5                     u741:
  2461     01C5  2948               	goto	l1661
  2462     01C6                     u740:
  2463     01C6                     l1677:
  2464                           
  2465                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2466     01C6  0020               	movlb	0	; select bank0
  2467     01C7  0846               	movf	utoa@i,w
  2468     01C8  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2469     01C9  00A4               	movwf	pad@buf
  2470     01CA  083A               	movf	utoa@w+1,w
  2471     01CB  00A6               	movwf	pad@p+1
  2472     01CC  0839               	movf	utoa@w,w
  2473     01CD  00A5               	movwf	pad@p
  2474     01CE  083D               	movf	utoa@fp,w
  2475     01CF  3183  23A9  3181   	fcall	_pad
  2476     01D2                     l931:
  2477     01D2  0008               	return
  2478     01D3                     __end_of_utoa:
  2479                           
  2480                           	psect	text7
  2481     03A9                     __ptext7:	
  2482 ;; *************** function _pad *****************
  2483 ;; Defined at:
  2484 ;;		line 133 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  fp              1    wreg     PTR struct _IO_FILE
  2487 ;;		 -> NULL(0), 
  2488 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  2489 ;;		 -> dbuf(32), 
  2490 ;;  p               2    5[BANK0 ] int 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  2493 ;;		 -> NULL(0), 
  2494 ;;  w               2    9[BANK0 ] int 
  2495 ;;  i               2    7[BANK0 ] int 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      void 
  2498 ;; Registers used:
  2499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2505 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2506 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2508 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2509 ;;Total ram usage:        9 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 5
  2512 ;; This function calls:
  2513 ;;		_fputc
  2514 ;;		_fputs
  2515 ;; This function is called by:
  2516 ;;		_utoa
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520     03A9                     _pad:	
  2521                           ;psect for function _pad
  2522                           
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2526                           ;pad@fp stored from wreg
  2527     03A9  0020               	movlb	0	; select bank0
  2528     03AA  00AB               	movwf	pad@fp
  2529     03AB                     l1637:
  2530                           
  2531                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2532     03AB  1BA6               	btfsc	pad@p+1,7
  2533     03AC  2BAE               	goto	u691
  2534     03AD  2BAF               	goto	u690
  2535     03AE                     u691:
  2536     03AE  2BB4               	goto	l1641
  2537     03AF                     u690:
  2538     03AF                     l1639:
  2539     03AF  0826               	movf	pad@p+1,w
  2540     03B0  00AA               	movwf	pad@w+1
  2541     03B1  0825               	movf	pad@p,w
  2542     03B2  00A9               	movwf	pad@w
  2543     03B3  2BB6               	goto	l915
  2544     03B4                     l1641:
  2545     03B4  01A9               	clrf	pad@w
  2546     03B5  01AA               	clrf	pad@w+1
  2547     03B6                     l915:
  2548                           
  2549                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2550     03B6  01A7               	clrf	pad@i
  2551     03B7  01A8               	clrf	pad@i+1
  2552                           
  2553                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2554     03B8  2BC8               	goto	l1647
  2555     03B9                     l1643:
  2556                           
  2557                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2558     03B9  3020               	movlw	32
  2559     03BA  00F2               	movwf	fputc@c
  2560     03BB  3000               	movlw	0
  2561     03BC  00F3               	movwf	fputc@c+1
  2562     03BD  0020               	movlb	0	; select bank0
  2563     03BE  082B               	movf	pad@fp,w
  2564     03BF  00F4               	movwf	fputc@fp
  2565     03C0  3183  2368  3183   	fcall	_fputc
  2566     03C3                     l1645:
  2567                           
  2568                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2569     03C3  3001               	movlw	1
  2570     03C4  0020               	movlb	0	; select bank0
  2571     03C5  07A7               	addwf	pad@i,f
  2572     03C6  3000               	movlw	0
  2573     03C7  3DA8               	addwfc	pad@i+1,f
  2574     03C8                     l1647:
  2575                           
  2576                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2577     03C8  0828               	movf	pad@i+1,w
  2578     03C9  3A80               	xorlw	128
  2579     03CA  00FD               	movwf	??_pad
  2580     03CB  082A               	movf	pad@w+1,w
  2581     03CC  3A80               	xorlw	128
  2582     03CD  027D               	subwf	??_pad,w
  2583     03CE  1D03               	skipz
  2584     03CF  2BD2               	goto	u705
  2585     03D0  0829               	movf	pad@w,w
  2586     03D1  0227               	subwf	pad@i,w
  2587     03D2                     u705:
  2588     03D2  1C03               	skipc
  2589     03D3  2BD5               	goto	u701
  2590     03D4  2BD6               	goto	u700
  2591     03D5                     u701:
  2592     03D5  2BB9               	goto	l1643
  2593     03D6                     u700:
  2594     03D6                     l1649:
  2595                           
  2596                           ;D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2597     03D6  0020               	movlb	0	; select bank0
  2598     03D7  082B               	movf	pad@fp,w
  2599     03D8  00FA               	movwf	fputs@fp
  2600     03D9  0824               	movf	pad@buf,w
  2601     03DA  3183  23DE  3183   	fcall	_fputs
  2602     03DD                     l919:
  2603     03DD  0008               	return
  2604     03DE                     __end_of_pad:
  2605                           
  2606                           	psect	text8
  2607     03DE                     __ptext8:	
  2608 ;; *************** function _fputs *****************
  2609 ;; Defined at:
  2610 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  s               1    wreg     PTR const unsigned char 
  2613 ;;		 -> dbuf(32), 
  2614 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  2615 ;;		 -> NULL(0), 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2618 ;;		 -> dbuf(32), 
  2619 ;;  i               2    1[BANK0 ] int 
  2620 ;;  c               1    0[BANK0 ] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  2   10[COMMON] int 
  2623 ;; Registers used:
  2624 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2630 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2631 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2633 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2634 ;;Total ram usage:        7 bytes
  2635 ;; Hardware stack levels used: 1
  2636 ;; Hardware stack levels required when called: 4
  2637 ;; This function calls:
  2638 ;;		_fputc
  2639 ;; This function is called by:
  2640 ;;		_pad
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644     03DE                     _fputs:	
  2645                           ;psect for function _fputs
  2646                           
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2650                           ;fputs@s stored from wreg
  2651     03DE  0020               	movlb	0	; select bank0
  2652     03DF  00A3               	movwf	fputs@s
  2653     03E0                     l1591:
  2654     03E0  01A1               	clrf	fputs@i
  2655     03E1  01A2               	clrf	fputs@i+1
  2656     03E2  2BF4               	goto	l1597
  2657     03E3                     l1593:
  2658     03E3  0820               	movf	fputs@c,w
  2659     03E4  00FB               	movwf	??_fputs
  2660     03E5  01FC               	clrf	??_fputs+1
  2661     03E6  087B               	movf	??_fputs,w
  2662     03E7  00F2               	movwf	fputc@c
  2663     03E8  087C               	movf	??_fputs+1,w
  2664     03E9  00F3               	movwf	fputc@c+1
  2665     03EA  087A               	movf	fputs@fp,w
  2666     03EB  00F4               	movwf	fputc@fp
  2667     03EC  3183  2368  3183   	fcall	_fputc
  2668     03EF                     l1595:
  2669     03EF  3001               	movlw	1
  2670     03F0  0020               	movlb	0	; select bank0
  2671     03F1  07A1               	addwf	fputs@i,f
  2672     03F2  3000               	movlw	0
  2673     03F3  3DA2               	addwfc	fputs@i+1,f
  2674     03F4                     l1597:
  2675     03F4  0821               	movf	fputs@i,w
  2676     03F5  0723               	addwf	fputs@s,w
  2677     03F6  00FB               	movwf	??_fputs
  2678     03F7  087B               	movf	??_fputs,w
  2679     03F8  0086               	movwf	6
  2680     03F9  0187               	clrf	7
  2681     03FA  0801               	movf	1,w
  2682     03FB  00A0               	movwf	fputs@c
  2683     03FC  0820               	movf	fputs@c,w
  2684     03FD  1D03               	btfss	3,2
  2685     03FE  2C00               	goto	u591
  2686     03FF  2C01               	goto	u590
  2687     0400                     u591:
  2688     0400  2BE3               	goto	l1593
  2689     0401                     u590:
  2690     0401                     l967:
  2691     0401  0008               	return
  2692     0402                     __end_of_fputs:
  2693                           
  2694                           	psect	text9
  2695     0368                     __ptext9:	
  2696 ;; *************** function _fputc *****************
  2697 ;; Defined at:
  2698 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  c               2    2[COMMON] int 
  2701 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  2702 ;;		 -> NULL(0), 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  2    2[COMMON] int 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2714 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2716 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2717 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2718 ;;Total ram usage:        8 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 3
  2721 ;; This function calls:
  2722 ;;		_putch
  2723 ;; This function is called by:
  2724 ;;		_pad
  2725 ;;		_vfpfcnvrt
  2726 ;;		_fputs
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730     0368                     _fputc:	
  2731                           ;psect for function _fputc
  2732                           
  2733     0368                     l1577:	
  2734                           ;incstack = 0
  2735                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2736                           
  2737     0368  0874               	movf	fputc@fp,w
  2738     0369  1903               	btfsc	3,2
  2739     036A  2B6C               	goto	u551
  2740     036B  2B6D               	goto	u550
  2741     036C                     u551:
  2742     036C  2B72               	goto	l1581
  2743     036D                     u550:
  2744     036D                     l1579:
  2745     036D  0874               	movf	fputc@fp,w
  2746     036E  1D03               	btfss	3,2
  2747     036F  2B71               	goto	u561
  2748     0370  2B72               	goto	u560
  2749     0371                     u561:
  2750     0371  2B77               	goto	l1583
  2751     0372                     u560:
  2752     0372                     l1581:
  2753     0372  0872               	movf	fputc@c,w
  2754     0373  3184  248D  3183   	fcall	_putch
  2755     0376  2BA8               	goto	l959
  2756     0377                     l1583:
  2757     0377  0874               	movf	fputc@fp,w
  2758     0378  3E08               	addlw	8
  2759     0379  0086               	movwf	6
  2760     037A  0187               	clrf	7
  2761     037B  0016               	moviw fsr1++
  2762     037C  0401               	iorwf	1,w
  2763     037D  1903               	btfsc	3,2
  2764     037E  2B80               	goto	u571
  2765     037F  2B81               	goto	u570
  2766     0380                     u571:
  2767     0380  2B9F               	goto	l1587
  2768     0381                     u570:
  2769     0381                     l1585:
  2770     0381  0874               	movf	fputc@fp,w
  2771     0382  3E08               	addlw	8
  2772     0383  0086               	movwf	6
  2773     0384  0187               	clrf	7
  2774     0385  3F40               	moviw [0]fsr1
  2775     0386  00F5               	movwf	??_fputc
  2776     0387  3F41               	moviw [1]fsr1
  2777     0388  00F6               	movwf	??_fputc+1
  2778     0389  0874               	movf	fputc@fp,w
  2779     038A  3E02               	addlw	2
  2780     038B  0086               	movwf	6
  2781     038C  0187               	clrf	7
  2782     038D  3F40               	moviw [0]fsr1
  2783     038E  00F7               	movwf	??_fputc+2
  2784     038F  3F41               	moviw [1]fsr1
  2785     0390  00F8               	movwf	??_fputc+3
  2786     0391  0878               	movf	??_fputc+3,w
  2787     0392  3A80               	xorlw	128
  2788     0393  00F9               	movwf	??_fputc+4
  2789     0394  0876               	movf	??_fputc+1,w
  2790     0395  3A80               	xorlw	128
  2791     0396  0279               	subwf	??_fputc+4,w
  2792     0397  1D03               	skipz
  2793     0398  2B9B               	goto	u585
  2794     0399  0875               	movf	??_fputc,w
  2795     039A  0277               	subwf	??_fputc+2,w
  2796     039B                     u585:
  2797     039B  1803               	skipnc
  2798     039C  2B9E               	goto	u581
  2799     039D  2B9F               	goto	u580
  2800     039E                     u581:
  2801     039E  2BA8               	goto	l959
  2802     039F                     u580:
  2803     039F                     l1587:
  2804     039F  0874               	movf	fputc@fp,w
  2805     03A0  3E02               	addlw	2
  2806     03A1  0086               	movwf	6
  2807     03A2  0187               	clrf	7
  2808     03A3  3001               	movlw	1
  2809     03A4  0781               	addwf	1,f
  2810     03A5  3141               	addfsr 1,1
  2811     03A6  1803               	skipnc
  2812     03A7  0A81               	incf	1,f
  2813     03A8                     l959:
  2814     03A8  0008               	return
  2815     03A9                     __end_of_fputc:
  2816                           
  2817                           	psect	text10
  2818     048D                     __ptext10:	
  2819 ;; *************** function _putch *****************
  2820 ;; Defined at:
  2821 ;;		line 462 in file "main.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  data            1    wreg     unsigned char 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  data            1    1[COMMON] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0, pclath, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2839 ;;Total ram usage:        1 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 2
  2842 ;; This function calls:
  2843 ;;		_DataWrite
  2844 ;; This function is called by:
  2845 ;;		_fputc
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849     048D                     _putch:	
  2850                           ;psect for function _putch
  2851                           
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2855                           ;putch@data stored from wreg
  2856     048D  00F1               	movwf	putch@data
  2857     048E                     l1573:
  2858                           
  2859                           ;main.c: 464:     DataWrite(data);
  2860     048E  0871               	movf	putch@data,w
  2861     048F  3184  2464  3184   	fcall	_DataWrite
  2862     0492                     l332:
  2863     0492  0008               	return
  2864     0493                     __end_of_putch:
  2865                           
  2866                           	psect	text11
  2867     0464                     __ptext11:	
  2868 ;; *************** function _DataWrite *****************
  2869 ;; Defined at:
  2870 ;;		line 454 in file "main.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  data            1    wreg     unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  data            1    0[COMMON] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        1 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_putch
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898     0464                     _DataWrite:	
  2899                           ;psect for function _DataWrite
  2900                           
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _DataWrite: [wreg]
  2904                           ;DataWrite@data stored from wreg
  2905     0464  00F0               	movwf	DataWrite@data
  2906     0465                     l1567:
  2907     0465                     l326:	
  2908                           ;main.c: 455:     while(!PIR1bits.TXIF);
  2909                           
  2910     0465  0020               	movlb	0	; select bank0
  2911     0466  1E11               	btfss	17,4	;volatile
  2912     0467  2C69               	goto	u541
  2913     0468  2C6A               	goto	u540
  2914     0469                     u541:
  2915     0469  2C65               	goto	l326
  2916     046A                     u540:
  2917     046A                     l328:
  2918                           
  2919                           ;main.c: 456:     PIR1bits.TXIF = 0;
  2920     046A  1211               	bcf	17,4	;volatile
  2921     046B                     l1569:
  2922                           
  2923                           ;main.c: 457:     TX1REG = data;
  2924     046B  0870               	movf	DataWrite@data,w
  2925     046C  0023               	movlb	3	; select bank3
  2926     046D  009A               	movwf	26	;volatile
  2927     046E                     l329:
  2928     046E  0008               	return
  2929     046F                     __end_of_DataWrite:
  2930                           
  2931                           	psect	text12
  2932     02F7                     __ptext12:	
  2933 ;; *************** function ___lomod *****************
  2934 ;; Defined at:
  2935 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  divisor         8    0[BANK0 ] unsigned long long 
  2938 ;;  dividend        8    8[BANK0 ] unsigned long long 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  counter         1    1[COMMON] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  8    0[BANK0 ] unsigned long long 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2950 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2953 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2954 ;;Total ram usage:       18 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 1
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_utoa
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964     02F7                     ___lomod:	
  2965                           ;psect for function ___lomod
  2966                           
  2967     02F7                     l1621:	
  2968                           ;incstack = 0
  2969                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  2970                           
  2971     02F7  0020               	movlb	0	; select bank0
  2972     02F8  0820               	movf	___lomod@divisor,w
  2973     02F9  0421               	iorwf	___lomod@divisor+1,w
  2974     02FA  0422               	iorwf	___lomod@divisor+2,w
  2975     02FB  0423               	iorwf	___lomod@divisor+3,w
  2976     02FC  0424               	iorwf	___lomod@divisor+4,w
  2977     02FD  0425               	iorwf	___lomod@divisor+5,w
  2978     02FE  0426               	iorwf	___lomod@divisor+6,w
  2979     02FF  0427               	iorwf	___lomod@divisor+7,w
  2980     0300  1903               	skipnz
  2981     0301  2B03               	goto	u651
  2982     0302  2B04               	goto	u650
  2983     0303                     u651:
  2984     0303  2B57               	goto	l675
  2985     0304                     u650:
  2986     0304                     l1623:
  2987     0304  01F1               	clrf	___lomod@counter
  2988     0305  0AF1               	incf	___lomod@counter,f
  2989     0306  2B13               	goto	l1629
  2990     0307                     l1625:
  2991     0307  35A0               	lslf	___lomod@divisor,f
  2992     0308  0DA1               	rlf	___lomod@divisor+1,f
  2993     0309  0DA2               	rlf	___lomod@divisor+2,f
  2994     030A  0DA3               	rlf	___lomod@divisor+3,f
  2995     030B  0DA4               	rlf	___lomod@divisor+4,f
  2996     030C  0DA5               	rlf	___lomod@divisor+5,f
  2997     030D  0DA6               	rlf	___lomod@divisor+6,f
  2998     030E  0DA7               	rlf	___lomod@divisor+7,f
  2999     030F                     l1627:
  3000     030F  3001               	movlw	1
  3001     0310  00F0               	movwf	??___lomod
  3002     0311  0870               	movf	??___lomod,w
  3003     0312  07F1               	addwf	___lomod@counter,f
  3004     0313                     l1629:
  3005     0313  1FA7               	btfss	___lomod@divisor+7,7
  3006     0314  2B16               	goto	u661
  3007     0315  2B17               	goto	u660
  3008     0316                     u661:
  3009     0316  2B07               	goto	l1625
  3010     0317                     u660:
  3011     0317                     l1631:
  3012     0317  0827               	movf	___lomod@divisor+7,w
  3013     0318  022F               	subwf	___lomod@dividend+7,w
  3014     0319  1D03               	skipz
  3015     031A  2B35               	goto	u675
  3016     031B  0826               	movf	___lomod@divisor+6,w
  3017     031C  022E               	subwf	___lomod@dividend+6,w
  3018     031D  1D03               	skipz
  3019     031E  2B35               	goto	u675
  3020     031F  0825               	movf	___lomod@divisor+5,w
  3021     0320  022D               	subwf	___lomod@dividend+5,w
  3022     0321  1D03               	skipz
  3023     0322  2B35               	goto	u675
  3024     0323  0824               	movf	___lomod@divisor+4,w
  3025     0324  022C               	subwf	___lomod@dividend+4,w
  3026     0325  1D03               	skipz
  3027     0326  2B35               	goto	u675
  3028     0327  0823               	movf	___lomod@divisor+3,w
  3029     0328  022B               	subwf	___lomod@dividend+3,w
  3030     0329  1D03               	skipz
  3031     032A  2B35               	goto	u675
  3032     032B  0822               	movf	___lomod@divisor+2,w
  3033     032C  022A               	subwf	___lomod@dividend+2,w
  3034     032D  1D03               	skipz
  3035     032E  2B35               	goto	u675
  3036     032F  0821               	movf	___lomod@divisor+1,w
  3037     0330  0229               	subwf	___lomod@dividend+1,w
  3038     0331  1D03               	skipz
  3039     0332  2B35               	goto	u675
  3040     0333  0820               	movf	___lomod@divisor,w
  3041     0334  0228               	subwf	___lomod@dividend,w
  3042     0335                     u675:
  3043     0335  1C03               	skipc
  3044     0336  2B38               	goto	u671
  3045     0337  2B39               	goto	u670
  3046     0338                     u671:
  3047     0338  2B49               	goto	l1635
  3048     0339                     u670:
  3049     0339                     l1633:
  3050     0339  0820               	movf	___lomod@divisor,w
  3051     033A  02A8               	subwf	___lomod@dividend,f
  3052     033B  0821               	movf	___lomod@divisor+1,w
  3053     033C  3BA9               	subwfb	___lomod@dividend+1,f
  3054     033D  0822               	movf	___lomod@divisor+2,w
  3055     033E  3BAA               	subwfb	___lomod@dividend+2,f
  3056     033F  0823               	movf	___lomod@divisor+3,w
  3057     0340  3BAB               	subwfb	___lomod@dividend+3,f
  3058     0341  0824               	movf	___lomod@divisor+4,w
  3059     0342  3BAC               	subwfb	___lomod@dividend+4,f
  3060     0343  0825               	movf	___lomod@divisor+5,w
  3061     0344  3BAD               	subwfb	___lomod@dividend+5,f
  3062     0345  0826               	movf	___lomod@divisor+6,w
  3063     0346  3BAE               	subwfb	___lomod@dividend+6,f
  3064     0347  0827               	movf	___lomod@divisor+7,w
  3065     0348  3BAF               	subwfb	___lomod@dividend+7,f
  3066     0349                     l1635:
  3067     0349  36A7               	lsrf	___lomod@divisor+7,f
  3068     034A  0CA6               	rrf	___lomod@divisor+6,f
  3069     034B  0CA5               	rrf	___lomod@divisor+5,f
  3070     034C  0CA4               	rrf	___lomod@divisor+4,f
  3071     034D  0CA3               	rrf	___lomod@divisor+3,f
  3072     034E  0CA2               	rrf	___lomod@divisor+2,f
  3073     034F  0CA1               	rrf	___lomod@divisor+1,f
  3074     0350  0CA0               	rrf	___lomod@divisor,f
  3075     0351  3001               	movlw	1
  3076     0352  02F1               	subwf	___lomod@counter,f
  3077     0353  1D03               	btfss	3,2
  3078     0354  2B56               	goto	u681
  3079     0355  2B57               	goto	u680
  3080     0356                     u681:
  3081     0356  2B17               	goto	l1631
  3082     0357                     u680:
  3083     0357                     l675:
  3084     0357  0828               	movf	___lomod@dividend,w
  3085     0358  00A0               	movwf	?___lomod
  3086     0359  0829               	movf	___lomod@dividend+1,w
  3087     035A  00A1               	movwf	?___lomod+1
  3088     035B  082A               	movf	___lomod@dividend+2,w
  3089     035C  00A2               	movwf	?___lomod+2
  3090     035D  082B               	movf	___lomod@dividend+3,w
  3091     035E  00A3               	movwf	?___lomod+3
  3092     035F  082C               	movf	___lomod@dividend+4,w
  3093     0360  00A4               	movwf	?___lomod+4
  3094     0361  082D               	movf	___lomod@dividend+5,w
  3095     0362  00A5               	movwf	?___lomod+5
  3096     0363  082E               	movf	___lomod@dividend+6,w
  3097     0364  00A6               	movwf	?___lomod+6
  3098     0365  082F               	movf	___lomod@dividend+7,w
  3099     0366  00A7               	movwf	?___lomod+7
  3100     0367                     l682:
  3101     0367  0008               	return
  3102     0368                     __end_of___lomod:
  3103                           
  3104                           	psect	text13
  3105     0273                     __ptext13:	
  3106 ;; *************** function ___lodiv *****************
  3107 ;; Defined at:
  3108 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  divisor         8    0[BANK0 ] unsigned long long 
  3111 ;;  dividend        8    8[BANK0 ] unsigned long long 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  quotient        8    1[COMMON] unsigned long long 
  3114 ;;  counter         1    9[COMMON] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  8    0[BANK0 ] unsigned long long 
  3117 ;; Registers used:
  3118 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3124 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3125 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3127 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3128 ;;Total ram usage:       26 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 1
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_utoa
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138     0273                     ___lodiv:	
  3139                           ;psect for function ___lodiv
  3140                           
  3141     0273                     l1599:	
  3142                           ;incstack = 0
  3143                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3144                           
  3145     0273  3071               	movlw	low ___lodiv@quotient
  3146     0274  0086               	movwf	6
  3147     0275  3000               	movlw	high ___lodiv@quotient
  3148     0276  0087               	movwf	7
  3149     0277  3008               	movlw	8
  3150     0278  00F0               	movwf	??___lodiv
  3151     0279  3000               	movlw	0
  3152     027A                     u600:
  3153     027A  001E               	movwi fsr1++
  3154     027B  0BF0               	decfsz	??___lodiv,f
  3155     027C  2A7A               	goto	u600
  3156     027D                     l1601:
  3157     027D  0020               	movlb	0	; select bank0
  3158     027E  0820               	movf	___lodiv@divisor,w
  3159     027F  0421               	iorwf	___lodiv@divisor+1,w
  3160     0280  0422               	iorwf	___lodiv@divisor+2,w
  3161     0281  0423               	iorwf	___lodiv@divisor+3,w
  3162     0282  0424               	iorwf	___lodiv@divisor+4,w
  3163     0283  0425               	iorwf	___lodiv@divisor+5,w
  3164     0284  0426               	iorwf	___lodiv@divisor+6,w
  3165     0285  0427               	iorwf	___lodiv@divisor+7,w
  3166     0286  1903               	skipnz
  3167     0287  2A89               	goto	u611
  3168     0288  2A8A               	goto	u610
  3169     0289                     u611:
  3170     0289  2AE6               	goto	l665
  3171     028A                     u610:
  3172     028A                     l1603:
  3173     028A  01F9               	clrf	___lodiv@counter
  3174     028B  0AF9               	incf	___lodiv@counter,f
  3175     028C  2A99               	goto	l1609
  3176     028D                     l1605:
  3177     028D  35A0               	lslf	___lodiv@divisor,f
  3178     028E  0DA1               	rlf	___lodiv@divisor+1,f
  3179     028F  0DA2               	rlf	___lodiv@divisor+2,f
  3180     0290  0DA3               	rlf	___lodiv@divisor+3,f
  3181     0291  0DA4               	rlf	___lodiv@divisor+4,f
  3182     0292  0DA5               	rlf	___lodiv@divisor+5,f
  3183     0293  0DA6               	rlf	___lodiv@divisor+6,f
  3184     0294  0DA7               	rlf	___lodiv@divisor+7,f
  3185     0295                     l1607:
  3186     0295  3001               	movlw	1
  3187     0296  00F0               	movwf	??___lodiv
  3188     0297  0870               	movf	??___lodiv,w
  3189     0298  07F9               	addwf	___lodiv@counter,f
  3190     0299                     l1609:
  3191     0299  1FA7               	btfss	___lodiv@divisor+7,7
  3192     029A  2A9C               	goto	u621
  3193     029B  2A9D               	goto	u620
  3194     029C                     u621:
  3195     029C  2A8D               	goto	l1605
  3196     029D                     u620:
  3197     029D                     l1611:
  3198     029D  35F1               	lslf	___lodiv@quotient,f
  3199     029E  0DF2               	rlf	___lodiv@quotient+1,f
  3200     029F  0DF3               	rlf	___lodiv@quotient+2,f
  3201     02A0  0DF4               	rlf	___lodiv@quotient+3,f
  3202     02A1  0DF5               	rlf	___lodiv@quotient+4,f
  3203     02A2  0DF6               	rlf	___lodiv@quotient+5,f
  3204     02A3  0DF7               	rlf	___lodiv@quotient+6,f
  3205     02A4  0DF8               	rlf	___lodiv@quotient+7,f
  3206     02A5                     l1613:
  3207     02A5  0827               	movf	___lodiv@divisor+7,w
  3208     02A6  022F               	subwf	___lodiv@dividend+7,w
  3209     02A7  1D03               	skipz
  3210     02A8  2AC3               	goto	u635
  3211     02A9  0826               	movf	___lodiv@divisor+6,w
  3212     02AA  022E               	subwf	___lodiv@dividend+6,w
  3213     02AB  1D03               	skipz
  3214     02AC  2AC3               	goto	u635
  3215     02AD  0825               	movf	___lodiv@divisor+5,w
  3216     02AE  022D               	subwf	___lodiv@dividend+5,w
  3217     02AF  1D03               	skipz
  3218     02B0  2AC3               	goto	u635
  3219     02B1  0824               	movf	___lodiv@divisor+4,w
  3220     02B2  022C               	subwf	___lodiv@dividend+4,w
  3221     02B3  1D03               	skipz
  3222     02B4  2AC3               	goto	u635
  3223     02B5  0823               	movf	___lodiv@divisor+3,w
  3224     02B6  022B               	subwf	___lodiv@dividend+3,w
  3225     02B7  1D03               	skipz
  3226     02B8  2AC3               	goto	u635
  3227     02B9  0822               	movf	___lodiv@divisor+2,w
  3228     02BA  022A               	subwf	___lodiv@dividend+2,w
  3229     02BB  1D03               	skipz
  3230     02BC  2AC3               	goto	u635
  3231     02BD  0821               	movf	___lodiv@divisor+1,w
  3232     02BE  0229               	subwf	___lodiv@dividend+1,w
  3233     02BF  1D03               	skipz
  3234     02C0  2AC3               	goto	u635
  3235     02C1  0820               	movf	___lodiv@divisor,w
  3236     02C2  0228               	subwf	___lodiv@dividend,w
  3237     02C3                     u635:
  3238     02C3  1C03               	skipc
  3239     02C4  2AC6               	goto	u631
  3240     02C5  2AC7               	goto	u630
  3241     02C6                     u631:
  3242     02C6  2AD8               	goto	l1619
  3243     02C7                     u630:
  3244     02C7                     l1615:
  3245     02C7  0820               	movf	___lodiv@divisor,w
  3246     02C8  02A8               	subwf	___lodiv@dividend,f
  3247     02C9  0821               	movf	___lodiv@divisor+1,w
  3248     02CA  3BA9               	subwfb	___lodiv@dividend+1,f
  3249     02CB  0822               	movf	___lodiv@divisor+2,w
  3250     02CC  3BAA               	subwfb	___lodiv@dividend+2,f
  3251     02CD  0823               	movf	___lodiv@divisor+3,w
  3252     02CE  3BAB               	subwfb	___lodiv@dividend+3,f
  3253     02CF  0824               	movf	___lodiv@divisor+4,w
  3254     02D0  3BAC               	subwfb	___lodiv@dividend+4,f
  3255     02D1  0825               	movf	___lodiv@divisor+5,w
  3256     02D2  3BAD               	subwfb	___lodiv@dividend+5,f
  3257     02D3  0826               	movf	___lodiv@divisor+6,w
  3258     02D4  3BAE               	subwfb	___lodiv@dividend+6,f
  3259     02D5  0827               	movf	___lodiv@divisor+7,w
  3260     02D6  3BAF               	subwfb	___lodiv@dividend+7,f
  3261     02D7                     l1617:
  3262     02D7  1471               	bsf	___lodiv@quotient,0
  3263     02D8                     l1619:
  3264     02D8  36A7               	lsrf	___lodiv@divisor+7,f
  3265     02D9  0CA6               	rrf	___lodiv@divisor+6,f
  3266     02DA  0CA5               	rrf	___lodiv@divisor+5,f
  3267     02DB  0CA4               	rrf	___lodiv@divisor+4,f
  3268     02DC  0CA3               	rrf	___lodiv@divisor+3,f
  3269     02DD  0CA2               	rrf	___lodiv@divisor+2,f
  3270     02DE  0CA1               	rrf	___lodiv@divisor+1,f
  3271     02DF  0CA0               	rrf	___lodiv@divisor,f
  3272     02E0  3001               	movlw	1
  3273     02E1  02F9               	subwf	___lodiv@counter,f
  3274     02E2  1D03               	btfss	3,2
  3275     02E3  2AE5               	goto	u641
  3276     02E4  2AE6               	goto	u640
  3277     02E5                     u641:
  3278     02E5  2A9D               	goto	l1611
  3279     02E6                     u640:
  3280     02E6                     l665:
  3281     02E6  0871               	movf	___lodiv@quotient,w
  3282     02E7  00A0               	movwf	?___lodiv
  3283     02E8  0872               	movf	___lodiv@quotient+1,w
  3284     02E9  00A1               	movwf	?___lodiv+1
  3285     02EA  0873               	movf	___lodiv@quotient+2,w
  3286     02EB  00A2               	movwf	?___lodiv+2
  3287     02EC  0874               	movf	___lodiv@quotient+3,w
  3288     02ED  00A3               	movwf	?___lodiv+3
  3289     02EE  0875               	movf	___lodiv@quotient+4,w
  3290     02EF  00A4               	movwf	?___lodiv+4
  3291     02F0  0876               	movf	___lodiv@quotient+5,w
  3292     02F1  00A5               	movwf	?___lodiv+5
  3293     02F2  0877               	movf	___lodiv@quotient+6,w
  3294     02F3  00A6               	movwf	?___lodiv+6
  3295     02F4  0878               	movf	___lodiv@quotient+7,w
  3296     02F5  00A7               	movwf	?___lodiv+7
  3297     02F6                     l672:
  3298     02F6  0008               	return
  3299     02F7                     __end_of___lodiv:
  3300                           
  3301                           	psect	intentry
  3302     0004                     __pintentry:	
  3303 ;; *************** function _ISR *****************
  3304 ;; Defined at:
  3305 ;;		line 510 in file "main.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3323 ;;Total ram usage:        0 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		Interrupt level 1
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332     0004                     _ISR:
  3333                           
  3334                           ;incstack = 0
  3335     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3336                           
  3337                           ; Regs used in _ISR: [wreg+status,2]
  3338     0005  3180               	pagesel	$
  3339     0006                     i1l1895:
  3340                           
  3341                           ;main.c: 511:     if(PIR1bits.RCIF){
  3342     0006  0020               	movlb	0	; select bank0
  3343     0007  1E91               	btfss	17,5	;volatile
  3344     0008  280A               	goto	u80_21
  3345     0009  280B               	goto	u80_20
  3346     000A                     u80_21:
  3347     000A  281C               	goto	i1l364
  3348     000B                     u80_20:
  3349     000B                     i1l1897:
  3350                           
  3351                           ;main.c: 512:         PIR1bits.RCIF = 0;
  3352     000B  1291               	bcf	17,5	;volatile
  3353                           
  3354                           ;main.c: 513:         if(RC1STAbits.FERR || RC1STAbits.OERR){
  3355     000C  0023               	movlb	3	; select bank3
  3356     000D  191D               	btfsc	29,2	;volatile
  3357     000E  2810               	goto	u81_21
  3358     000F  2811               	goto	u81_20
  3359     0010                     u81_21:
  3360     0010  2815               	goto	i1l1901
  3361     0011                     u81_20:
  3362     0011                     i1l1899:
  3363     0011  1C9D               	btfss	29,1	;volatile
  3364     0012  2814               	goto	u82_21
  3365     0013  2815               	goto	u82_20
  3366     0014                     u82_21:
  3367     0014  2819               	goto	i1l1905
  3368     0015                     u82_20:
  3369     0015                     i1l1901:
  3370                           
  3371                           ;main.c: 514:             RC1STA = 0x00;
  3372     0015  019D               	clrf	29	;volatile
  3373     0016                     i1l1903:
  3374                           
  3375                           ;main.c: 515:             RC1STA = 0x90;
  3376     0016  3090               	movlw	144
  3377     0017  009D               	movwf	29	;volatile
  3378                           
  3379                           ;main.c: 516:         }
  3380     0018  281C               	goto	i1l364
  3381     0019                     i1l1905:
  3382                           
  3383                           ;main.c: 518:             g_ReadData = RC1REG;
  3384     0019  0819               	movf	25,w	;volatile
  3385     001A  0020               	movlb	0	; select bank0
  3386     001B  00EC               	movwf	_g_ReadData
  3387     001C                     i1l364:
  3388     001C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3389     001D  0009               	retfie
  3390     001E                     __end_of_ISR:
  3391     007E                     btemp	set	126	;btemp
  3392     007E                     int$flags	set	126
  3393     007E                     wtemp0	set	126
  3394                           
  3395                           	psect	idloc
  3396                           
  3397                           ;Config register IDLOC0 @ 0x8000
  3398                           ;	unspecified, using default values
  3399     8000                     	org	32768
  3400     8000  3FFF               	dw	16383
  3401                           
  3402                           ;Config register IDLOC1 @ 0x8001
  3403                           ;	unspecified, using default values
  3404     8001                     	org	32769
  3405     8001  3FFF               	dw	16383
  3406                           
  3407                           ;Config register IDLOC2 @ 0x8002
  3408                           ;	unspecified, using default values
  3409     8002                     	org	32770
  3410     8002  3FFF               	dw	16383
  3411                           
  3412                           ;Config register IDLOC3 @ 0x8003
  3413                           ;	unspecified, using default values
  3414     8003                     	org	32771
  3415     8003  3FFF               	dw	16383
  3416                           
  3417                           	psect	config
  3418                           
  3419                           ;Config register CONFIG1 @ 0x8007
  3420                           ;	Oscillator Selection Bits
  3421                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3422                           ;	Watchdog Timer Enable
  3423                           ;	WDTE = OFF, WDT disabled
  3424                           ;	Power-up Timer Enable
  3425                           ;	PWRTE = ON, PWRT enabled
  3426                           ;	MCLR Pin Function Select
  3427                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3428                           ;	Flash Program Memory Code Protection
  3429                           ;	CP = OFF, Program memory code protection is disabled
  3430                           ;	Brown-out Reset Enable
  3431                           ;	BOREN = ON, Brown-out Reset enabled
  3432                           ;	Clock Out Enable
  3433                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3434                           ;	Internal/External Switchover Mode
  3435                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  3436                           ;	Fail-Safe Clock Monitor Enable
  3437                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3438     8007                     	org	32775
  3439     8007  0FC4               	dw	4036
  3440                           
  3441                           ;Config register CONFIG2 @ 0x8008
  3442                           ;	Flash Memory Self-Write Protection
  3443                           ;	WRT = OFF, Write protection off
  3444                           ;	Peripheral Pin Select one-way control
  3445                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  3446                           ;	Zero-cross detect disable
  3447                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  3448                           ;	Phase Lock Loop enable
  3449                           ;	PLLEN = ON, 4x PLL is always enabled
  3450                           ;	Stack Overflow/Underflow Reset Enable
  3451                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3452                           ;	Brown-out Reset Voltage Selection
  3453                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  3454                           ;	Low-Power Brown Out Reset
  3455                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3456                           ;	Low-Voltage Programming Enable
  3457                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3458     8008                     	org	32776
  3459     8008  1BFF               	dw	7167

Data Sizes:
    Strings     9
    Constant    0
    Data        24
    BSS         38
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      77
    BANK1            80     24      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S970$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S970$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1005$vp	PTR void  size(1) Largest target is 0

    convarg.vp	PTR void  size(1) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _sensorA_Read->_ADC_result
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_DataWrite

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->___lodiv
    _utoa->___lomod
    _pad->_fputs

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    4560
                                             69 BANK0      2     2      0
                                              0 BANK1     24    24      0
                             _printf
                       _sensorA_Read
 ---------------------------------------------------------------------------------
 (1) _sensorA_Read                                         2     0      2      45
                                              6 COMMON     2     0      2
                         _ADC_result
 ---------------------------------------------------------------------------------
 (2) _ADC_result                                           6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _printf                                               7     3      4    4514
                                             64 BANK0      5     1      4
                       _sensorA_Read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    4384
                                             57 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           22    20      2    4060
                                             40 BANK0     17    15      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    2888
                                             16 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    1886
                                             13 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     866
                                             10 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     660
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                          _DataWrite
 ---------------------------------------------------------------------------------
 (9) _DataWrite                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _sensorA_Read (ARG)
       _ADC_result
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
             _DataWrite
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
   _sensorA_Read

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      E       E       3      100.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     47      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     18      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      AB      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      AB      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 17 14:07:47 2023

          DataWrite@data 0070                      l332 0492                      l341 0480  
                    l326 0465                      l335 0414                      l328 046A  
                    l329 046E                      l338 0421                      l672 02F6  
                    l665 02E6                      l682 0367                      l675 0357  
                    l915 03B6                      l931 01D2                      l940 0272  
                    l925 012D                      l919 03DD                      l947 043D  
                    l959 03A8                      l967 0401                      l895 0463  
                    u600 027A                      u610 028A                      u611 0289  
                    u620 029D                      u540 046A                      u700 03D6  
                    _ISR 0004                      u621 029C                      u541 0469  
                    u701 03D5                      u630 02C7                      u550 036D  
                    u710 0122                      u631 02C6                      u551 036C  
                    u711 0121                      u640 02E6                      u560 0372  
                    u720 01AD                      u641 02E5                      u561 0371  
                    u705 03D2                      u721 01AC                      u650 0304  
                    u570 0381                      u730 01B9                      u635 02C3  
                    u651 0303                      u571 0380                      u731 01B8  
                    u715 011E                      u660 0317                      u580 039F  
                    u740 01C6                      u661 0316                      u581 039E  
                    u741 01C5                      u670 0339                      u590 0401  
                    u750 01E6                      u671 0338                      u591 0400  
                    u751 01E5                      u680 0357                      u760 020A  
                    u681 0356                      u585 039B                      u745 01C2  
                    u761 0209                      u690 03AF                      u770 0418  
                    u675 0335                      u691 03AE                      u771 0417  
                    u780 043B                      u781 043A                      u837 00B6  
                    u790 00FC                      u847 040F                      _pad 03A9  
                    wreg 0009                     ?_ISR 0070                     l1601 027D  
                   l1611 029D                     l1603 028A                     l1613 02A5  
                   l1605 028D                     l1621 02F7                     l1615 02C7  
                   l1607 0295                     l1631 0317                     l1623 0304  
                   l1703 023F                     l1617 02D7                     l1609 0299  
                   l1633 0339                     l1625 0307                     l1641 03B4  
                   l1705 0250                     l1721 040D                     l1801 007E  
                   l1619 02D8                     l1635 0349                     l1627 030F  
                   l1643 03B9                     l1651 0115                     l1723 040E  
                   l1811 008A                     l1803 0081                     l1629 0313  
                   l1573 048E                     l1581 0372                     l1645 03C3  
                   l1637 03AB                     l1661 0148                     l1653 0122  
                   l1709 025A                     l1733 0424                     l1725 0412  
                   l1821 0094                     l1813 008C                     l1805 0083  
                   l1567 0465                     l1583 0377                     l1591 03E0  
                   l1647 03C8                     l1639 03AF                     l1663 014D  
                   l1671 01A6                     l1655 0128                     l1735 0429  
                   l1727 0418                     l1719 0403                     l1743 0478  
                   l1831 009E                     l1823 0096                     l1815 008D  
                   l1807 0084                     l1569 046B                     l1585 0381  
                   l1577 0368                     l1593 03E3                     l1649 03D6  
                   l1673 01AD                     l1665 0171                     l1657 0131  
                   l1681 01D5                     l1737 0431                     l1729 041C  
                   l1841 00B0                     l1833 00A4                     l1825 0097  
                   l1817 008E                     l1809 0087                     l1761 0049  
                   l1753 003E                     l1587 039F                     l1579 036D  
                   l1595 03EF                     l1675 01B9                     l1667 0175  
                   l1659 0145                     l1691 0200                     l1683 01E6  
                   l1739 043B                     l1747 0456                     l1851 00CB  
                   l1843 00BD                     l1835 00A6                     l1827 0098  
                   l1819 0091                     l1771 0057                     l1763 0050  
                   l1755 0041                     l1597 03F4                     l1677 01C6  
                   l1669 0179                     l1693 020A                     l1685 01EE  
                   l1749 0459                     l1861 00DB                     l1853 00CD  
                   l1845 00C0                     l1837 00A8                     l1829 009B  
                   l1781 0066                     l1773 005C                     l1765 0052  
                   l1757 0043                     l1599 0273                     l1927 024B  
                   l1695 021C                     l1687 01F5                     l1871 00E6  
                   l1863 00DE                     l1855 00CF                     l1847 00C3  
                   l1839 00AA                     l1791 0072                     l1783 0069  
                   l1775 005E                     l1767 0055                     l1759 0046  
                   l1697 022A                     l1689 01F9                     l1881 00EF  
                   l1873 00E8                     l1865 00E0                     l1857 00D5  
                   l1849 00C9                     l1793 0075                     l1785 006B  
                   l1777 0060                     l1769 0056                     l1883 00F1  
                   l1875 00EA                     l1867 00E2                     l1859 00D8  
                   l1795 0077                     l1787 006C                     l1779 0063  
                   l1885 0100                     l1877 00EB                     l1869 00E4  
                   l1797 0078                     l1789 006F                     ?_pad 0024  
                   l1879 00EC                     l1799 007B                     STR_1 046F  
                   _LATA 010C                     _LATB 010D                     _LATC 010E  
                   _T2PR 0494                     _WPUA 020C                     _WPUB 020D  
                   _WPUC 020E                     _dbuf 00A0                     _main 003E  
                   _prec 0069                     pad@i 0027                     pad@p 0025  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   pad@w 0029                     btemp 007E                     _utoa 0113  
                   start 001E                    ??_ISR 0070                    ??_pad 007D  
                  ?_main 0070                    ?_utoa 0030          __end_of___lodiv 02F7  
                  _T2CON 0495          __end_of___lomod 0368                    i1l364 001C  
           vfpfcnvrt@fmt 0048                    u80_20 000B                    u80_21 000A  
                  u81_20 0011                    u81_21 0010                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    u82_20 0015  
                  u82_21 0014                    _RXPPS 0E3D                    _flags 006B  
                  _fputc 0368                    _fputs 03DE                    pad@fp 002B  
                  _width 0067                    _putch 048D                    utoa@d 0030  
                  utoa@i 0046                    utoa@n 003E                    utoa@p 003B  
                  utoa@w 0039                    status 0003                    wtemp0 007E  
       ___lodiv@dividend 0028          __initialization 0020             __end_of_main 0113  
           __end_of_utoa 01D3                   ??_main 0065                   ??_utoa 0038  
       ___lodiv@quotient 0071                   _ADCON0 0490                   _ADCON1 0491  
                 ?_fputc 0072                   ?_fputs 007A                   _ADRESH 048F  
                 _ADRESL 048E                   _CCPR1H 0292                   _CCPR2H 0296  
                 _CCPR1L 0291                   _CCPR2L 0295                   _ANSELA 018C  
                 ?_putch 0070                   _ANSELB 018D                   _ANSELC 018E  
                 _RC1REG 0199                   _RA4PPS 0E94                   _RC0PPS 0EA0  
                 _RA5PPS 0E95                   _RC1PPS 0EA1                   _RB3PPS 0E9B  
                 _RC1STA 019D                   _RA6PPS 0E96                   _RB4PPS 0E9C  
                 _RC2PPS 0EA2                   _RC3PPS 0EA3                   _RA7PPS 0E97  
                 _RC4PPS 0EA4                   _RC5PPS 0EA5                   _RC7PPS 0EA7  
                 i1l1901 0015                   i1l1903 0016                   i1l1905 0019  
                 i1l1895 0006                   i1l1897 000B                   i1l1899 0011  
                 _OSCCON 009B                   _TX1REG 019A                   _TX1STA 019E  
           _CCPTMRS1bits 029E             vfprintf@cfmt 005E             _CCPTMRS2bits 029F  
           ??_ADC_result 0072                ??___lodiv 0070                ??___lomod 0070  
                 _printf 0456                   pad@buf 0024                   fputc@c 0072  
                 fputs@c 0020                   fputs@i 0021                   fputs@s 0023  
       __end_of_vfprintf 043E                   utoa@fp 003D        __end_of_DataWrite 046F  
     __end_of_ADC_result 0422  __end_of__initialization 003A               _g_ReadData 006C  
         __pcstackCOMMON 0070             __pidataBANK1 043E            __end_of_fputc 03A9  
          __end_of_fputs 0402            __end_of_putch 0493           _OPTION_REGbits 0097  
                ??_fputc 0075                  ??_fputs 007B                  ??_putch 0071  
             __pbssBANK0 0067               __pbssBANK1 00A0             _T2CLKCONbits 0497  
             __pmaintext 003E               __pintentry 0004                  _CCP1CON 0293  
                _CCP2CON 0297                  ?_printf 0060                  _SP1BRGH 019C  
                _SP1BRGL 019B                  _PWM3DCH 0615                  _PWM3DCL 0614  
                _PWM4DCH 0618                  _PWM4DCL 0617                  _PWM5DCH 0D94  
                _PWM5DCL 0D93                  _PWM6DCH 0DA4                  _PWM3CON 0616  
                _PWM6DCL 0DA3                  _PWM4CON 0619                  _PWM5CON 0D9B  
                _PWM9DCH 061B                  _PWM6CON 0DAB                  _PWM9DCL 061A  
                _PWM5OFH 0D98                  _PWM5OFL 0D97                  _PWM5PHH 0D92  
                _PWM6OFH 0DA8                  _PWM9CON 061C                  _PWM5PHL 0D91  
                _PWM6OFL 0DA7                  _PWM6PHH 0DA2                  _PWM6PHL 0DA1  
                _PWM5PRH 0D96                  _PWM5PRL 0D95                  _PWM6PRH 0DA6  
                _PWM6PRL 0DA5         ___lomod@dividend 0028                  ___lodiv 0273  
                ___lomod 02F7                ?_vfprintf 0059                  __ptext1 0478  
                __ptext2 0402                  __ptext3 0456                  __ptext4 0422  
                __ptext5 01D3                  __ptext6 0113                  __ptext7 03A9  
                __ptext8 03DE                  __ptext9 0368            ?_sensorA_Read 0076  
                clrloop0 0488                  main@str 00D8     end_of_initialization 003A  
                fputc@fp 0074                  init_ram 0481                  fputs@fp 007A  
                initloop 0482        __end_of_vfpfcnvrt 0273         vfpfcnvrt@convarg 004E  
             main@F12361 00C0                _PWM5LDCON 0D9F                _PWM6LDCON 0DAF  
              _PWM5OFCON 0DA0                _PWM6OFCON 0DB0               ??_vfprintf 005C  
              _PORTAbits 000C           ??_sensorA_Read 0078                _DataWrite 0464  
            vfpfcnvrt@ap 0049              vfpfcnvrt@cp 0057              vfpfcnvrt@fp 0056  
         __end_of_printf 0464      start_initialization 0020          ___lodiv@divisor 0020  
        ___lodiv@counter 0079              __end_of_ISR 001E              __end_of_pad 03DE  
           ADC_result@ch 0075               ?_DataWrite 0070              vfprintf@fmt 0059  
          _PWM5LDCONbits 0D9F              __pdataBANK1 00C0            _PWM6LDCONbits 0DAF  
               ??_printf 007E                ___latbits 0003            __pcstackBANK0 0020  
          __pcstackBANK1 00D8     __end_of_sensorA_Read 0481                 ?___lodiv 0020  
               ?___lomod 0020          ___lomod@divisor 0020                 _BAUD1CON 019F  
        ___lomod@counter 0071                 _LATAbits 010C                 _LATBbits 010D  
               _LATCbits 010E              ??_DataWrite 0070                clear_ram0 0487  
               _PIE1bits 0091                 _PIR1bits 0011                 _PWM5TMRH 0D9A  
               _PWM5TMRL 0D99                 _PWM6TMRH 0DAA                 _PWM6TMRL 0DA9  
              _vfpfcnvrt 01D3               _ADCON0bits 0490               vfprintf@ap 005B  
             vfprintf@fp 005D               _ADC_result 0402               ?_vfpfcnvrt 0048  
               __ptext10 048D                 __ptext11 0464                 __ptext12 02F7  
               __ptext13 0273       ADC_result@adcValue 0073               _RC1STAbits 019D  
               int$flags 007E                 _vfprintf 0422                printf@fmt 0060  
              putch@data 0071             _sensorA_Read 0478               _INTCONbits 000B  
               intlevel1 0000              ?_ADC_result 0070                 printf@ap 0064  
            ??_vfpfcnvrt 004A               _PWM5CLKCON 0D9E               _PWM6CLKCON 0DAE  
          __pstringtext1 046F            __pstringtext2 0000  
