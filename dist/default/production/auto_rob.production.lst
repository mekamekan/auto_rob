

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 17 12:55:06 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1778
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1778 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     0111                     	;# 
   118     0112                     	;# 
   119     0113                     	;# 
   120     0114                     	;# 
   121     0115                     	;# 
   122     0116                     	;# 
   123     0117                     	;# 
   124     0118                     	;# 
   125     0119                     	;# 
   126     011A                     	;# 
   127     011B                     	;# 
   128     011C                     	;# 
   129     011D                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     018E                     	;# 
   133     0191                     	;# 
   134     0191                     	;# 
   135     0192                     	;# 
   136     0193                     	;# 
   137     0193                     	;# 
   138     0194                     	;# 
   139     0195                     	;# 
   140     0196                     	;# 
   141     0197                     	;# 
   142     0199                     	;# 
   143     0199                     	;# 
   144     0199                     	;# 
   145     019A                     	;# 
   146     019A                     	;# 
   147     019A                     	;# 
   148     019B                     	;# 
   149     019B                     	;# 
   150     019B                     	;# 
   151     019B                     	;# 
   152     019B                     	;# 
   153     019C                     	;# 
   154     019C                     	;# 
   155     019C                     	;# 
   156     019D                     	;# 
   157     019D                     	;# 
   158     019D                     	;# 
   159     019E                     	;# 
   160     019E                     	;# 
   161     019E                     	;# 
   162     019F                     	;# 
   163     019F                     	;# 
   164     019F                     	;# 
   165     019F                     	;# 
   166     019F                     	;# 
   167     020C                     	;# 
   168     020D                     	;# 
   169     020E                     	;# 
   170     0210                     	;# 
   171     0211                     	;# 
   172     0211                     	;# 
   173     0212                     	;# 
   174     0212                     	;# 
   175     0213                     	;# 
   176     0213                     	;# 
   177     0214                     	;# 
   178     0214                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0216                     	;# 
   184     0216                     	;# 
   185     0217                     	;# 
   186     0217                     	;# 
   187     021B                     	;# 
   188     021C                     	;# 
   189     021D                     	;# 
   190     021E                     	;# 
   191     021F                     	;# 
   192     028C                     	;# 
   193     028D                     	;# 
   194     028E                     	;# 
   195     0291                     	;# 
   196     0291                     	;# 
   197     0292                     	;# 
   198     0293                     	;# 
   199     0294                     	;# 
   200     0295                     	;# 
   201     0295                     	;# 
   202     0296                     	;# 
   203     0297                     	;# 
   204     0298                     	;# 
   205     0299                     	;# 
   206     0299                     	;# 
   207     029A                     	;# 
   208     029B                     	;# 
   209     029C                     	;# 
   210     029E                     	;# 
   211     029F                     	;# 
   212     030C                     	;# 
   213     030D                     	;# 
   214     030E                     	;# 
   215     0315                     	;# 
   216     0316                     	;# 
   217     0317                     	;# 
   218     0318                     	;# 
   219     0319                     	;# 
   220     031B                     	;# 
   221     031C                     	;# 
   222     031D                     	;# 
   223     031E                     	;# 
   224     031F                     	;# 
   225     038C                     	;# 
   226     038D                     	;# 
   227     038E                     	;# 
   228     0390                     	;# 
   229     0391                     	;# 
   230     0392                     	;# 
   231     0393                     	;# 
   232     0394                     	;# 
   233     0395                     	;# 
   234     0396                     	;# 
   235     0397                     	;# 
   236     0398                     	;# 
   237     0399                     	;# 
   238     039D                     	;# 
   239     039E                     	;# 
   240     039F                     	;# 
   241     040D                     	;# 
   242     040F                     	;# 
   243     040F                     	;# 
   244     0410                     	;# 
   245     0411                     	;# 
   246     0412                     	;# 
   247     0413                     	;# 
   248     0413                     	;# 
   249     0414                     	;# 
   250     0414                     	;# 
   251     0415                     	;# 
   252     0416                     	;# 
   253     0417                     	;# 
   254     0418                     	;# 
   255     041A                     	;# 
   256     041A                     	;# 
   257     041B                     	;# 
   258     041B                     	;# 
   259     041C                     	;# 
   260     041D                     	;# 
   261     041E                     	;# 
   262     041F                     	;# 
   263     048E                     	;# 
   264     048E                     	;# 
   265     048F                     	;# 
   266     0490                     	;# 
   267     0491                     	;# 
   268     0492                     	;# 
   269     0493                     	;# 
   270     0493                     	;# 
   271     0494                     	;# 
   272     0494                     	;# 
   273     0495                     	;# 
   274     0496                     	;# 
   275     0497                     	;# 
   276     0498                     	;# 
   277     049A                     	;# 
   278     049A                     	;# 
   279     049B                     	;# 
   280     049B                     	;# 
   281     049C                     	;# 
   282     049D                     	;# 
   283     049E                     	;# 
   284     049F                     	;# 
   285     050F                     	;# 
   286     0510                     	;# 
   287     0511                     	;# 
   288     0512                     	;# 
   289     0513                     	;# 
   290     0514                     	;# 
   291     0515                     	;# 
   292     0516                     	;# 
   293     0517                     	;# 
   294     0518                     	;# 
   295     0519                     	;# 
   296     051A                     	;# 
   297     058D                     	;# 
   298     058E                     	;# 
   299     058F                     	;# 
   300     058F                     	;# 
   301     058F                     	;# 
   302     0590                     	;# 
   303     0590                     	;# 
   304     0591                     	;# 
   305     0592                     	;# 
   306     0592                     	;# 
   307     0592                     	;# 
   308     0593                     	;# 
   309     0593                     	;# 
   310     0594                     	;# 
   311     0595                     	;# 
   312     0595                     	;# 
   313     0596                     	;# 
   314     0597                     	;# 
   315     0597                     	;# 
   316     0598                     	;# 
   317     0599                     	;# 
   318     0599                     	;# 
   319     0599                     	;# 
   320     059A                     	;# 
   321     059A                     	;# 
   322     059E                     	;# 
   323     059F                     	;# 
   324     059F                     	;# 
   325     0614                     	;# 
   326     0614                     	;# 
   327     0615                     	;# 
   328     0616                     	;# 
   329     0617                     	;# 
   330     0617                     	;# 
   331     0618                     	;# 
   332     0619                     	;# 
   333     061A                     	;# 
   334     061A                     	;# 
   335     061B                     	;# 
   336     061C                     	;# 
   337     068D                     	;# 
   338     068E                     	;# 
   339     068F                     	;# 
   340     0690                     	;# 
   341     0691                     	;# 
   342     0692                     	;# 
   343     0693                     	;# 
   344     0694                     	;# 
   345     0695                     	;# 
   346     0696                     	;# 
   347     0697                     	;# 
   348     0698                     	;# 
   349     0699                     	;# 
   350     069A                     	;# 
   351     069B                     	;# 
   352     069C                     	;# 
   353     069D                     	;# 
   354     069E                     	;# 
   355     069F                     	;# 
   356     070D                     	;# 
   357     070E                     	;# 
   358     070F                     	;# 
   359     0710                     	;# 
   360     0711                     	;# 
   361     0712                     	;# 
   362     0713                     	;# 
   363     0714                     	;# 
   364     0715                     	;# 
   365     0716                     	;# 
   366     0717                     	;# 
   367     0718                     	;# 
   368     0719                     	;# 
   369     071A                     	;# 
   370     071B                     	;# 
   371     071C                     	;# 
   372     071D                     	;# 
   373     071E                     	;# 
   374     071F                     	;# 
   375     078E                     	;# 
   376     078F                     	;# 
   377     0790                     	;# 
   378     0791                     	;# 
   379     0792                     	;# 
   380     0793                     	;# 
   381     0794                     	;# 
   382     0795                     	;# 
   383     0796                     	;# 
   384     0797                     	;# 
   385     0798                     	;# 
   386     0799                     	;# 
   387     079A                     	;# 
   388     079B                     	;# 
   389     079C                     	;# 
   390     079D                     	;# 
   391     079E                     	;# 
   392     079F                     	;# 
   393     080D                     	;# 
   394     080E                     	;# 
   395     080F                     	;# 
   396     0810                     	;# 
   397     0811                     	;# 
   398     0812                     	;# 
   399     0813                     	;# 
   400     0814                     	;# 
   401     0815                     	;# 
   402     0816                     	;# 
   403     0817                     	;# 
   404     0818                     	;# 
   405     0819                     	;# 
   406     081A                     	;# 
   407     081B                     	;# 
   408     081C                     	;# 
   409     081D                     	;# 
   410     081E                     	;# 
   411     081F                     	;# 
   412     090C                     	;# 
   413     090D                     	;# 
   414     090E                     	;# 
   415     090F                     	;# 
   416     0910                     	;# 
   417     0911                     	;# 
   418     0912                     	;# 
   419     0913                     	;# 
   420     0914                     	;# 
   421     0915                     	;# 
   422     0916                     	;# 
   423     0917                     	;# 
   424     0D8E                     	;# 
   425     0D8F                     	;# 
   426     0D90                     	;# 
   427     0D91                     	;# 
   428     0D91                     	;# 
   429     0D92                     	;# 
   430     0D93                     	;# 
   431     0D93                     	;# 
   432     0D94                     	;# 
   433     0D95                     	;# 
   434     0D95                     	;# 
   435     0D96                     	;# 
   436     0D97                     	;# 
   437     0D97                     	;# 
   438     0D98                     	;# 
   439     0D99                     	;# 
   440     0D99                     	;# 
   441     0D9A                     	;# 
   442     0D9B                     	;# 
   443     0D9C                     	;# 
   444     0D9C                     	;# 
   445     0D9D                     	;# 
   446     0D9D                     	;# 
   447     0D9E                     	;# 
   448     0D9F                     	;# 
   449     0DA0                     	;# 
   450     0DA1                     	;# 
   451     0DA1                     	;# 
   452     0DA2                     	;# 
   453     0DA3                     	;# 
   454     0DA3                     	;# 
   455     0DA4                     	;# 
   456     0DA5                     	;# 
   457     0DA5                     	;# 
   458     0DA6                     	;# 
   459     0DA7                     	;# 
   460     0DA7                     	;# 
   461     0DA8                     	;# 
   462     0DA9                     	;# 
   463     0DA9                     	;# 
   464     0DAA                     	;# 
   465     0DAB                     	;# 
   466     0DAC                     	;# 
   467     0DAC                     	;# 
   468     0DAD                     	;# 
   469     0DAD                     	;# 
   470     0DAE                     	;# 
   471     0DAF                     	;# 
   472     0DB0                     	;# 
   473     0DB1                     	;# 
   474     0DB1                     	;# 
   475     0DB2                     	;# 
   476     0DB3                     	;# 
   477     0DB3                     	;# 
   478     0DB4                     	;# 
   479     0DB5                     	;# 
   480     0DB5                     	;# 
   481     0DB6                     	;# 
   482     0DB7                     	;# 
   483     0DB7                     	;# 
   484     0DB8                     	;# 
   485     0DB9                     	;# 
   486     0DB9                     	;# 
   487     0DBA                     	;# 
   488     0DBB                     	;# 
   489     0DBC                     	;# 
   490     0DBC                     	;# 
   491     0DBD                     	;# 
   492     0DBD                     	;# 
   493     0DBE                     	;# 
   494     0DBF                     	;# 
   495     0DC0                     	;# 
   496     0E0C                     	;# 
   497     0E0D                     	;# 
   498     0E0E                     	;# 
   499     0E0F                     	;# 
   500     0E10                     	;# 
   501     0E11                     	;# 
   502     0E12                     	;# 
   503     0E13                     	;# 
   504     0E14                     	;# 
   505     0E15                     	;# 
   506     0E15                     	;# 
   507     0E15                     	;# 
   508     0E16                     	;# 
   509     0E16                     	;# 
   510     0E16                     	;# 
   511     0E17                     	;# 
   512     0E17                     	;# 
   513     0E17                     	;# 
   514     0E18                     	;# 
   515     0E18                     	;# 
   516     0E18                     	;# 
   517     0E19                     	;# 
   518     0E1A                     	;# 
   519     0E1B                     	;# 
   520     0E1D                     	;# 
   521     0E1E                     	;# 
   522     0E1F                     	;# 
   523     0E21                     	;# 
   524     0E22                     	;# 
   525     0E23                     	;# 
   526     0E24                     	;# 
   527     0E25                     	;# 
   528     0E26                     	;# 
   529     0E27                     	;# 
   530     0E28                     	;# 
   531     0E29                     	;# 
   532     0E2D                     	;# 
   533     0E2E                     	;# 
   534     0E2F                     	;# 
   535     0E30                     	;# 
   536     0E31                     	;# 
   537     0E32                     	;# 
   538     0E35                     	;# 
   539     0E36                     	;# 
   540     0E37                     	;# 
   541     0E38                     	;# 
   542     0E39                     	;# 
   543     0E3A                     	;# 
   544     0E3B                     	;# 
   545     0E3C                     	;# 
   546     0E3D                     	;# 
   547     0E3E                     	;# 
   548     0E90                     	;# 
   549     0E91                     	;# 
   550     0E92                     	;# 
   551     0E93                     	;# 
   552     0E94                     	;# 
   553     0E95                     	;# 
   554     0E96                     	;# 
   555     0E97                     	;# 
   556     0E98                     	;# 
   557     0E99                     	;# 
   558     0E9A                     	;# 
   559     0E9B                     	;# 
   560     0E9C                     	;# 
   561     0E9D                     	;# 
   562     0E9E                     	;# 
   563     0E9F                     	;# 
   564     0EA0                     	;# 
   565     0EA1                     	;# 
   566     0EA2                     	;# 
   567     0EA3                     	;# 
   568     0EA4                     	;# 
   569     0EA5                     	;# 
   570     0EA6                     	;# 
   571     0EA7                     	;# 
   572     0F0F                     	;# 
   573     0F10                     	;# 
   574     0F11                     	;# 
   575     0F12                     	;# 
   576     0F13                     	;# 
   577     0F14                     	;# 
   578     0F15                     	;# 
   579     0F16                     	;# 
   580     0F17                     	;# 
   581     0F18                     	;# 
   582     0F19                     	;# 
   583     0F1A                     	;# 
   584     0F1B                     	;# 
   585     0F1C                     	;# 
   586     0F1D                     	;# 
   587     0F1E                     	;# 
   588     0F1F                     	;# 
   589     0F20                     	;# 
   590     0F21                     	;# 
   591     0F22                     	;# 
   592     0F23                     	;# 
   593     0F24                     	;# 
   594     0F25                     	;# 
   595     0F26                     	;# 
   596     0F27                     	;# 
   597     0F28                     	;# 
   598     0F29                     	;# 
   599     0F2A                     	;# 
   600     0F2B                     	;# 
   601     0F2C                     	;# 
   602     0F2D                     	;# 
   603     0F2E                     	;# 
   604     0F2F                     	;# 
   605     0F30                     	;# 
   606     0F31                     	;# 
   607     0F32                     	;# 
   608     0F33                     	;# 
   609     0F34                     	;# 
   610     0F35                     	;# 
   611     0F36                     	;# 
   612     0F37                     	;# 
   613     0FE4                     	;# 
   614     0FE5                     	;# 
   615     0FE6                     	;# 
   616     0FE7                     	;# 
   617     0FE8                     	;# 
   618     0FE9                     	;# 
   619     0FEA                     	;# 
   620     0FEB                     	;# 
   621     0FED                     	;# 
   622     0FEE                     	;# 
   623     0FEF                     	;# 
   624                           
   625                           	psect	idataBANK0
   626     0421                     __pidataBANK0:
   627                           
   628                           ;initializer for main@F12362
   629     0421  3450               	retlw	80
   630     0422  346C               	retlw	108
   631     0423  3465               	retlw	101
   632     0424  3461               	retlw	97
   633     0425  3473               	retlw	115
   634     0426  3465               	retlw	101
   635     0427  3420               	retlw	32
   636     0428  3465               	retlw	101
   637     0429  346E               	retlw	110
   638     042A  3474               	retlw	116
   639     042B  3465               	retlw	101
   640     042C  3472               	retlw	114
   641     042D  3420               	retlw	32
   642     042E  3461               	retlw	97
   643     042F  3420               	retlw	32
   644     0430  3473               	retlw	115
   645     0431  3474               	retlw	116
   646     0432  3472               	retlw	114
   647     0433  3469               	retlw	105
   648     0434  346E               	retlw	110
   649     0435  3467               	retlw	103
   650     0436  340D               	retlw	13
   651     0437  340A               	retlw	10
   652     0438  3400               	retlw	0
   653     000C                     _PORTAbits	set	12
   654     000B                     _INTCONbits	set	11
   655     0011                     _PIR1bits	set	17
   656     0091                     _PIE1bits	set	145
   657     0097                     _OPTION_REGbits	set	151
   658     008E                     _TRISC	set	142
   659     008D                     _TRISB	set	141
   660     008C                     _TRISA	set	140
   661     009B                     _OSCCON	set	155
   662     010C                     _LATAbits	set	268
   663     010E                     _LATCbits	set	270
   664     010D                     _LATBbits	set	269
   665     010E                     _LATC	set	270
   666     010D                     _LATB	set	269
   667     010C                     _LATA	set	268
   668     0199                     _RC1REG	set	409
   669     019D                     _RC1STAbits	set	413
   670     019A                     _TX1REG	set	410
   671     019C                     _SP1BRGH	set	412
   672     019B                     _SP1BRGL	set	411
   673     019F                     _BAUD1CON	set	415
   674     019D                     _RC1STA	set	413
   675     019E                     _TX1STA	set	414
   676     018E                     _ANSELC	set	398
   677     018D                     _ANSELB	set	397
   678     018C                     _ANSELA	set	396
   679     020E                     _WPUC	set	526
   680     020D                     _WPUB	set	525
   681     020C                     _WPUA	set	524
   682     0295                     _CCPR2L	set	661
   683     0296                     _CCPR2H	set	662
   684     0297                     _CCP2CON	set	663
   685     0291                     _CCPR1L	set	657
   686     0292                     _CCPR1H	set	658
   687     029E                     _CCPTMRS1bits	set	670
   688     0293                     _CCP1CON	set	659
   689     029F                     _CCPTMRS2bits	set	671
   690     048F                     _ADRESH	set	1167
   691     048E                     _ADRESL	set	1166
   692     0490                     _ADCON0bits	set	1168
   693     0491                     _ADCON1	set	1169
   694     0490                     _ADCON0	set	1168
   695     0494                     _T2PR	set	1172
   696     0495                     _T2CON	set	1173
   697     0497                     _T2CLKCONbits	set	1175
   698     061A                     _PWM9DCL	set	1562
   699     061B                     _PWM9DCH	set	1563
   700     061C                     _PWM9CON	set	1564
   701     0617                     _PWM4DCL	set	1559
   702     0618                     _PWM4DCH	set	1560
   703     0619                     _PWM4CON	set	1561
   704     0614                     _PWM3DCL	set	1556
   705     0615                     _PWM3DCH	set	1557
   706     0616                     _PWM3CON	set	1558
   707     0DAF                     _PWM6LDCONbits	set	3503
   708     0D9F                     _PWM5LDCONbits	set	3487
   709     0DA9                     _PWM6TMRL	set	3497
   710     0DAA                     _PWM6TMRH	set	3498
   711     0DA7                     _PWM6OFL	set	3495
   712     0DA8                     _PWM6OFH	set	3496
   713     0DA5                     _PWM6PRL	set	3493
   714     0DA6                     _PWM6PRH	set	3494
   715     0DA3                     _PWM6DCL	set	3491
   716     0DA4                     _PWM6DCH	set	3492
   717     0DA1                     _PWM6PHL	set	3489
   718     0DA2                     _PWM6PHH	set	3490
   719     0DB0                     _PWM6OFCON	set	3504
   720     0DAF                     _PWM6LDCON	set	3503
   721     0DAE                     _PWM6CLKCON	set	3502
   722     0DAB                     _PWM6CON	set	3499
   723     0D99                     _PWM5TMRL	set	3481
   724     0D9A                     _PWM5TMRH	set	3482
   725     0D97                     _PWM5OFL	set	3479
   726     0D98                     _PWM5OFH	set	3480
   727     0D95                     _PWM5PRL	set	3477
   728     0D96                     _PWM5PRH	set	3478
   729     0D93                     _PWM5DCL	set	3475
   730     0D94                     _PWM5DCH	set	3476
   731     0D91                     _PWM5PHL	set	3473
   732     0D92                     _PWM5PHH	set	3474
   733     0DA0                     _PWM5OFCON	set	3488
   734     0D9F                     _PWM5LDCON	set	3487
   735     0D9E                     _PWM5CLKCON	set	3486
   736     0D9B                     _PWM5CON	set	3483
   737     0E3D                     _RXPPS	set	3645
   738     0EA2                     _RC2PPS	set	3746
   739     0EA0                     _RC0PPS	set	3744
   740     0E97                     _RA7PPS	set	3735
   741     0E94                     _RA4PPS	set	3732
   742     0E9B                     _RB3PPS	set	3739
   743     0E9C                     _RB4PPS	set	3740
   744     0EA4                     _RC4PPS	set	3748
   745     0EA5                     _RC5PPS	set	3749
   746     0EA7                     _RC7PPS	set	3751
   747     0EA3                     _RC3PPS	set	3747
   748     0EA1                     _RC1PPS	set	3745
   749     0E96                     _RA6PPS	set	3734
   750     0E95                     _RA5PPS	set	3733
   751                           
   752                           	psect	cinit
   753     001F                     start_initialization:	
   754                           ; #config settings
   755                           
   756     001F                     __initialization:
   757                           
   758                           ; Initialize objects allocated to BANK0
   759     001F  3021               	movlw	low __pidataBANK0
   760     0020  0084               	movwf	4
   761     0021  3084               	movlw	(high __pidataBANK0)| (0+128)
   762     0022  0085               	movwf	5
   763     0023  303C               	movlw	low __pdataBANK0
   764     0024  0086               	movwf	6
   765     0025  3000               	movlw	high __pdataBANK0
   766     0026  0087               	movwf	7
   767     0027  3018               	movlw	24
   768     0028  3184  2451  3180   	fcall	init_ram
   769                           
   770                           ; Clear objects allocated to COMMON
   771     002B  01FC               	clrf	__pbssCOMMON& (0+127)
   772     002C                     end_of_initialization:	
   773                           ;End of C runtime variable initialization code
   774                           
   775     002C                     __end_of__initialization:
   776     002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   777     002D  0020               	movlb	0
   778     002E  3180  2830         	ljmp	_main	;jump to C main() function
   779                           
   780                           	psect	bssCOMMON
   781     007C                     __pbssCOMMON:
   782     007C                     _g_ReadData:
   783     007C                     	ds	1
   784                           
   785                           	psect	dataBANK0
   786     003C                     __pdataBANK0:
   787     003C                     main@F12362:
   788     003C                     	ds	24
   789                           
   790                           	psect	inittext
   791     0451                     init_ram:
   792     0451  00FE               	movwf	btemp
   793     0452                     initloop:
   794     0452  0012               	moviw fsr0++
   795     0453  001E               	movwi fsr1++
   796     0454  0BFE               	decfsz	btemp,f
   797     0455  2C52               	goto	initloop
   798     0456  3400               	retlw	0
   799                           
   800                           	psect	cstackCOMMON
   801     0070                     __pcstackCOMMON:
   802     0070                     ?_LEDON:
   803     0070                     ??_LEDON:	
   804                           ; 1 bytes @ 0x0
   805                           
   806     0070                     ?_LEDOFF:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0070                     ??_LEDOFF:	
   810                           ; 1 bytes @ 0x0
   811                           
   812     0070                     ?_main:	
   813                           ; 1 bytes @ 0x0
   814                           
   815     0070                     ?_ISR:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     ??_ISR:	
   819                           ; 1 bytes @ 0x0
   820                           
   821     0070                     ?_switchC_Read:	
   822                           ; 1 bytes @ 0x0
   823                           
   824     0070                     ?_PushSwitchRead:	
   825                           ; 2 bytes @ 0x0
   826                           
   827     0070                     ?___wmul:	
   828                           ; 2 bytes @ 0x0
   829                           
   830     0070                     ___wmul@multiplier:	
   831                           ; 2 bytes @ 0x0
   832                           
   833                           
   834                           ; 2 bytes @ 0x0
   835     0070                     	ds	2
   836     0072                     ??_switchC_Read:
   837     0072                     ??_PushSwitchRead:	
   838                           ; 1 bytes @ 0x2
   839                           
   840     0072                     ___wmul@multiplicand:	
   841                           ; 1 bytes @ 0x2
   842                           
   843                           
   844                           ; 2 bytes @ 0x2
   845     0072                     	ds	2
   846     0074                     ??___wmul:
   847     0074                     ___wmul@product:	
   848                           ; 1 bytes @ 0x4
   849                           
   850                           
   851                           ; 2 bytes @ 0x4
   852     0074                     	ds	2
   853     0076                     ?_motorB:
   854     0076                     ?_motorD:	
   855                           ; 1 bytes @ 0x6
   856                           
   857     0076                     ?_motorC:	
   858                           ; 1 bytes @ 0x6
   859                           
   860     0076                     ?_motorE:	
   861                           ; 1 bytes @ 0x6
   862                           
   863     0076                     ?_motorA:	
   864                           ; 1 bytes @ 0x6
   865                           
   866     0076                     motorA@duty:	
   867                           ; 1 bytes @ 0x6
   868                           
   869     0076                     motorB@duty:	
   870                           ; 2 bytes @ 0x6
   871                           
   872     0076                     motorC@duty:	
   873                           ; 2 bytes @ 0x6
   874                           
   875     0076                     motorD@duty:	
   876                           ; 2 bytes @ 0x6
   877                           
   878     0076                     motorE@duty:	
   879                           ; 2 bytes @ 0x6
   880                           
   881                           
   882                           ; 2 bytes @ 0x6
   883     0076                     	ds	2
   884     0078                     ??_motorB:
   885     0078                     ??_motorD:	
   886                           ; 1 bytes @ 0x8
   887                           
   888     0078                     ??_motorC:	
   889                           ; 1 bytes @ 0x8
   890                           
   891     0078                     ??_motorE:	
   892                           ; 1 bytes @ 0x8
   893                           
   894     0078                     ??_motorA:	
   895                           ; 1 bytes @ 0x8
   896                           
   897                           
   898                           ; 1 bytes @ 0x8
   899     0078                     	ds	2
   900     007A                     ??_main:
   901                           
   902                           ; 1 bytes @ 0xA
   903     007A                     	ds	2
   904                           
   905                           	psect	cstackBANK0
   906     0020                     __pcstackBANK0:
   907     0020                     main@str:
   908                           
   909                           ; 24 bytes @ 0x0
   910     0020                     	ds	24
   911     0038                     main@i_596:
   912                           
   913                           ; 2 bytes @ 0x18
   914     0038                     	ds	2
   915     003A                     main@i:
   916                           
   917                           ; 2 bytes @ 0x1A
   918     003A                     	ds	2
   919                           
   920                           	psect	maintext
   921     0030                     __pmaintext:	
   922 ;;
   923 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   924 ;;
   925 ;; *************** function _main *****************
   926 ;; Defined at:
   927 ;;		line 65 in file "main.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  i               2   24[BANK0 ] int 
   932 ;;  i               2   26[BANK0 ] int 
   933 ;;  str            24    0[BANK0 ] unsigned char [24]
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : B1F/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   944 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   946 ;;      Totals:         2      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   947 ;;Total ram usage:       30 bytes
   948 ;; Hardware stack levels required when called: 3
   949 ;; This function calls:
   950 ;;		_LEDOFF
   951 ;;		_LEDON
   952 ;;		_PushSwitchRead
   953 ;;		_motorA
   954 ;;		_motorB
   955 ;;		_motorC
   956 ;;		_motorD
   957 ;;		_motorE
   958 ;;		_switchC_Read
   959 ;; This function is called by:
   960 ;;		Startup code after reset
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964     0030                     _main:	
   965                           ;psect for function _main
   966                           
   967     0030                     l1586:	
   968                           ;incstack = 0
   969                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   970                           
   971                           
   972                           ;main.c: 67:     OSCCON = 0b11110000;
   973     0030  30F0               	movlw	240
   974     0031  0021               	movlb	1	; select bank1
   975     0032  009B               	movwf	27	;volatile
   976     0033                     l1588:
   977                           
   978                           ;main.c: 70:     ANSELA = 0x00;
   979     0033  0023               	movlb	3	; select bank3
   980     0034  018C               	clrf	12	;volatile
   981     0035                     l1590:
   982                           
   983                           ;main.c: 71:     ANSELB = 0b00000111;
   984     0035  3007               	movlw	7
   985     0036  008D               	movwf	13	;volatile
   986                           
   987                           ;main.c: 72:     ANSELC = 0x00;
   988     0037  018E               	clrf	14	;volatile
   989     0038                     l1592:
   990                           
   991                           ;main.c: 73:     TRISA = 0b00001111;
   992     0038  300F               	movlw	15
   993     0039  0021               	movlb	1	; select bank1
   994     003A  008C               	movwf	12	;volatile
   995     003B                     l1594:
   996                           
   997                           ;main.c: 74:     TRISB = 0b00100111;
   998     003B  3027               	movlw	39
   999     003C  008D               	movwf	13	;volatile
  1000                           
  1001                           ;main.c: 75:     TRISC = 0x00;
  1002     003D  018E               	clrf	14	;volatile
  1003                           
  1004                           ;main.c: 76:     LATA = 0x00;
  1005     003E  0022               	movlb	2	; select bank2
  1006     003F  018C               	clrf	12	;volatile
  1007                           
  1008                           ;main.c: 77:     LATB = 0x00;
  1009     0040  018D               	clrf	13	;volatile
  1010                           
  1011                           ;main.c: 78:     LATC = 0x00;
  1012     0041  018E               	clrf	14	;volatile
  1013     0042                     l1596:
  1014                           
  1015                           ;main.c: 81:     OPTION_REGbits.nWPUEN = 0;
  1016     0042  0021               	movlb	1	; select bank1
  1017     0043  1397               	bcf	23,7	;volatile
  1018     0044                     l1598:
  1019                           
  1020                           ;main.c: 82:     WPUA = 0b00001111;
  1021     0044  300F               	movlw	15
  1022     0045  0024               	movlb	4	; select bank4
  1023     0046  008C               	movwf	12	;volatile
  1024     0047                     l1600:
  1025                           
  1026                           ;main.c: 83:     WPUB = 0x00;
  1027     0047  018D               	clrf	13	;volatile
  1028     0048                     l1602:
  1029                           
  1030                           ;main.c: 84:     WPUC = 0x00;
  1031     0048  018E               	clrf	14	;volatile
  1032     0049                     l1604:
  1033                           
  1034                           ;main.c: 87:     T2CLKCONbits.CS = 0b0001;
  1035     0049  0029               	movlb	9	; select bank9
  1036     004A  0817               	movf	23,w	;volatile
  1037     004B  39F0               	andlw	-16
  1038     004C  3801               	iorlw	1
  1039     004D  0097               	movwf	23	;volatile
  1040     004E                     l1606:
  1041                           
  1042                           ;main.c: 88:     T2CON = 0b10000000;
  1043     004E  3080               	movlw	128
  1044     004F  0095               	movwf	21	;volatile
  1045     0050                     l1608:
  1046                           
  1047                           ;main.c: 89:     T2PR = 0xFF;
  1048     0050  30FF               	movlw	255
  1049     0051  0094               	movwf	20	;volatile
  1050     0052                     l1610:
  1051                           
  1052                           ;main.c: 92:     RA5PPS = 0b011001;
  1053     0052  3019               	movlw	25
  1054     0053  003D               	movlb	29	; select bank29
  1055     0054  0095               	movwf	21	;volatile
  1056     0055                     l1612:
  1057                           
  1058                           ;main.c: 93:     PWM3CON = 0b10000000;
  1059     0055  3080               	movlw	128
  1060     0056  002C               	movlb	12	; select bank12
  1061     0057  0096               	movwf	22	;volatile
  1062     0058                     l1614:
  1063                           
  1064                           ;main.c: 94:     CCPTMRS2bits.P3TSEL = 0b00;
  1065     0058  30FC               	movlw	-4
  1066     0059  0025               	movlb	5	; select bank5
  1067     005A  059F               	andwf	31,f	;volatile
  1068     005B                     l1616:
  1069                           
  1070                           ;main.c: 95:     PWM3DCH = 0x00;
  1071     005B  002C               	movlb	12	; select bank12
  1072     005C  0195               	clrf	21	;volatile
  1073     005D                     l1618:
  1074                           
  1075                           ;main.c: 96:     PWM3DCL = 0x00;
  1076     005D  0194               	clrf	20	;volatile
  1077     005E                     l1620:
  1078                           
  1079                           ;main.c: 99:     RA6PPS = 0b011010;
  1080     005E  301A               	movlw	26
  1081     005F  003D               	movlb	29	; select bank29
  1082     0060  0096               	movwf	22	;volatile
  1083     0061                     l1622:
  1084                           
  1085                           ;main.c: 100:     PWM4CON = 0b10000000;
  1086     0061  3080               	movlw	128
  1087     0062  002C               	movlb	12	; select bank12
  1088     0063  0099               	movwf	25	;volatile
  1089     0064                     l1624:
  1090                           
  1091                           ;main.c: 101:     CCPTMRS2bits.P4TSEL = 0b00;
  1092     0064  30F3               	movlw	-13
  1093     0065  0025               	movlb	5	; select bank5
  1094     0066  059F               	andwf	31,f	;volatile
  1095     0067                     l1626:
  1096                           
  1097                           ;main.c: 102:     PWM4DCH = 0x00;
  1098     0067  002C               	movlb	12	; select bank12
  1099     0068  0198               	clrf	24	;volatile
  1100     0069                     l1628:
  1101                           
  1102                           ;main.c: 103:     PWM4DCL = 0x00;
  1103     0069  0197               	clrf	23	;volatile
  1104     006A                     l1630:
  1105                           
  1106                           ;main.c: 106:     RC1PPS = 0b011011;
  1107     006A  301B               	movlw	27
  1108     006B  003D               	movlb	29	; select bank29
  1109     006C  00A1               	movwf	33	;volatile
  1110     006D                     l1632:
  1111                           
  1112                           ;main.c: 107:     PWM9CON = 0b10000000;
  1113     006D  3080               	movlw	128
  1114     006E  002C               	movlb	12	; select bank12
  1115     006F  009C               	movwf	28	;volatile
  1116     0070                     l1634:
  1117                           
  1118                           ;main.c: 108:     CCPTMRS2bits.P9TSEL = 0b00;
  1119     0070  30CF               	movlw	-49
  1120     0071  0025               	movlb	5	; select bank5
  1121     0072  059F               	andwf	31,f	;volatile
  1122     0073                     l1636:
  1123                           
  1124                           ;main.c: 109:     PWM9DCH = 0x00;
  1125     0073  002C               	movlb	12	; select bank12
  1126     0074  019B               	clrf	27	;volatile
  1127     0075                     l1638:
  1128                           
  1129                           ;main.c: 110:     PWM9DCL = 0x00;
  1130     0075  019A               	clrf	26	;volatile
  1131     0076                     l1640:
  1132                           
  1133                           ;main.c: 113:     RC3PPS = 0b010101;
  1134     0076  3015               	movlw	21
  1135     0077  003D               	movlb	29	; select bank29
  1136     0078  00A3               	movwf	35	;volatile
  1137     0079                     l1642:
  1138                           
  1139                           ;main.c: 114:     CCP1CON = 0b10011100;
  1140     0079  309C               	movlw	156
  1141     007A  0025               	movlb	5	; select bank5
  1142     007B  0093               	movwf	19	;volatile
  1143     007C                     l1644:
  1144                           
  1145                           ;main.c: 115:     CCPTMRS1bits.C1TSEL = 0b00;
  1146     007C  30FC               	movlw	-4
  1147     007D  059E               	andwf	30,f	;volatile
  1148     007E                     l1646:
  1149                           
  1150                           ;main.c: 116:     CCPR1H = 0x00;
  1151     007E  0192               	clrf	18	;volatile
  1152     007F                     l1648:
  1153                           
  1154                           ;main.c: 117:     CCPR1L = 0x00;
  1155     007F  0191               	clrf	17	;volatile
  1156     0080                     l1650:
  1157                           
  1158                           ;main.c: 120:     RC7PPS = 0b010110;
  1159     0080  3016               	movlw	22
  1160     0081  003D               	movlb	29	; select bank29
  1161     0082  00A7               	movwf	39	;volatile
  1162     0083                     l1652:
  1163                           
  1164                           ;main.c: 121:     CCP2CON = 0b10011100;
  1165     0083  309C               	movlw	156
  1166     0084  0025               	movlb	5	; select bank5
  1167     0085  0097               	movwf	23	;volatile
  1168     0086                     l1654:
  1169                           
  1170                           ;main.c: 122:     CCPTMRS1bits.C2TSEL = 0b00;
  1171     0086  30F3               	movlw	-13
  1172     0087  059E               	andwf	30,f	;volatile
  1173     0088                     l1656:
  1174                           
  1175                           ;main.c: 123:     CCPR2H = 0x00;
  1176     0088  0196               	clrf	22	;volatile
  1177     0089                     l1658:
  1178                           
  1179                           ;main.c: 124:     CCPR2L = 0x00;
  1180     0089  0195               	clrf	21	;volatile
  1181     008A                     l1660:
  1182                           
  1183                           ;main.c: 128:     RC5PPS = 0b011101;
  1184     008A  301D               	movlw	29
  1185     008B  003D               	movlb	29	; select bank29
  1186     008C  00A5               	movwf	37	;volatile
  1187     008D                     l1662:
  1188                           
  1189                           ;main.c: 129:     PWM5CON = 0b10000000;
  1190     008D  3080               	movlw	128
  1191     008E  003B               	movlb	27	; select bank27
  1192     008F  009B               	movwf	27	;volatile
  1193     0090                     l1664:
  1194                           
  1195                           ;main.c: 130:     PWM5CLKCON = 0b01000000;
  1196     0090  3040               	movlw	64
  1197     0091  009E               	movwf	30	;volatile
  1198                           
  1199                           ;main.c: 131:     PWM5LDCON = 0x00;
  1200     0092  019F               	clrf	31	;volatile
  1201                           
  1202                           ;main.c: 132:     PWM5OFCON = 0x00;
  1203     0093  01A0               	clrf	32	;volatile
  1204                           
  1205                           ;main.c: 133:     PWM5PHH = 0x00;
  1206     0094  0192               	clrf	18	;volatile
  1207                           
  1208                           ;main.c: 134:     PWM5PHL = 0x00;
  1209     0095  0191               	clrf	17	;volatile
  1210     0096                     l1666:
  1211                           
  1212                           ;main.c: 135:     PWM5DCH = (2899 >> 8) & 0x00FF;
  1213     0096  300B               	movlw	11
  1214     0097  0094               	movwf	20	;volatile
  1215     0098                     l1668:
  1216                           
  1217                           ;main.c: 136:     PWM5DCL = 2899 & 0x00FF;
  1218     0098  3053               	movlw	83
  1219     0099  0093               	movwf	19	;volatile
  1220     009A                     l1670:
  1221                           
  1222                           ;main.c: 137:     PWM5PRH = (39999 >> 8) & 0x00FF;
  1223     009A  309C               	movlw	156
  1224     009B  0096               	movwf	22	;volatile
  1225     009C                     l1672:
  1226                           
  1227                           ;main.c: 138:     PWM5PRL = 39999 & 0x00FF;
  1228     009C  303F               	movlw	63
  1229     009D  0095               	movwf	21	;volatile
  1230                           
  1231                           ;main.c: 139:     PWM5OFH = 0x00;
  1232     009E  0198               	clrf	24	;volatile
  1233                           
  1234                           ;main.c: 140:     PWM5OFL = 0x00;
  1235     009F  0197               	clrf	23	;volatile
  1236                           
  1237                           ;main.c: 141:     PWM5TMRH = 0x00;
  1238     00A0  019A               	clrf	26	;volatile
  1239                           
  1240                           ;main.c: 142:     PWM5TMRL = 0x00;
  1241     00A1  0199               	clrf	25	;volatile
  1242     00A2                     l1674:
  1243                           
  1244                           ;main.c: 145:     _delay((unsigned long)((500)*(32000000/4000.0)));
  1245     00A2  3015               	movlw	21
  1246     00A3  00FB               	movwf	??_main+1
  1247     00A4  304B               	movlw	75
  1248     00A5  00FA               	movwf	??_main
  1249     00A6  30BE               	movlw	190
  1250     00A7                     u687:
  1251     00A7  0B89               	decfsz	9,f
  1252     00A8  28A7               	goto	u687
  1253     00A9  0BFA               	decfsz	??_main,f
  1254     00AA  28A7               	goto	u687
  1255     00AB  0BFB               	decfsz	??_main+1,f
  1256     00AC  28A7               	goto	u687
  1257     00AD  3200               	nop2
  1258     00AE                     l1676:
  1259                           
  1260                           ;main.c: 146:     RC4PPS = 0b011110;
  1261     00AE  301E               	movlw	30
  1262     00AF  003D               	movlb	29	; select bank29
  1263     00B0  00A4               	movwf	36	;volatile
  1264     00B1                     l1678:
  1265                           
  1266                           ;main.c: 147:     PWM6CON = 0b10000000;
  1267     00B1  3080               	movlw	128
  1268     00B2  003B               	movlb	27	; select bank27
  1269     00B3  00AB               	movwf	43	;volatile
  1270     00B4                     l1680:
  1271                           
  1272                           ;main.c: 148:     PWM6CLKCON = 0b01000000;
  1273     00B4  3040               	movlw	64
  1274     00B5  00AE               	movwf	46	;volatile
  1275                           
  1276                           ;main.c: 149:     PWM6LDCON = 0x00;
  1277     00B6  01AF               	clrf	47	;volatile
  1278                           
  1279                           ;main.c: 150:     PWM6OFCON = 0x00;
  1280     00B7  01B0               	clrf	48	;volatile
  1281                           
  1282                           ;main.c: 151:     PWM6PHH = 0x00;
  1283     00B8  01A2               	clrf	34	;volatile
  1284                           
  1285                           ;main.c: 152:     PWM6PHL = 0x00;
  1286     00B9  01A1               	clrf	33	;volatile
  1287     00BA                     l1682:
  1288                           
  1289                           ;main.c: 153:     PWM6DCH = (2999 >> 8) & 0x00FF;
  1290     00BA  300B               	movlw	11
  1291     00BB  00A4               	movwf	36	;volatile
  1292     00BC                     l1684:
  1293                           
  1294                           ;main.c: 154:     PWM6DCL = 2999 & 0x00FF;
  1295     00BC  30B7               	movlw	183
  1296     00BD  00A3               	movwf	35	;volatile
  1297     00BE                     l1686:
  1298                           
  1299                           ;main.c: 155:     PWM6PRH = (39999 >> 8) & 0x00FF;
  1300     00BE  309C               	movlw	156
  1301     00BF  00A6               	movwf	38	;volatile
  1302     00C0                     l1688:
  1303                           
  1304                           ;main.c: 156:     PWM6PRL = 39999 & 0x00FF;
  1305     00C0  303F               	movlw	63
  1306     00C1  00A5               	movwf	37	;volatile
  1307                           
  1308                           ;main.c: 157:     PWM6OFH = 0x00;
  1309     00C2  01A8               	clrf	40	;volatile
  1310                           
  1311                           ;main.c: 158:     PWM6OFL = 0x00;
  1312     00C3  01A7               	clrf	39	;volatile
  1313                           
  1314                           ;main.c: 159:     PWM6TMRH = 0x00;
  1315     00C4  01AA               	clrf	42	;volatile
  1316                           
  1317                           ;main.c: 160:     PWM6TMRL = 0x00;
  1318     00C5  01A9               	clrf	41	;volatile
  1319     00C6                     l1690:
  1320                           
  1321                           ;main.c: 163:     RXPPS = 0b001101;
  1322     00C6  300D               	movlw	13
  1323     00C7  003C               	movlb	28	; select bank28
  1324     00C8  00BD               	movwf	61	;volatile
  1325     00C9                     l1692:
  1326                           
  1327                           ;main.c: 164:     RB4PPS = 0b100100;
  1328     00C9  3024               	movlw	36
  1329     00CA  003D               	movlb	29	; select bank29
  1330     00CB  009C               	movwf	28	;volatile
  1331     00CC                     l1694:
  1332                           
  1333                           ;main.c: 165:     TX1STA = 0b00100100;
  1334     00CC  3024               	movlw	36
  1335     00CD  0023               	movlb	3	; select bank3
  1336     00CE  009E               	movwf	30	;volatile
  1337     00CF                     l1696:
  1338                           
  1339                           ;main.c: 166:     RC1STA = 0b10010000;
  1340     00CF  3090               	movlw	144
  1341     00D0  009D               	movwf	29	;volatile
  1342     00D1                     l1698:
  1343                           
  1344                           ;main.c: 167:     BAUD1CON = 0b00001000;
  1345     00D1  3008               	movlw	8
  1346     00D2  009F               	movwf	31	;volatile
  1347     00D3                     l1700:
  1348                           
  1349                           ;main.c: 168:     SP1BRGL = 416 & 0x00FF;
  1350     00D3  30A0               	movlw	160
  1351     00D4  009B               	movwf	27	;volatile
  1352     00D5                     l1702:
  1353                           
  1354                           ;main.c: 169:     SP1BRGH = (416 >> 8) & 0x00FF;
  1355     00D5  3001               	movlw	1
  1356     00D6  009C               	movwf	28	;volatile
  1357     00D7                     l1704:
  1358                           
  1359                           ;main.c: 171:     PIR1bits.RCIF = 0;
  1360     00D7  0020               	movlb	0	; select bank0
  1361     00D8  1291               	bcf	17,5	;volatile
  1362     00D9                     l1706:
  1363                           
  1364                           ;main.c: 172:     PIE1bits.RCIE = 1;
  1365     00D9  0021               	movlb	1	; select bank1
  1366     00DA  1691               	bsf	17,5	;volatile
  1367     00DB                     l1708:
  1368                           
  1369                           ;main.c: 173:     INTCONbits.PEIE = 1;
  1370     00DB  170B               	bsf	11,6	;volatile
  1371     00DC                     l1710:
  1372                           
  1373                           ;main.c: 174:     INTCONbits.GIE = 1;
  1374     00DC  178B               	bsf	11,7	;volatile
  1375     00DD                     l1712:
  1376                           
  1377                           ;main.c: 177:     ADCON0 = 0b10101100;
  1378     00DD  30AC               	movlw	172
  1379     00DE  0029               	movlb	9	; select bank9
  1380     00DF  0090               	movwf	16	;volatile
  1381     00E0                     l1714:
  1382                           
  1383                           ;main.c: 178:     ADCON1 = 0b10100000;
  1384     00E0  30A0               	movlw	160
  1385     00E1  0091               	movwf	17	;volatile
  1386     00E2                     l1716:
  1387                           
  1388                           ;main.c: 181:     unsigned char str[] = "Please enter a string\r\n";
  1389     00E2  303C               	movlw	low main@F12362
  1390     00E3  0086               	movwf	6
  1391     00E4  3000               	movlw	high main@F12362
  1392     00E5  0087               	movwf	7
  1393     00E6  3020               	movlw	low main@str
  1394     00E7  0084               	movwf	4
  1395     00E8  3000               	movlw	high main@str
  1396     00E9  0085               	movwf	5
  1397     00EA  3018               	movlw	24
  1398     00EB  00FA               	movwf	??_main
  1399     00EC                     u630:
  1400     00EC  0016               	moviw fsr1++
  1401     00ED  001A               	movwi fsr0++
  1402     00EE  0BFA               	decfsz	??_main,f
  1403     00EF  28EC               	goto	u630
  1404     00F0                     l1718:
  1405                           
  1406                           ;main.c: 185:         for(int i = -600; i <= 600; i++){
  1407     00F0  30A8               	movlw	168
  1408     00F1  0020               	movlb	0	; select bank0
  1409     00F2  00BA               	movwf	main@i
  1410     00F3  30FD               	movlw	253
  1411     00F4  00BB               	movwf	main@i+1
  1412     00F5                     l1724:
  1413                           
  1414                           ;main.c: 187:             if(switchC_Read()){
  1415     00F5  3184  2446  3180   	fcall	_switchC_Read
  1416     00F8  0870               	movf	?_switchC_Read,w
  1417     00F9  0471               	iorwf	?_switchC_Read+1,w
  1418     00FA  1903               	btfsc	3,2
  1419     00FB  28FD               	goto	u641
  1420     00FC  28FE               	goto	u640
  1421     00FD                     u641:
  1422     00FD  291F               	goto	l1728
  1423     00FE                     u640:
  1424     00FE                     l1726:
  1425                           
  1426                           ;main.c: 189:                 motorB(i);
  1427     00FE  0020               	movlb	0	; select bank0
  1428     00FF  083B               	movf	main@i+1,w
  1429     0100  00F7               	movwf	motorB@duty+1
  1430     0101  083A               	movf	main@i,w
  1431     0102  00F6               	movwf	motorB@duty
  1432     0103  3183  231C  3180   	fcall	_motorB
  1433                           
  1434                           ;main.c: 190:                 motorD(i);
  1435     0106  0020               	movlb	0	; select bank0
  1436     0107  083B               	movf	main@i+1,w
  1437     0108  00F7               	movwf	motorD@duty+1
  1438     0109  083A               	movf	main@i,w
  1439     010A  00F6               	movwf	motorD@duty
  1440     010B  3182  2236  3180   	fcall	_motorD
  1441                           
  1442                           ;main.c: 191:                 motorC(i);
  1443     010E  0020               	movlb	0	; select bank0
  1444     010F  083B               	movf	main@i+1,w
  1445     0110  00F7               	movwf	motorC@duty+1
  1446     0111  083A               	movf	main@i,w
  1447     0112  00F6               	movwf	motorC@duty
  1448     0113  3182  22A9  3180   	fcall	_motorC
  1449                           
  1450                           ;main.c: 192:                 motorE(i);
  1451     0116  0020               	movlb	0	; select bank0
  1452     0117  083B               	movf	main@i+1,w
  1453     0118  00F7               	movwf	motorE@duty+1
  1454     0119  083A               	movf	main@i,w
  1455     011A  00F6               	movwf	motorE@duty
  1456     011B  3181  21C3  3180   	fcall	_motorE
  1457                           
  1458                           ;main.c: 193:             }
  1459     011E  293F               	goto	l1730
  1460     011F                     l1728:
  1461                           
  1462                           ;main.c: 195:                 motorA(0);
  1463     011F  3000               	movlw	0
  1464     0120  00F6               	movwf	motorA@duty
  1465     0121  00F7               	movwf	motorA@duty+1
  1466     0122  3183  238F  3180   	fcall	_motorA
  1467                           
  1468                           ;main.c: 196:                 motorB(0);
  1469     0125  3000               	movlw	0
  1470     0126  00F6               	movwf	motorB@duty
  1471     0127  00F7               	movwf	motorB@duty+1
  1472     0128  3183  231C  3180   	fcall	_motorB
  1473                           
  1474                           ;main.c: 197:                 motorD(0);
  1475     012B  3000               	movlw	0
  1476     012C  00F6               	movwf	motorD@duty
  1477     012D  00F7               	movwf	motorD@duty+1
  1478     012E  3182  2236  3180   	fcall	_motorD
  1479                           
  1480                           ;main.c: 198:                 motorC(0);
  1481     0131  3000               	movlw	0
  1482     0132  00F6               	movwf	motorC@duty
  1483     0133  00F7               	movwf	motorC@duty+1
  1484     0134  3182  22A9  3180   	fcall	_motorC
  1485                           
  1486                           ;main.c: 199:                 motorE(i);
  1487     0137  0020               	movlb	0	; select bank0
  1488     0138  083B               	movf	main@i+1,w
  1489     0139  00F7               	movwf	motorE@duty+1
  1490     013A  083A               	movf	main@i,w
  1491     013B  00F6               	movwf	motorE@duty
  1492     013C  3181  21C3  3180   	fcall	_motorE
  1493     013F                     l1730:
  1494                           
  1495                           ;main.c: 201:             LEDON();
  1496     013F  3184  2457  3180   	fcall	_LEDON
  1497                           
  1498                           ;main.c: 202:             _delay((unsigned long)((10)*(32000000/4000.0)));
  1499     0142  3068               	movlw	104
  1500     0143  00FA               	movwf	??_main
  1501     0144  30E4               	movlw	228
  1502     0145                     u697:
  1503     0145  0B89               	decfsz	9,f
  1504     0146  2945               	goto	u697
  1505     0147  0BFA               	decfsz	??_main,f
  1506     0148  2945               	goto	u697
  1507     0149  3200               	nop2
  1508                           
  1509                           ;main.c: 203:         }
  1510     014A  3001               	movlw	1
  1511     014B  0020               	movlb	0	; select bank0
  1512     014C  07BA               	addwf	main@i,f
  1513     014D  3000               	movlw	0
  1514     014E  3DBB               	addwfc	main@i+1,f
  1515     014F  083B               	movf	main@i+1,w
  1516     0150  3A80               	xorlw	128
  1517     0151  00FA               	movwf	??_main
  1518     0152  3082               	movlw	130
  1519     0153  027A               	subwf	??_main,w
  1520     0154  1D03               	skipz
  1521     0155  2958               	goto	u655
  1522     0156  3059               	movlw	89
  1523     0157  023A               	subwf	main@i,w
  1524     0158                     u655:
  1525     0158  1C03               	skipc
  1526     0159  295B               	goto	u651
  1527     015A  295C               	goto	u650
  1528     015B                     u651:
  1529     015B  28F5               	goto	l1724
  1530     015C                     u650:
  1531     015C                     l1732:
  1532                           
  1533                           ;main.c: 204:         for(int i = 600; i >= -600; i--){
  1534     015C  3058               	movlw	88
  1535     015D  0020               	movlb	0	; select bank0
  1536     015E  00B8               	movwf	main@i_596
  1537     015F  3002               	movlw	2
  1538     0160  00B9               	movwf	main@i_596+1
  1539     0161                     l1736:
  1540                           
  1541                           ;main.c: 206:             if(PushSwitchRead()){
  1542     0161  3184  2439  3180   	fcall	_PushSwitchRead
  1543     0164  0870               	movf	?_PushSwitchRead,w
  1544     0165  0471               	iorwf	?_PushSwitchRead+1,w
  1545     0166  1903               	btfsc	3,2
  1546     0167  2969               	goto	u661
  1547     0168  296A               	goto	u660
  1548     0169                     u661:
  1549     0169  2983               	goto	l1740
  1550     016A                     u660:
  1551     016A                     l1738:
  1552                           
  1553                           ;main.c: 208:                 motorB(i);
  1554     016A  0020               	movlb	0	; select bank0
  1555     016B  0839               	movf	main@i_596+1,w
  1556     016C  00F7               	movwf	motorB@duty+1
  1557     016D  0838               	movf	main@i_596,w
  1558     016E  00F6               	movwf	motorB@duty
  1559     016F  3183  231C  3180   	fcall	_motorB
  1560                           
  1561                           ;main.c: 209:                 motorD(i);
  1562     0172  0020               	movlb	0	; select bank0
  1563     0173  0839               	movf	main@i_596+1,w
  1564     0174  00F7               	movwf	motorD@duty+1
  1565     0175  0838               	movf	main@i_596,w
  1566     0176  00F6               	movwf	motorD@duty
  1567     0177  3182  2236  3180   	fcall	_motorD
  1568                           
  1569                           ;main.c: 211:                 motorE(i);
  1570     017A  0020               	movlb	0	; select bank0
  1571     017B  0839               	movf	main@i_596+1,w
  1572     017C  00F7               	movwf	motorE@duty+1
  1573     017D  0838               	movf	main@i_596,w
  1574     017E  00F6               	movwf	motorE@duty
  1575     017F  3181  21C3  3180   	fcall	_motorE
  1576                           
  1577                           ;main.c: 212:             }
  1578     0182  29A3               	goto	l1742
  1579     0183                     l1740:
  1580                           
  1581                           ;main.c: 214:                 motorA(0);
  1582     0183  3000               	movlw	0
  1583     0184  00F6               	movwf	motorA@duty
  1584     0185  00F7               	movwf	motorA@duty+1
  1585     0186  3183  238F  3180   	fcall	_motorA
  1586                           
  1587                           ;main.c: 215:                 motorB(0);
  1588     0189  3000               	movlw	0
  1589     018A  00F6               	movwf	motorB@duty
  1590     018B  00F7               	movwf	motorB@duty+1
  1591     018C  3183  231C  3180   	fcall	_motorB
  1592                           
  1593                           ;main.c: 216:                 motorD(0);
  1594     018F  3000               	movlw	0
  1595     0190  00F6               	movwf	motorD@duty
  1596     0191  00F7               	movwf	motorD@duty+1
  1597     0192  3182  2236  3180   	fcall	_motorD
  1598                           
  1599                           ;main.c: 217:                 motorC(0);
  1600     0195  3000               	movlw	0
  1601     0196  00F6               	movwf	motorC@duty
  1602     0197  00F7               	movwf	motorC@duty+1
  1603     0198  3182  22A9  3180   	fcall	_motorC
  1604                           
  1605                           ;main.c: 218:                 motorE(i);
  1606     019B  0020               	movlb	0	; select bank0
  1607     019C  0839               	movf	main@i_596+1,w
  1608     019D  00F7               	movwf	motorE@duty+1
  1609     019E  0838               	movf	main@i_596,w
  1610     019F  00F6               	movwf	motorE@duty
  1611     01A0  3181  21C3  3180   	fcall	_motorE
  1612     01A3                     l1742:
  1613                           
  1614                           ;main.c: 220:             LEDOFF();
  1615     01A3  3184  245A  3180   	fcall	_LEDOFF
  1616                           
  1617                           ;main.c: 221:             _delay((unsigned long)((10)*(32000000/4000.0)));
  1618     01A6  3068               	movlw	104
  1619     01A7  00FA               	movwf	??_main
  1620     01A8  30E4               	movlw	228
  1621     01A9                     u707:
  1622     01A9  0B89               	decfsz	9,f
  1623     01AA  29A9               	goto	u707
  1624     01AB  0BFA               	decfsz	??_main,f
  1625     01AC  29A9               	goto	u707
  1626     01AD  3200               	nop2
  1627                           
  1628                           ;main.c: 222:         }
  1629     01AE  30FF               	movlw	255
  1630     01AF  0020               	movlb	0	; select bank0
  1631     01B0  07B8               	addwf	main@i_596,f
  1632     01B1  30FF               	movlw	255
  1633     01B2  3DB9               	addwfc	main@i_596+1,f
  1634     01B3  0839               	movf	main@i_596+1,w
  1635     01B4  3A80               	xorlw	128
  1636     01B5  00FA               	movwf	??_main
  1637     01B6  307D               	movlw	125
  1638     01B7  027A               	subwf	??_main,w
  1639     01B8  1D03               	skipz
  1640     01B9  29BC               	goto	u675
  1641     01BA  30A8               	movlw	168
  1642     01BB  0238               	subwf	main@i_596,w
  1643     01BC                     u675:
  1644     01BC  1803               	skipnc
  1645     01BD  29BF               	goto	u671
  1646     01BE  29C0               	goto	u670
  1647     01BF                     u671:
  1648     01BF  2961               	goto	l1736
  1649     01C0                     u670:
  1650     01C0  28F0               	goto	l1718
  1651     01C1  3180  281D         	ljmp	start
  1652     01C3                     __end_of_main:
  1653                           
  1654                           	psect	text1
  1655     0446                     __ptext1:	
  1656 ;; *************** function _switchC_Read *****************
  1657 ;; Defined at:
  1658 ;;		line 418 in file "main.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  2    0[COMMON] unsigned int 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1675 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1676 ;;Total ram usage:        4 bytes
  1677 ;; Hardware stack levels used: 1
  1678 ;; Hardware stack levels required when called: 1
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686     0446                     _switchC_Read:	
  1687                           ;psect for function _switchC_Read
  1688                           
  1689     0446                     l1384:	
  1690                           ;incstack = 0
  1691                           ; Regs used in _switchC_Read: [wreg+status,2+status,0]
  1692                           
  1693                           
  1694                           ;main.c: 419:     return PORTAbits.RA2;
  1695     0446  0020               	movlb	0	; select bank0
  1696     0447  0C0C               	rrf	12,w	;volatile
  1697     0448  0C89               	rrf	9,f
  1698     0449  3901               	andlw	1
  1699     044A  00F2               	movwf	??_switchC_Read
  1700     044B  01F3               	clrf	??_switchC_Read+1
  1701     044C  0872               	movf	??_switchC_Read,w
  1702     044D  00F0               	movwf	?_switchC_Read
  1703     044E  0873               	movf	??_switchC_Read+1,w
  1704     044F  00F1               	movwf	?_switchC_Read+1
  1705     0450                     l323:
  1706     0450  0008               	return
  1707     0451                     __end_of_switchC_Read:
  1708                           
  1709                           	psect	text2
  1710     01C3                     __ptext2:	
  1711 ;; *************** function _motorE *****************
  1712 ;; Defined at:
  1713 ;;		line 375 in file "main.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  duty            2    6[COMMON] int 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1731 ;;Total ram usage:        4 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 2
  1734 ;; This function calls:
  1735 ;;		___wmul
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741     01C3                     _motorE:	
  1742                           ;psect for function _motorE
  1743                           
  1744     01C3                     l1502:	
  1745                           ;incstack = 0
  1746                           ; Regs used in _motorE: [wreg+status,2+status,0+pclath+cstack]
  1747                           
  1748                           
  1749                           ;main.c: 377:     duty > 600 ? (duty = 600) : duty;
  1750     01C3  0877               	movf	motorE@duty+1,w
  1751     01C4  3A80               	xorlw	128
  1752     01C5  00F8               	movwf	??_motorE
  1753     01C6  3082               	movlw	130
  1754     01C7  0278               	subwf	??_motorE,w
  1755     01C8  1D03               	skipz
  1756     01C9  29CC               	goto	u555
  1757     01CA  3059               	movlw	89
  1758     01CB  0276               	subwf	motorE@duty,w
  1759     01CC                     u555:
  1760     01CC  1C03               	skipc
  1761     01CD  29CF               	goto	u551
  1762     01CE  29D0               	goto	u550
  1763     01CF                     u551:
  1764     01CF  29D4               	goto	l1506
  1765     01D0                     u550:
  1766     01D0                     l1504:
  1767     01D0  3058               	movlw	88
  1768     01D1  00F6               	movwf	motorE@duty
  1769     01D2  3002               	movlw	2
  1770     01D3  00F7               	movwf	motorE@duty+1
  1771     01D4                     l1506:
  1772                           
  1773                           ;main.c: 378:     duty < -600 ? (duty = 600) : duty;
  1774     01D4  0877               	movf	motorE@duty+1,w
  1775     01D5  3A80               	xorlw	128
  1776     01D6  00F8               	movwf	??_motorE
  1777     01D7  307D               	movlw	125
  1778     01D8  0278               	subwf	??_motorE,w
  1779     01D9  1D03               	skipz
  1780     01DA  29DD               	goto	u565
  1781     01DB  30A8               	movlw	168
  1782     01DC  0276               	subwf	motorE@duty,w
  1783     01DD                     u565:
  1784     01DD  1803               	skipnc
  1785     01DE  29E0               	goto	u561
  1786     01DF  29E1               	goto	u560
  1787     01E0                     u561:
  1788     01E0  29E5               	goto	l1510
  1789     01E1                     u560:
  1790     01E1                     l1508:
  1791     01E1  3058               	movlw	88
  1792     01E2  00F6               	movwf	motorE@duty
  1793     01E3  3002               	movlw	2
  1794     01E4  00F7               	movwf	motorE@duty+1
  1795     01E5                     l1510:
  1796                           
  1797                           ;main.c: 380:     if(duty > 0){
  1798     01E5  0877               	movf	motorE@duty+1,w
  1799     01E6  3A80               	xorlw	128
  1800     01E7  00F8               	movwf	??_motorE
  1801     01E8  3080               	movlw	128
  1802     01E9  0278               	subwf	??_motorE,w
  1803     01EA  1D03               	skipz
  1804     01EB  29EE               	goto	u575
  1805     01EC  3001               	movlw	1
  1806     01ED  0276               	subwf	motorE@duty,w
  1807     01EE                     u575:
  1808     01EE  1C03               	skipc
  1809     01EF  29F1               	goto	u571
  1810     01F0  29F2               	goto	u570
  1811     01F1                     u571:
  1812     01F1  2A07               	goto	l307
  1813     01F2                     u570:
  1814     01F2                     l1512:
  1815                           
  1816                           ;main.c: 381:         CCPR1L = (duty << 8) & 0x00FF;
  1817     01F2  0025               	movlb	5	; select bank5
  1818     01F3  0191               	clrf	17	;volatile
  1819     01F4                     l1514:
  1820                           
  1821                           ;main.c: 382:         CCPR1H = (duty >> 2) & 0x00FF;
  1822     01F4  0877               	movf	motorE@duty+1,w
  1823     01F5  00F9               	movwf	??_motorE+1
  1824     01F6  0876               	movf	motorE@duty,w
  1825     01F7  00F8               	movwf	??_motorE
  1826     01F8  0D79               	rlf	??_motorE+1,w
  1827     01F9  0CF9               	rrf	??_motorE+1,f
  1828     01FA  0CF8               	rrf	??_motorE,f
  1829     01FB  0D79               	rlf	??_motorE+1,w
  1830     01FC  0CF9               	rrf	??_motorE+1,f
  1831     01FD  0CF8               	rrf	??_motorE,f
  1832     01FE  0878               	movf	??_motorE,w
  1833     01FF  0092               	movwf	18	;volatile
  1834     0200                     l1516:
  1835                           
  1836                           ;main.c: 383:         RC3PPS = 0b010101;
  1837     0200  3015               	movlw	21
  1838     0201  003D               	movlb	29	; select bank29
  1839     0202  00A3               	movwf	35	;volatile
  1840                           
  1841                           ;main.c: 384:         RC2PPS = 0x00;
  1842     0203  01A2               	clrf	34	;volatile
  1843     0204                     l1518:
  1844                           
  1845                           ;main.c: 385:         LATCbits.LATC2 = 0;
  1846     0204  0022               	movlb	2	; select bank2
  1847     0205  110E               	bcf	14,2	;volatile
  1848                           
  1849                           ;main.c: 386:     }
  1850     0206  2A35               	goto	l311
  1851     0207                     l307:	
  1852                           ;main.c: 387:     else if(duty < 0){
  1853                           
  1854     0207  1FF7               	btfss	motorE@duty+1,7
  1855     0208  2A0A               	goto	u581
  1856     0209  2A0B               	goto	u580
  1857     020A                     u581:
  1858     020A  2A2F               	goto	l1532
  1859     020B                     u580:
  1860     020B                     l1520:
  1861                           
  1862                           ;main.c: 388:         duty *= -1;
  1863     020B  30FF               	movlw	255
  1864     020C  00F0               	movwf	___wmul@multiplier
  1865     020D  30FF               	movlw	255
  1866     020E  00F1               	movwf	___wmul@multiplier+1
  1867     020F  0877               	movf	motorE@duty+1,w
  1868     0210  00F3               	movwf	___wmul@multiplicand+1
  1869     0211  0876               	movf	motorE@duty,w
  1870     0212  00F2               	movwf	___wmul@multiplicand
  1871     0213  3184  2402  3181   	fcall	___wmul
  1872     0216  0871               	movf	?___wmul+1,w
  1873     0217  00F7               	movwf	motorE@duty+1
  1874     0218  0870               	movf	?___wmul,w
  1875     0219  00F6               	movwf	motorE@duty
  1876     021A                     l1522:
  1877                           
  1878                           ;main.c: 389:         CCPR1L = (duty << 8) & 0x00FF;
  1879     021A  0025               	movlb	5	; select bank5
  1880     021B  0191               	clrf	17	;volatile
  1881     021C                     l1524:
  1882                           
  1883                           ;main.c: 390:         CCPR1H = (duty >> 2) & 0x00FF;
  1884     021C  0877               	movf	motorE@duty+1,w
  1885     021D  00F9               	movwf	??_motorE+1
  1886     021E  0876               	movf	motorE@duty,w
  1887     021F  00F8               	movwf	??_motorE
  1888     0220  0D79               	rlf	??_motorE+1,w
  1889     0221  0CF9               	rrf	??_motorE+1,f
  1890     0222  0CF8               	rrf	??_motorE,f
  1891     0223  0D79               	rlf	??_motorE+1,w
  1892     0224  0CF9               	rrf	??_motorE+1,f
  1893     0225  0CF8               	rrf	??_motorE,f
  1894     0226  0878               	movf	??_motorE,w
  1895     0227  0092               	movwf	18	;volatile
  1896     0228                     l1526:
  1897                           
  1898                           ;main.c: 391:         RC2PPS = 0b010101;
  1899     0228  3015               	movlw	21
  1900     0229  003D               	movlb	29	; select bank29
  1901     022A  00A2               	movwf	34	;volatile
  1902     022B                     l1528:
  1903                           
  1904                           ;main.c: 392:         RC3PPS = 0x00;
  1905     022B  01A3               	clrf	35	;volatile
  1906     022C                     l1530:
  1907                           
  1908                           ;main.c: 393:         LATCbits.LATC3 = 0;
  1909     022C  0022               	movlb	2	; select bank2
  1910     022D  118E               	bcf	14,3	;volatile
  1911                           
  1912                           ;main.c: 394:     }
  1913     022E  2A35               	goto	l311
  1914     022F                     l1532:
  1915                           
  1916                           ;main.c: 396:         RC2PPS = 0x00;
  1917     022F  003D               	movlb	29	; select bank29
  1918     0230  01A2               	clrf	34	;volatile
  1919                           
  1920                           ;main.c: 397:         RC3PPS = 0x00;
  1921     0231  01A3               	clrf	35	;volatile
  1922     0232                     l1534:
  1923                           
  1924                           ;main.c: 398:         LATCbits.LATC2 = 0;
  1925     0232  0022               	movlb	2	; select bank2
  1926     0233  110E               	bcf	14,2	;volatile
  1927     0234                     l1536:
  1928                           
  1929                           ;main.c: 399:         LATCbits.LATC3 = 0;
  1930     0234  118E               	bcf	14,3	;volatile
  1931     0235                     l311:
  1932     0235  0008               	return
  1933     0236                     __end_of_motorE:
  1934                           
  1935                           	psect	text3
  1936     0236                     __ptext3:	
  1937 ;; *************** function _motorD *****************
  1938 ;; Defined at:
  1939 ;;		line 344 in file "main.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  duty            2    6[COMMON] int 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1956 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:        4 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 2
  1960 ;; This function calls:
  1961 ;;		___wmul
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967     0236                     _motorD:	
  1968                           ;psect for function _motorD
  1969                           
  1970     0236                     l1426:	
  1971                           ;incstack = 0
  1972                           ; Regs used in _motorD: [wreg+status,2+status,0+pclath+cstack]
  1973                           
  1974                           
  1975                           ;main.c: 346:     duty > 600 ? (duty = 600) : duty;
  1976     0236  0877               	movf	motorD@duty+1,w
  1977     0237  3A80               	xorlw	128
  1978     0238  00F8               	movwf	??_motorD
  1979     0239  3082               	movlw	130
  1980     023A  0278               	subwf	??_motorD,w
  1981     023B  1D03               	skipz
  1982     023C  2A3F               	goto	u475
  1983     023D  3059               	movlw	89
  1984     023E  0276               	subwf	motorD@duty,w
  1985     023F                     u475:
  1986     023F  1C03               	skipc
  1987     0240  2A42               	goto	u471
  1988     0241  2A43               	goto	u470
  1989     0242                     u471:
  1990     0242  2A47               	goto	l1430
  1991     0243                     u470:
  1992     0243                     l1428:
  1993     0243  3058               	movlw	88
  1994     0244  00F6               	movwf	motorD@duty
  1995     0245  3002               	movlw	2
  1996     0246  00F7               	movwf	motorD@duty+1
  1997     0247                     l1430:
  1998                           
  1999                           ;main.c: 347:     duty < -600 ? (duty = 600) : duty;
  2000     0247  0877               	movf	motorD@duty+1,w
  2001     0248  3A80               	xorlw	128
  2002     0249  00F8               	movwf	??_motorD
  2003     024A  307D               	movlw	125
  2004     024B  0278               	subwf	??_motorD,w
  2005     024C  1D03               	skipz
  2006     024D  2A50               	goto	u485
  2007     024E  30A8               	movlw	168
  2008     024F  0276               	subwf	motorD@duty,w
  2009     0250                     u485:
  2010     0250  1803               	skipnc
  2011     0251  2A53               	goto	u481
  2012     0252  2A54               	goto	u480
  2013     0253                     u481:
  2014     0253  2A58               	goto	l1434
  2015     0254                     u480:
  2016     0254                     l1432:
  2017     0254  3058               	movlw	88
  2018     0255  00F6               	movwf	motorD@duty
  2019     0256  3002               	movlw	2
  2020     0257  00F7               	movwf	motorD@duty+1
  2021     0258                     l1434:
  2022                           
  2023                           ;main.c: 349:     if(duty > 0){
  2024     0258  0877               	movf	motorD@duty+1,w
  2025     0259  3A80               	xorlw	128
  2026     025A  00F8               	movwf	??_motorD
  2027     025B  3080               	movlw	128
  2028     025C  0278               	subwf	??_motorD,w
  2029     025D  1D03               	skipz
  2030     025E  2A61               	goto	u495
  2031     025F  3001               	movlw	1
  2032     0260  0276               	subwf	motorD@duty,w
  2033     0261                     u495:
  2034     0261  1C03               	skipc
  2035     0262  2A64               	goto	u491
  2036     0263  2A65               	goto	u490
  2037     0264                     u491:
  2038     0264  2A7A               	goto	l292
  2039     0265                     u490:
  2040     0265                     l1436:
  2041                           
  2042                           ;main.c: 350:         PWM9DCL = (duty << 8) & 0x00FF;
  2043     0265  002C               	movlb	12	; select bank12
  2044     0266  019A               	clrf	26	;volatile
  2045     0267                     l1438:
  2046                           
  2047                           ;main.c: 351:         PWM9DCH = (duty >> 2) & 0x00FF;
  2048     0267  0877               	movf	motorD@duty+1,w
  2049     0268  00F9               	movwf	??_motorD+1
  2050     0269  0876               	movf	motorD@duty,w
  2051     026A  00F8               	movwf	??_motorD
  2052     026B  0D79               	rlf	??_motorD+1,w
  2053     026C  0CF9               	rrf	??_motorD+1,f
  2054     026D  0CF8               	rrf	??_motorD,f
  2055     026E  0D79               	rlf	??_motorD+1,w
  2056     026F  0CF9               	rrf	??_motorD+1,f
  2057     0270  0CF8               	rrf	??_motorD,f
  2058     0271  0878               	movf	??_motorD,w
  2059     0272  009B               	movwf	27	;volatile
  2060     0273                     l1440:
  2061                           
  2062                           ;main.c: 352:         RC1PPS = 0b011011;
  2063     0273  301B               	movlw	27
  2064     0274  003D               	movlb	29	; select bank29
  2065     0275  00A1               	movwf	33	;volatile
  2066                           
  2067                           ;main.c: 353:         RC0PPS = 0x00;
  2068     0276  01A0               	clrf	32	;volatile
  2069     0277                     l1442:
  2070                           
  2071                           ;main.c: 354:         LATCbits.LATC0 = 0;
  2072     0277  0022               	movlb	2	; select bank2
  2073     0278  100E               	bcf	14,0	;volatile
  2074                           
  2075                           ;main.c: 355:     }
  2076     0279  2AA8               	goto	l296
  2077     027A                     l292:	
  2078                           ;main.c: 356:     else if(duty < 0){
  2079                           
  2080     027A  1FF7               	btfss	motorD@duty+1,7
  2081     027B  2A7D               	goto	u501
  2082     027C  2A7E               	goto	u500
  2083     027D                     u501:
  2084     027D  2AA2               	goto	l1456
  2085     027E                     u500:
  2086     027E                     l1444:
  2087                           
  2088                           ;main.c: 357:         duty *= -1;
  2089     027E  30FF               	movlw	255
  2090     027F  00F0               	movwf	___wmul@multiplier
  2091     0280  30FF               	movlw	255
  2092     0281  00F1               	movwf	___wmul@multiplier+1
  2093     0282  0877               	movf	motorD@duty+1,w
  2094     0283  00F3               	movwf	___wmul@multiplicand+1
  2095     0284  0876               	movf	motorD@duty,w
  2096     0285  00F2               	movwf	___wmul@multiplicand
  2097     0286  3184  2402  3182   	fcall	___wmul
  2098     0289  0871               	movf	?___wmul+1,w
  2099     028A  00F7               	movwf	motorD@duty+1
  2100     028B  0870               	movf	?___wmul,w
  2101     028C  00F6               	movwf	motorD@duty
  2102     028D                     l1446:
  2103                           
  2104                           ;main.c: 358:         PWM9DCL = (duty << 8) & 0x00FF;
  2105     028D  002C               	movlb	12	; select bank12
  2106     028E  019A               	clrf	26	;volatile
  2107     028F                     l1448:
  2108                           
  2109                           ;main.c: 359:         PWM9DCH = (duty >> 2) & 0x00FF;
  2110     028F  0877               	movf	motorD@duty+1,w
  2111     0290  00F9               	movwf	??_motorD+1
  2112     0291  0876               	movf	motorD@duty,w
  2113     0292  00F8               	movwf	??_motorD
  2114     0293  0D79               	rlf	??_motorD+1,w
  2115     0294  0CF9               	rrf	??_motorD+1,f
  2116     0295  0CF8               	rrf	??_motorD,f
  2117     0296  0D79               	rlf	??_motorD+1,w
  2118     0297  0CF9               	rrf	??_motorD+1,f
  2119     0298  0CF8               	rrf	??_motorD,f
  2120     0299  0878               	movf	??_motorD,w
  2121     029A  009B               	movwf	27	;volatile
  2122     029B                     l1450:
  2123                           
  2124                           ;main.c: 360:         RC0PPS = 0b011011;
  2125     029B  301B               	movlw	27
  2126     029C  003D               	movlb	29	; select bank29
  2127     029D  00A0               	movwf	32	;volatile
  2128     029E                     l1452:
  2129                           
  2130                           ;main.c: 361:         RC1PPS = 0x00;
  2131     029E  01A1               	clrf	33	;volatile
  2132     029F                     l1454:
  2133                           
  2134                           ;main.c: 362:         LATCbits.LATC1 = 0;
  2135     029F  0022               	movlb	2	; select bank2
  2136     02A0  108E               	bcf	14,1	;volatile
  2137                           
  2138                           ;main.c: 363:     }
  2139     02A1  2AA8               	goto	l296
  2140     02A2                     l1456:
  2141                           
  2142                           ;main.c: 365:         RC0PPS = 0x00;
  2143     02A2  003D               	movlb	29	; select bank29
  2144     02A3  01A0               	clrf	32	;volatile
  2145                           
  2146                           ;main.c: 366:         RC1PPS = 0x00;
  2147     02A4  01A1               	clrf	33	;volatile
  2148     02A5                     l1458:
  2149                           
  2150                           ;main.c: 367:         LATCbits.LATC0 = 0;
  2151     02A5  0022               	movlb	2	; select bank2
  2152     02A6  100E               	bcf	14,0	;volatile
  2153     02A7                     l1460:
  2154                           
  2155                           ;main.c: 368:         LATCbits.LATC1 = 0;
  2156     02A7  108E               	bcf	14,1	;volatile
  2157     02A8                     l296:
  2158     02A8  0008               	return
  2159     02A9                     __end_of_motorD:
  2160                           
  2161                           	psect	text4
  2162     02A9                     __ptext4:	
  2163 ;; *************** function _motorC *****************
  2164 ;; Defined at:
  2165 ;;		line 313 in file "main.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  duty            2    6[COMMON] int 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, pclath, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2182 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2183 ;;Total ram usage:        4 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 2
  2186 ;; This function calls:
  2187 ;;		___wmul
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193     02A9                     _motorC:	
  2194                           ;psect for function _motorC
  2195                           
  2196     02A9                     l1464:	
  2197                           ;incstack = 0
  2198                           ; Regs used in _motorC: [wreg+status,2+status,0+pclath+cstack]
  2199                           
  2200                           
  2201                           ;main.c: 315:     duty > 600 ? (duty = 600) : duty;
  2202     02A9  0877               	movf	motorC@duty+1,w
  2203     02AA  3A80               	xorlw	128
  2204     02AB  00F8               	movwf	??_motorC
  2205     02AC  3082               	movlw	130
  2206     02AD  0278               	subwf	??_motorC,w
  2207     02AE  1D03               	skipz
  2208     02AF  2AB2               	goto	u515
  2209     02B0  3059               	movlw	89
  2210     02B1  0276               	subwf	motorC@duty,w
  2211     02B2                     u515:
  2212     02B2  1C03               	skipc
  2213     02B3  2AB5               	goto	u511
  2214     02B4  2AB6               	goto	u510
  2215     02B5                     u511:
  2216     02B5  2ABA               	goto	l1468
  2217     02B6                     u510:
  2218     02B6                     l1466:
  2219     02B6  3058               	movlw	88
  2220     02B7  00F6               	movwf	motorC@duty
  2221     02B8  3002               	movlw	2
  2222     02B9  00F7               	movwf	motorC@duty+1
  2223     02BA                     l1468:
  2224                           
  2225                           ;main.c: 316:     duty < -600 ? (duty = 600) : duty;
  2226     02BA  0877               	movf	motorC@duty+1,w
  2227     02BB  3A80               	xorlw	128
  2228     02BC  00F8               	movwf	??_motorC
  2229     02BD  307D               	movlw	125
  2230     02BE  0278               	subwf	??_motorC,w
  2231     02BF  1D03               	skipz
  2232     02C0  2AC3               	goto	u525
  2233     02C1  30A8               	movlw	168
  2234     02C2  0276               	subwf	motorC@duty,w
  2235     02C3                     u525:
  2236     02C3  1803               	skipnc
  2237     02C4  2AC6               	goto	u521
  2238     02C5  2AC7               	goto	u520
  2239     02C6                     u521:
  2240     02C6  2ACB               	goto	l1472
  2241     02C7                     u520:
  2242     02C7                     l1470:
  2243     02C7  3058               	movlw	88
  2244     02C8  00F6               	movwf	motorC@duty
  2245     02C9  3002               	movlw	2
  2246     02CA  00F7               	movwf	motorC@duty+1
  2247     02CB                     l1472:
  2248                           
  2249                           ;main.c: 318:     if(duty > 0){
  2250     02CB  0877               	movf	motorC@duty+1,w
  2251     02CC  3A80               	xorlw	128
  2252     02CD  00F8               	movwf	??_motorC
  2253     02CE  3080               	movlw	128
  2254     02CF  0278               	subwf	??_motorC,w
  2255     02D0  1D03               	skipz
  2256     02D1  2AD4               	goto	u535
  2257     02D2  3001               	movlw	1
  2258     02D3  0276               	subwf	motorC@duty,w
  2259     02D4                     u535:
  2260     02D4  1C03               	skipc
  2261     02D5  2AD7               	goto	u531
  2262     02D6  2AD8               	goto	u530
  2263     02D7                     u531:
  2264     02D7  2AED               	goto	l277
  2265     02D8                     u530:
  2266     02D8                     l1474:
  2267                           
  2268                           ;main.c: 319:         PWM4DCL = (duty << 8) & 0x00FF;
  2269     02D8  002C               	movlb	12	; select bank12
  2270     02D9  0197               	clrf	23	;volatile
  2271     02DA                     l1476:
  2272                           
  2273                           ;main.c: 320:         PWM4DCH = (duty >> 2) & 0x00FF;
  2274     02DA  0877               	movf	motorC@duty+1,w
  2275     02DB  00F9               	movwf	??_motorC+1
  2276     02DC  0876               	movf	motorC@duty,w
  2277     02DD  00F8               	movwf	??_motorC
  2278     02DE  0D79               	rlf	??_motorC+1,w
  2279     02DF  0CF9               	rrf	??_motorC+1,f
  2280     02E0  0CF8               	rrf	??_motorC,f
  2281     02E1  0D79               	rlf	??_motorC+1,w
  2282     02E2  0CF9               	rrf	??_motorC+1,f
  2283     02E3  0CF8               	rrf	??_motorC,f
  2284     02E4  0878               	movf	??_motorC,w
  2285     02E5  0098               	movwf	24	;volatile
  2286     02E6                     l1478:
  2287                           
  2288                           ;main.c: 321:         RA6PPS = 0b011010;
  2289     02E6  301A               	movlw	26
  2290     02E7  003D               	movlb	29	; select bank29
  2291     02E8  0096               	movwf	22	;volatile
  2292                           
  2293                           ;main.c: 322:         RA7PPS = 0x00;
  2294     02E9  0197               	clrf	23	;volatile
  2295     02EA                     l1480:
  2296                           
  2297                           ;main.c: 323:         LATAbits.LATA7 = 0;
  2298     02EA  0022               	movlb	2	; select bank2
  2299     02EB  138C               	bcf	12,7	;volatile
  2300                           
  2301                           ;main.c: 324:     }
  2302     02EC  2B1B               	goto	l281
  2303     02ED                     l277:	
  2304                           ;main.c: 325:     else if(duty < 0){
  2305                           
  2306     02ED  1FF7               	btfss	motorC@duty+1,7
  2307     02EE  2AF0               	goto	u541
  2308     02EF  2AF1               	goto	u540
  2309     02F0                     u541:
  2310     02F0  2B15               	goto	l1494
  2311     02F1                     u540:
  2312     02F1                     l1482:
  2313                           
  2314                           ;main.c: 326:         duty *= -1;
  2315     02F1  30FF               	movlw	255
  2316     02F2  00F0               	movwf	___wmul@multiplier
  2317     02F3  30FF               	movlw	255
  2318     02F4  00F1               	movwf	___wmul@multiplier+1
  2319     02F5  0877               	movf	motorC@duty+1,w
  2320     02F6  00F3               	movwf	___wmul@multiplicand+1
  2321     02F7  0876               	movf	motorC@duty,w
  2322     02F8  00F2               	movwf	___wmul@multiplicand
  2323     02F9  3184  2402  3182   	fcall	___wmul
  2324     02FC  0871               	movf	?___wmul+1,w
  2325     02FD  00F7               	movwf	motorC@duty+1
  2326     02FE  0870               	movf	?___wmul,w
  2327     02FF  00F6               	movwf	motorC@duty
  2328     0300                     l1484:
  2329                           
  2330                           ;main.c: 327:         PWM4DCL = (duty << 8) & 0x00FF;
  2331     0300  002C               	movlb	12	; select bank12
  2332     0301  0197               	clrf	23	;volatile
  2333     0302                     l1486:
  2334                           
  2335                           ;main.c: 328:         PWM4DCH = (duty >> 2) & 0x00FF;
  2336     0302  0877               	movf	motorC@duty+1,w
  2337     0303  00F9               	movwf	??_motorC+1
  2338     0304  0876               	movf	motorC@duty,w
  2339     0305  00F8               	movwf	??_motorC
  2340     0306  0D79               	rlf	??_motorC+1,w
  2341     0307  0CF9               	rrf	??_motorC+1,f
  2342     0308  0CF8               	rrf	??_motorC,f
  2343     0309  0D79               	rlf	??_motorC+1,w
  2344     030A  0CF9               	rrf	??_motorC+1,f
  2345     030B  0CF8               	rrf	??_motorC,f
  2346     030C  0878               	movf	??_motorC,w
  2347     030D  0098               	movwf	24	;volatile
  2348     030E                     l1488:
  2349                           
  2350                           ;main.c: 329:         RA7PPS = 0b011010;
  2351     030E  301A               	movlw	26
  2352     030F  003D               	movlb	29	; select bank29
  2353     0310  0097               	movwf	23	;volatile
  2354     0311                     l1490:
  2355                           
  2356                           ;main.c: 330:         RA6PPS = 0x00;
  2357     0311  0196               	clrf	22	;volatile
  2358     0312                     l1492:
  2359                           
  2360                           ;main.c: 331:         LATAbits.LATA6 = 0;
  2361     0312  0022               	movlb	2	; select bank2
  2362     0313  130C               	bcf	12,6	;volatile
  2363                           
  2364                           ;main.c: 332:     }
  2365     0314  2B1B               	goto	l281
  2366     0315                     l1494:
  2367                           
  2368                           ;main.c: 334:         RA6PPS = 0x00;
  2369     0315  003D               	movlb	29	; select bank29
  2370     0316  0196               	clrf	22	;volatile
  2371                           
  2372                           ;main.c: 335:         RA7PPS = 0x00;
  2373     0317  0197               	clrf	23	;volatile
  2374     0318                     l1496:
  2375                           
  2376                           ;main.c: 336:         LATAbits.LATA6 = 0;
  2377     0318  0022               	movlb	2	; select bank2
  2378     0319  130C               	bcf	12,6	;volatile
  2379     031A                     l1498:
  2380                           
  2381                           ;main.c: 337:         LATAbits.LATA7 = 0;
  2382     031A  138C               	bcf	12,7	;volatile
  2383     031B                     l281:
  2384     031B  0008               	return
  2385     031C                     __end_of_motorC:
  2386                           
  2387                           	psect	text5
  2388     031C                     __ptext5:	
  2389 ;; *************** function _motorB *****************
  2390 ;; Defined at:
  2391 ;;		line 282 in file "main.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  duty            2    6[COMMON] int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2408 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2409 ;;Total ram usage:        4 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 2
  2412 ;; This function calls:
  2413 ;;		___wmul
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419     031C                     _motorB:	
  2420                           ;psect for function _motorB
  2421                           
  2422     031C                     l1388:	
  2423                           ;incstack = 0
  2424                           ; Regs used in _motorB: [wreg+status,2+status,0+pclath+cstack]
  2425                           
  2426                           
  2427                           ;main.c: 284:     duty > 600 ? (duty = 600) : duty;
  2428     031C  0877               	movf	motorB@duty+1,w
  2429     031D  3A80               	xorlw	128
  2430     031E  00F8               	movwf	??_motorB
  2431     031F  3082               	movlw	130
  2432     0320  0278               	subwf	??_motorB,w
  2433     0321  1D03               	skipz
  2434     0322  2B25               	goto	u435
  2435     0323  3059               	movlw	89
  2436     0324  0276               	subwf	motorB@duty,w
  2437     0325                     u435:
  2438     0325  1C03               	skipc
  2439     0326  2B28               	goto	u431
  2440     0327  2B29               	goto	u430
  2441     0328                     u431:
  2442     0328  2B2D               	goto	l1392
  2443     0329                     u430:
  2444     0329                     l1390:
  2445     0329  3058               	movlw	88
  2446     032A  00F6               	movwf	motorB@duty
  2447     032B  3002               	movlw	2
  2448     032C  00F7               	movwf	motorB@duty+1
  2449     032D                     l1392:
  2450                           
  2451                           ;main.c: 285:     duty < -600 ? (duty = 600) : duty;
  2452     032D  0877               	movf	motorB@duty+1,w
  2453     032E  3A80               	xorlw	128
  2454     032F  00F8               	movwf	??_motorB
  2455     0330  307D               	movlw	125
  2456     0331  0278               	subwf	??_motorB,w
  2457     0332  1D03               	skipz
  2458     0333  2B36               	goto	u445
  2459     0334  30A8               	movlw	168
  2460     0335  0276               	subwf	motorB@duty,w
  2461     0336                     u445:
  2462     0336  1803               	skipnc
  2463     0337  2B39               	goto	u441
  2464     0338  2B3A               	goto	u440
  2465     0339                     u441:
  2466     0339  2B3E               	goto	l1396
  2467     033A                     u440:
  2468     033A                     l1394:
  2469     033A  3058               	movlw	88
  2470     033B  00F6               	movwf	motorB@duty
  2471     033C  3002               	movlw	2
  2472     033D  00F7               	movwf	motorB@duty+1
  2473     033E                     l1396:
  2474                           
  2475                           ;main.c: 287:     if(duty > 0){
  2476     033E  0877               	movf	motorB@duty+1,w
  2477     033F  3A80               	xorlw	128
  2478     0340  00F8               	movwf	??_motorB
  2479     0341  3080               	movlw	128
  2480     0342  0278               	subwf	??_motorB,w
  2481     0343  1D03               	skipz
  2482     0344  2B47               	goto	u455
  2483     0345  3001               	movlw	1
  2484     0346  0276               	subwf	motorB@duty,w
  2485     0347                     u455:
  2486     0347  1C03               	skipc
  2487     0348  2B4A               	goto	u451
  2488     0349  2B4B               	goto	u450
  2489     034A                     u451:
  2490     034A  2B60               	goto	l262
  2491     034B                     u450:
  2492     034B                     l1398:
  2493                           
  2494                           ;main.c: 288:         PWM3DCL = (duty << 8) & 0x00FF;
  2495     034B  002C               	movlb	12	; select bank12
  2496     034C  0194               	clrf	20	;volatile
  2497     034D                     l1400:
  2498                           
  2499                           ;main.c: 289:         PWM3DCH = (duty >> 2) & 0x00FF;
  2500     034D  0877               	movf	motorB@duty+1,w
  2501     034E  00F9               	movwf	??_motorB+1
  2502     034F  0876               	movf	motorB@duty,w
  2503     0350  00F8               	movwf	??_motorB
  2504     0351  0D79               	rlf	??_motorB+1,w
  2505     0352  0CF9               	rrf	??_motorB+1,f
  2506     0353  0CF8               	rrf	??_motorB,f
  2507     0354  0D79               	rlf	??_motorB+1,w
  2508     0355  0CF9               	rrf	??_motorB+1,f
  2509     0356  0CF8               	rrf	??_motorB,f
  2510     0357  0878               	movf	??_motorB,w
  2511     0358  0095               	movwf	21	;volatile
  2512     0359                     l1402:
  2513                           
  2514                           ;main.c: 290:         RA5PPS = 0b011001;
  2515     0359  3019               	movlw	25
  2516     035A  003D               	movlb	29	; select bank29
  2517     035B  0095               	movwf	21	;volatile
  2518                           
  2519                           ;main.c: 291:         RA4PPS = 0x00;
  2520     035C  0194               	clrf	20	;volatile
  2521     035D                     l1404:
  2522                           
  2523                           ;main.c: 292:         LATAbits.LATA4 = 0;
  2524     035D  0022               	movlb	2	; select bank2
  2525     035E  120C               	bcf	12,4	;volatile
  2526                           
  2527                           ;main.c: 293:     }
  2528     035F  2B8E               	goto	l266
  2529     0360                     l262:	
  2530                           ;main.c: 294:     else if(duty < 0){
  2531                           
  2532     0360  1FF7               	btfss	motorB@duty+1,7
  2533     0361  2B63               	goto	u461
  2534     0362  2B64               	goto	u460
  2535     0363                     u461:
  2536     0363  2B88               	goto	l1418
  2537     0364                     u460:
  2538     0364                     l1406:
  2539                           
  2540                           ;main.c: 295:         duty *= -1;
  2541     0364  30FF               	movlw	255
  2542     0365  00F0               	movwf	___wmul@multiplier
  2543     0366  30FF               	movlw	255
  2544     0367  00F1               	movwf	___wmul@multiplier+1
  2545     0368  0877               	movf	motorB@duty+1,w
  2546     0369  00F3               	movwf	___wmul@multiplicand+1
  2547     036A  0876               	movf	motorB@duty,w
  2548     036B  00F2               	movwf	___wmul@multiplicand
  2549     036C  3184  2402  3183   	fcall	___wmul
  2550     036F  0871               	movf	?___wmul+1,w
  2551     0370  00F7               	movwf	motorB@duty+1
  2552     0371  0870               	movf	?___wmul,w
  2553     0372  00F6               	movwf	motorB@duty
  2554     0373                     l1408:
  2555                           
  2556                           ;main.c: 296:         PWM3DCL = (duty << 8) & 0x00FF;
  2557     0373  002C               	movlb	12	; select bank12
  2558     0374  0194               	clrf	20	;volatile
  2559     0375                     l1410:
  2560                           
  2561                           ;main.c: 297:         PWM3DCH = (duty >> 2) & 0x00FF;
  2562     0375  0877               	movf	motorB@duty+1,w
  2563     0376  00F9               	movwf	??_motorB+1
  2564     0377  0876               	movf	motorB@duty,w
  2565     0378  00F8               	movwf	??_motorB
  2566     0379  0D79               	rlf	??_motorB+1,w
  2567     037A  0CF9               	rrf	??_motorB+1,f
  2568     037B  0CF8               	rrf	??_motorB,f
  2569     037C  0D79               	rlf	??_motorB+1,w
  2570     037D  0CF9               	rrf	??_motorB+1,f
  2571     037E  0CF8               	rrf	??_motorB,f
  2572     037F  0878               	movf	??_motorB,w
  2573     0380  0095               	movwf	21	;volatile
  2574     0381                     l1412:
  2575                           
  2576                           ;main.c: 298:         RA4PPS = 0b011001;
  2577     0381  3019               	movlw	25
  2578     0382  003D               	movlb	29	; select bank29
  2579     0383  0094               	movwf	20	;volatile
  2580     0384                     l1414:
  2581                           
  2582                           ;main.c: 299:         RA5PPS = 0x00;
  2583     0384  0195               	clrf	21	;volatile
  2584     0385                     l1416:
  2585                           
  2586                           ;main.c: 300:         LATAbits.LATA5 = 0;
  2587     0385  0022               	movlb	2	; select bank2
  2588     0386  128C               	bcf	12,5	;volatile
  2589                           
  2590                           ;main.c: 301:     }
  2591     0387  2B8E               	goto	l266
  2592     0388                     l1418:
  2593                           
  2594                           ;main.c: 303:         RA4PPS = 0x00;
  2595     0388  003D               	movlb	29	; select bank29
  2596     0389  0194               	clrf	20	;volatile
  2597                           
  2598                           ;main.c: 304:         RA5PPS = 0x00;
  2599     038A  0195               	clrf	21	;volatile
  2600     038B                     l1420:
  2601                           
  2602                           ;main.c: 305:         LATAbits.LATA4 = 0;
  2603     038B  0022               	movlb	2	; select bank2
  2604     038C  120C               	bcf	12,4	;volatile
  2605     038D                     l1422:
  2606                           
  2607                           ;main.c: 306:         LATAbits.LATA5 = 0;
  2608     038D  128C               	bcf	12,5	;volatile
  2609     038E                     l266:
  2610     038E  0008               	return
  2611     038F                     __end_of_motorB:
  2612                           
  2613                           	psect	text6
  2614     038F                     __ptext6:	
  2615 ;; *************** function _motorA *****************
  2616 ;; Defined at:
  2617 ;;		line 251 in file "main.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  duty            2    6[COMMON] int 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        4 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 2
  2638 ;; This function calls:
  2639 ;;		___wmul
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645     038F                     _motorA:	
  2646                           ;psect for function _motorA
  2647                           
  2648     038F                     l1540:	
  2649                           ;incstack = 0
  2650                           ; Regs used in _motorA: [wreg+status,2+status,0+pclath+cstack]
  2651                           
  2652                           
  2653                           ;main.c: 253:     duty > 600 ? (duty = 600) : duty;
  2654     038F  0877               	movf	motorA@duty+1,w
  2655     0390  3A80               	xorlw	128
  2656     0391  00F8               	movwf	??_motorA
  2657     0392  3082               	movlw	130
  2658     0393  0278               	subwf	??_motorA,w
  2659     0394  1D03               	skipz
  2660     0395  2B98               	goto	u595
  2661     0396  3059               	movlw	89
  2662     0397  0276               	subwf	motorA@duty,w
  2663     0398                     u595:
  2664     0398  1C03               	skipc
  2665     0399  2B9B               	goto	u591
  2666     039A  2B9C               	goto	u590
  2667     039B                     u591:
  2668     039B  2BA0               	goto	l1544
  2669     039C                     u590:
  2670     039C                     l1542:
  2671     039C  3058               	movlw	88
  2672     039D  00F6               	movwf	motorA@duty
  2673     039E  3002               	movlw	2
  2674     039F  00F7               	movwf	motorA@duty+1
  2675     03A0                     l1544:
  2676                           
  2677                           ;main.c: 254:     duty < -600 ? (duty = 600) : duty;
  2678     03A0  0877               	movf	motorA@duty+1,w
  2679     03A1  3A80               	xorlw	128
  2680     03A2  00F8               	movwf	??_motorA
  2681     03A3  307D               	movlw	125
  2682     03A4  0278               	subwf	??_motorA,w
  2683     03A5  1D03               	skipz
  2684     03A6  2BA9               	goto	u605
  2685     03A7  30A8               	movlw	168
  2686     03A8  0276               	subwf	motorA@duty,w
  2687     03A9                     u605:
  2688     03A9  1803               	skipnc
  2689     03AA  2BAC               	goto	u601
  2690     03AB  2BAD               	goto	u600
  2691     03AC                     u601:
  2692     03AC  2BB1               	goto	l1548
  2693     03AD                     u600:
  2694     03AD                     l1546:
  2695     03AD  3058               	movlw	88
  2696     03AE  00F6               	movwf	motorA@duty
  2697     03AF  3002               	movlw	2
  2698     03B0  00F7               	movwf	motorA@duty+1
  2699     03B1                     l1548:
  2700                           
  2701                           ;main.c: 256:     if(duty > 0){
  2702     03B1  0877               	movf	motorA@duty+1,w
  2703     03B2  3A80               	xorlw	128
  2704     03B3  00F8               	movwf	??_motorA
  2705     03B4  3080               	movlw	128
  2706     03B5  0278               	subwf	??_motorA,w
  2707     03B6  1D03               	skipz
  2708     03B7  2BBA               	goto	u615
  2709     03B8  3001               	movlw	1
  2710     03B9  0276               	subwf	motorA@duty,w
  2711     03BA                     u615:
  2712     03BA  1C03               	skipc
  2713     03BB  2BBD               	goto	u611
  2714     03BC  2BBE               	goto	u610
  2715     03BD                     u611:
  2716     03BD  2BD3               	goto	l247
  2717     03BE                     u610:
  2718     03BE                     l1550:
  2719                           
  2720                           ;main.c: 257:         CCPR2L = (duty << 8) & 0x00FF;
  2721     03BE  0025               	movlb	5	; select bank5
  2722     03BF  0195               	clrf	21	;volatile
  2723     03C0                     l1552:
  2724                           
  2725                           ;main.c: 258:         CCPR2H = (duty >> 2) & 0x00FF;
  2726     03C0  0877               	movf	motorA@duty+1,w
  2727     03C1  00F9               	movwf	??_motorA+1
  2728     03C2  0876               	movf	motorA@duty,w
  2729     03C3  00F8               	movwf	??_motorA
  2730     03C4  0D79               	rlf	??_motorA+1,w
  2731     03C5  0CF9               	rrf	??_motorA+1,f
  2732     03C6  0CF8               	rrf	??_motorA,f
  2733     03C7  0D79               	rlf	??_motorA+1,w
  2734     03C8  0CF9               	rrf	??_motorA+1,f
  2735     03C9  0CF8               	rrf	??_motorA,f
  2736     03CA  0878               	movf	??_motorA,w
  2737     03CB  0096               	movwf	22	;volatile
  2738     03CC                     l1554:
  2739                           
  2740                           ;main.c: 259:         RC7PPS = 0b010110;
  2741     03CC  3016               	movlw	22
  2742     03CD  003D               	movlb	29	; select bank29
  2743     03CE  00A7               	movwf	39	;volatile
  2744                           
  2745                           ;main.c: 260:         RB3PPS = 0x00;
  2746     03CF  019B               	clrf	27	;volatile
  2747     03D0                     l1556:
  2748                           
  2749                           ;main.c: 261:         LATBbits.LATB3 = 0;
  2750     03D0  0022               	movlb	2	; select bank2
  2751     03D1  118D               	bcf	13,3	;volatile
  2752                           
  2753                           ;main.c: 262:     }
  2754     03D2  2C01               	goto	l251
  2755     03D3                     l247:	
  2756                           ;main.c: 263:     else if(duty < 0){
  2757                           
  2758     03D3  1FF7               	btfss	motorA@duty+1,7
  2759     03D4  2BD6               	goto	u621
  2760     03D5  2BD7               	goto	u620
  2761     03D6                     u621:
  2762     03D6  2BFB               	goto	l1570
  2763     03D7                     u620:
  2764     03D7                     l1558:
  2765                           
  2766                           ;main.c: 264:         duty *= -1;
  2767     03D7  30FF               	movlw	255
  2768     03D8  00F0               	movwf	___wmul@multiplier
  2769     03D9  30FF               	movlw	255
  2770     03DA  00F1               	movwf	___wmul@multiplier+1
  2771     03DB  0877               	movf	motorA@duty+1,w
  2772     03DC  00F3               	movwf	___wmul@multiplicand+1
  2773     03DD  0876               	movf	motorA@duty,w
  2774     03DE  00F2               	movwf	___wmul@multiplicand
  2775     03DF  3184  2402  3183   	fcall	___wmul
  2776     03E2  0871               	movf	?___wmul+1,w
  2777     03E3  00F7               	movwf	motorA@duty+1
  2778     03E4  0870               	movf	?___wmul,w
  2779     03E5  00F6               	movwf	motorA@duty
  2780     03E6                     l1560:
  2781                           
  2782                           ;main.c: 265:         CCPR2L = (duty << 8) & 0x00FF;
  2783     03E6  0025               	movlb	5	; select bank5
  2784     03E7  0195               	clrf	21	;volatile
  2785     03E8                     l1562:
  2786                           
  2787                           ;main.c: 266:         CCPR2H = (duty >> 2) & 0x00FF;
  2788     03E8  0877               	movf	motorA@duty+1,w
  2789     03E9  00F9               	movwf	??_motorA+1
  2790     03EA  0876               	movf	motorA@duty,w
  2791     03EB  00F8               	movwf	??_motorA
  2792     03EC  0D79               	rlf	??_motorA+1,w
  2793     03ED  0CF9               	rrf	??_motorA+1,f
  2794     03EE  0CF8               	rrf	??_motorA,f
  2795     03EF  0D79               	rlf	??_motorA+1,w
  2796     03F0  0CF9               	rrf	??_motorA+1,f
  2797     03F1  0CF8               	rrf	??_motorA,f
  2798     03F2  0878               	movf	??_motorA,w
  2799     03F3  0096               	movwf	22	;volatile
  2800     03F4                     l1564:
  2801                           
  2802                           ;main.c: 267:         RB3PPS = 0b010110;
  2803     03F4  3016               	movlw	22
  2804     03F5  003D               	movlb	29	; select bank29
  2805     03F6  009B               	movwf	27	;volatile
  2806     03F7                     l1566:
  2807                           
  2808                           ;main.c: 268:         RC7PPS = 0x00;
  2809     03F7  01A7               	clrf	39	;volatile
  2810     03F8                     l1568:
  2811                           
  2812                           ;main.c: 269:         LATCbits.LATC7 = 0;
  2813     03F8  0022               	movlb	2	; select bank2
  2814     03F9  138E               	bcf	14,7	;volatile
  2815                           
  2816                           ;main.c: 270:     }
  2817     03FA  2C01               	goto	l251
  2818     03FB                     l1570:
  2819                           
  2820                           ;main.c: 272:         RB3PPS = 0x00;
  2821     03FB  003D               	movlb	29	; select bank29
  2822     03FC  019B               	clrf	27	;volatile
  2823                           
  2824                           ;main.c: 273:         RC7PPS = 0x00;
  2825     03FD  01A7               	clrf	39	;volatile
  2826     03FE                     l1572:
  2827                           
  2828                           ;main.c: 274:         LATBbits.LATB3 = 0;
  2829     03FE  0022               	movlb	2	; select bank2
  2830     03FF  118D               	bcf	13,3	;volatile
  2831     0400                     l1574:
  2832                           
  2833                           ;main.c: 275:         LATCbits.LATC7 = 0;
  2834     0400  138E               	bcf	14,7	;volatile
  2835     0401                     l251:
  2836     0401  0008               	return
  2837     0402                     __end_of_motorA:
  2838                           
  2839                           	psect	text7
  2840     0402                     __ptext7:	
  2841 ;; *************** function ___wmul *****************
  2842 ;; Defined at:
  2843 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  multiplier      2    0[COMMON] unsigned int 
  2846 ;;  multiplicand    2    2[COMMON] unsigned int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  product         2    4[COMMON] unsigned int 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  2    0[COMMON] unsigned int 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2861 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2862 ;;Total ram usage:        6 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_motorA
  2869 ;;		_motorB
  2870 ;;		_motorC
  2871 ;;		_motorD
  2872 ;;		_motorE
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876     0402                     ___wmul:	
  2877                           ;psect for function ___wmul
  2878                           
  2879     0402                     l1370:	
  2880                           ;incstack = 0
  2881                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2882                           
  2883     0402  01F4               	clrf	___wmul@product
  2884     0403  01F5               	clrf	___wmul@product+1
  2885     0404                     l1372:
  2886     0404  1C70               	btfss	___wmul@multiplier,0
  2887     0405  2C07               	goto	u391
  2888     0406  2C08               	goto	u390
  2889     0407                     u391:
  2890     0407  2C0C               	goto	l454
  2891     0408                     u390:
  2892     0408                     l1374:
  2893     0408  0872               	movf	___wmul@multiplicand,w
  2894     0409  07F4               	addwf	___wmul@product,f
  2895     040A  0873               	movf	___wmul@multiplicand+1,w
  2896     040B  3DF5               	addwfc	___wmul@product+1,f
  2897     040C                     l454:
  2898     040C  3001               	movlw	1
  2899     040D                     u405:
  2900     040D  35F2               	lslf	___wmul@multiplicand,f
  2901     040E  0DF3               	rlf	___wmul@multiplicand+1,f
  2902     040F  0B89               	decfsz	9,f
  2903     0410  2C0D               	goto	u405
  2904     0411                     l1376:
  2905     0411  3001               	movlw	1
  2906     0412                     u415:
  2907     0412  36F1               	lsrf	___wmul@multiplier+1,f
  2908     0413  0CF0               	rrf	___wmul@multiplier,f
  2909     0414  0B89               	decfsz	9,f
  2910     0415  2C12               	goto	u415
  2911     0416                     l1378:
  2912     0416  0870               	movf	___wmul@multiplier,w
  2913     0417  0471               	iorwf	___wmul@multiplier+1,w
  2914     0418  1D03               	btfss	3,2
  2915     0419  2C1B               	goto	u421
  2916     041A  2C1C               	goto	u420
  2917     041B                     u421:
  2918     041B  2C04               	goto	l1372
  2919     041C                     u420:
  2920     041C                     l1380:
  2921     041C  0875               	movf	___wmul@product+1,w
  2922     041D  00F1               	movwf	?___wmul+1
  2923     041E  0874               	movf	___wmul@product,w
  2924     041F  00F0               	movwf	?___wmul
  2925     0420                     l456:
  2926     0420  0008               	return
  2927     0421                     __end_of___wmul:
  2928                           
  2929                           	psect	text8
  2930     0439                     __ptext8:	
  2931 ;; *************** function _PushSwitchRead *****************
  2932 ;; Defined at:
  2933 ;;		line 406 in file "main.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  2    0[COMMON] unsigned int 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2949 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2950 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2951 ;;Total ram usage:        5 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 1
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961     0439                     _PushSwitchRead:	
  2962                           ;psect for function _PushSwitchRead
  2963                           
  2964     0439                     l1580:	
  2965                           ;incstack = 0
  2966                           ; Regs used in _PushSwitchRead: [wreg+status,2+status,0]
  2967                           
  2968                           
  2969                           ;main.c: 407:     return PORTAbits.RA3;
  2970     0439  0020               	movlb	0	; select bank0
  2971     043A  0C0C               	rrf	12,w	;volatile
  2972     043B  00F2               	movwf	??_PushSwitchRead
  2973     043C  0CF2               	rrf	??_PushSwitchRead,f
  2974     043D  0C72               	rrf	??_PushSwitchRead,w
  2975     043E  3901               	andlw	1
  2976     043F  00F3               	movwf	??_PushSwitchRead+1
  2977     0440  01F4               	clrf	??_PushSwitchRead+2
  2978     0441  0873               	movf	??_PushSwitchRead+1,w
  2979     0442  00F0               	movwf	?_PushSwitchRead
  2980     0443  0874               	movf	??_PushSwitchRead+2,w
  2981     0444  00F1               	movwf	?_PushSwitchRead+1
  2982     0445                     l314:
  2983     0445  0008               	return
  2984     0446                     __end_of_PushSwitchRead:
  2985                           
  2986                           	psect	text9
  2987     0457                     __ptext9:	
  2988 ;; *************** function _LEDON *****************
  2989 ;; Defined at:
  2990 ;;		line 501 in file "main.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		None
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; Hardware stack levels required when called: 1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018     0457                     _LEDON:	
  3019                           ;psect for function _LEDON
  3020                           
  3021     0457                     l1578:	
  3022                           ;incstack = 0
  3023                           ; Regs used in _LEDON: []
  3024                           
  3025                           
  3026                           ;main.c: 502:     LATCbits.LATC6 = 1;
  3027     0457  0022               	movlb	2	; select bank2
  3028     0458  170E               	bsf	14,6	;volatile
  3029     0459                     l372:	
  3030                           ;main.c: 503:     return;
  3031                           
  3032     0459  0008               	return
  3033     045A                     __end_of_LEDON:
  3034                           
  3035                           	psect	text10
  3036     045A                     __ptext10:	
  3037 ;; *************** function _LEDOFF *****************
  3038 ;; Defined at:
  3039 ;;		line 506 in file "main.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		None
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 1
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067     045A                     _LEDOFF:	
  3068                           ;psect for function _LEDOFF
  3069                           
  3070     045A                     l1584:	
  3071                           ;incstack = 0
  3072                           ; Regs used in _LEDOFF: []
  3073                           
  3074                           
  3075                           ;main.c: 507:     LATCbits.LATC6 = 0;
  3076     045A  0022               	movlb	2	; select bank2
  3077     045B  130E               	bcf	14,6	;volatile
  3078     045C                     l375:	
  3079                           ;main.c: 508:     return;
  3080                           
  3081     045C  0008               	return
  3082     045D                     __end_of_LEDOFF:
  3083                           
  3084                           	psect	intentry
  3085     0004                     __pintentry:	
  3086 ;; *************** function _ISR *****************
  3087 ;; Defined at:
  3088 ;;		line 511 in file "main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		Interrupt level 1
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115     0004                     _ISR:
  3116                           
  3117                           ;incstack = 0
  3118     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3119                           
  3120                           ; Regs used in _ISR: [wreg+status,2]
  3121     0005  3180               	pagesel	$
  3122     0006                     i1l1358:
  3123                           
  3124                           ;main.c: 512:     if(PIR1bits.RCIF){
  3125     0006  0020               	movlb	0	; select bank0
  3126     0007  1E91               	btfss	17,5	;volatile
  3127     0008  280A               	goto	u36_21
  3128     0009  280B               	goto	u36_20
  3129     000A                     u36_21:
  3130     000A  281B               	goto	i1l386
  3131     000B                     u36_20:
  3132     000B                     i1l1360:
  3133                           
  3134                           ;main.c: 513:         PIR1bits.RCIF = 0;
  3135     000B  1291               	bcf	17,5	;volatile
  3136                           
  3137                           ;main.c: 514:         if(RC1STAbits.FERR || RC1STAbits.OERR){
  3138     000C  0023               	movlb	3	; select bank3
  3139     000D  191D               	btfsc	29,2	;volatile
  3140     000E  2810               	goto	u37_21
  3141     000F  2811               	goto	u37_20
  3142     0010                     u37_21:
  3143     0010  2815               	goto	i1l1364
  3144     0011                     u37_20:
  3145     0011                     i1l1362:
  3146     0011  1C9D               	btfss	29,1	;volatile
  3147     0012  2814               	goto	u38_21
  3148     0013  2815               	goto	u38_20
  3149     0014                     u38_21:
  3150     0014  2819               	goto	i1l1368
  3151     0015                     u38_20:
  3152     0015                     i1l1364:
  3153                           
  3154                           ;main.c: 515:             RC1STA = 0x00;
  3155     0015  019D               	clrf	29	;volatile
  3156     0016                     i1l1366:
  3157                           
  3158                           ;main.c: 516:             RC1STA = 0x90;
  3159     0016  3090               	movlw	144
  3160     0017  009D               	movwf	29	;volatile
  3161                           
  3162                           ;main.c: 517:         }
  3163     0018  281B               	goto	i1l386
  3164     0019                     i1l1368:
  3165                           
  3166                           ;main.c: 519:             g_ReadData = RC1REG;
  3167     0019  0819               	movf	25,w	;volatile
  3168     001A  00FC               	movwf	_g_ReadData
  3169     001B                     i1l386:
  3170     001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3171     001C  0009               	retfie
  3172     001D                     __end_of_ISR:
  3173     007E                     btemp	set	126	;btemp
  3174     007E                     int$flags	set	126
  3175     007E                     wtemp0	set	126
  3176                           
  3177                           	psect	idloc
  3178                           
  3179                           ;Config register IDLOC0 @ 0x8000
  3180                           ;	unspecified, using default values
  3181     8000                     	org	32768
  3182     8000  3FFF               	dw	16383
  3183                           
  3184                           ;Config register IDLOC1 @ 0x8001
  3185                           ;	unspecified, using default values
  3186     8001                     	org	32769
  3187     8001  3FFF               	dw	16383
  3188                           
  3189                           ;Config register IDLOC2 @ 0x8002
  3190                           ;	unspecified, using default values
  3191     8002                     	org	32770
  3192     8002  3FFF               	dw	16383
  3193                           
  3194                           ;Config register IDLOC3 @ 0x8003
  3195                           ;	unspecified, using default values
  3196     8003                     	org	32771
  3197     8003  3FFF               	dw	16383
  3198                           
  3199                           	psect	config
  3200                           
  3201                           ;Config register CONFIG1 @ 0x8007
  3202                           ;	Oscillator Selection Bits
  3203                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3204                           ;	Watchdog Timer Enable
  3205                           ;	WDTE = OFF, WDT disabled
  3206                           ;	Power-up Timer Enable
  3207                           ;	PWRTE = ON, PWRT enabled
  3208                           ;	MCLR Pin Function Select
  3209                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3210                           ;	Flash Program Memory Code Protection
  3211                           ;	CP = OFF, Program memory code protection is disabled
  3212                           ;	Brown-out Reset Enable
  3213                           ;	BOREN = ON, Brown-out Reset enabled
  3214                           ;	Clock Out Enable
  3215                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3216                           ;	Internal/External Switchover Mode
  3217                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  3218                           ;	Fail-Safe Clock Monitor Enable
  3219                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3220     8007                     	org	32775
  3221     8007  0FC4               	dw	4036
  3222                           
  3223                           ;Config register CONFIG2 @ 0x8008
  3224                           ;	Flash Memory Self-Write Protection
  3225                           ;	WRT = OFF, Write protection off
  3226                           ;	Peripheral Pin Select one-way control
  3227                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  3228                           ;	Zero-cross detect disable
  3229                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  3230                           ;	Phase Lock Loop enable
  3231                           ;	PLLEN = ON, 4x PLL is always enabled
  3232                           ;	Stack Overflow/Underflow Reset Enable
  3233                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3234                           ;	Brown-out Reset Voltage Selection
  3235                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  3236                           ;	Low-Power Brown Out Reset
  3237                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3238                           ;	Low-Voltage Programming Enable
  3239                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3240     8008                     	org	32776
  3241     8008  1BFF               	dw	7167

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     28      52
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motorA
    _main->_motorB
    _main->_motorC
    _main->_motorD
    _main->_motorE
    _motorE->___wmul
    _motorD->___wmul
    _motorC->___wmul
    _motorB->___wmul
    _motorA->___wmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    6628
                                             10 COMMON     2     2      0
                                              0 BANK0     28    28      0
                             _LEDOFF
                              _LEDON
                     _PushSwitchRead
                             _motorA
                             _motorB
                             _motorC
                             _motorD
                             _motorE
                       _switchC_Read
 ---------------------------------------------------------------------------------
 (1) _switchC_Read                                         4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _motorE                                               4     2      2    1313
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorD                                               4     2      2    1313
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorC                                               4     2      2    1237
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorB                                               4     2      2    1313
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorA                                               4     2      2    1161
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     852
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _PushSwitchRead                                       5     3      2       0
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LEDON                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDOFF                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDOFF
   _LEDON
   _PushSwitchRead
   _motorA
     ___wmul
   _motorB
     ___wmul
   _motorC
     ___wmul
   _motorD
     ___wmul
   _motorE
     ___wmul
   _switchC_Read

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      C       D       3       92.9%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     1C      34       5       65.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      41      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      41      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 17 12:55:06 2023

    ___wmul@multiplicand 0072                      l311 0235                      l314 0445  
                    l251 0401                      l307 0207                      l323 0450  
                    l262 0360                      l247 03D3                      l281 031B  
                    l266 038E                      l372 0459                      l292 027A  
                    l277 02ED                      l454 040C                      l375 045C  
                    l456 0420                      l296 02A8                      u420 041C  
                    u500 027E                      u421 041B                      u405 040D  
                    u501 027D                      u430 0329                      u510 02B6  
                    u415 0412                      u431 0328                      u511 02B5  
                    u600 03AD                      u440 033A                      u520 02C7  
                    u601 03AC                      u441 0339                      u521 02C6  
                    u610 03BE                      u450 034B                      u530 02D8  
                    u611 03BD                      u451 034A                      u435 0325  
                    u531 02D7                      u515 02B2                      u620 03D7  
                    u460 0364                      u540 02F1                      _ISR 0004  
                    u621 03D6                      u605 03A9                      u461 0363  
                    u445 0336                      u541 02F0                      u525 02C3  
                    u390 0408                      u470 0243                      u550 01D0  
                    u630 00EC                      u391 0407                      u615 03BA  
                    u455 0347                      u535 02D4                      u471 0242  
                    u551 01CF                      u480 0254                      u560 01E1  
                    u640 00FE                      u481 0253                      u561 01E0  
                    u641 00FD                      u490 0265                      u570 01F2  
                    u650 015C                      u491 0264                      u475 023F  
                    u571 01F1                      u555 01CC                      u707 01A9  
                    u651 015B                      u580 020B                      u660 016A  
                    u485 0250                      u581 020A                      u565 01DD  
                    u661 0169                      u590 039C                      u670 01C0  
                    u591 039B                      u495 0261                      u575 01EE  
                    u671 01BF                      u655 0158                      u595 0398  
                    u675 01BC                      u687 00A7                      u697 0145  
                    wreg 0009                     ?_ISR 0070                     l1400 034D  
                   l1410 0375                     l1402 0359                     l1420 038B  
                   l1412 0381                     l1404 035D                     l1422 038D  
                   l1414 0384                     l1406 0364                     l1430 0247  
                   l1510 01E5                     l1502 01C3                     l1416 0385  
                   l1408 0373                     l1440 0273                     l1432 0254  
                   l1520 020B                     l1512 01F2                     l1504 01D0  
                   l1600 0047                     l1370 0402                     l1418 0388  
                   l1450 029B                     l1442 0277                     l1434 0258  
                   l1426 0236                     l1530 022C                     l1522 021A  
                   l1514 01F4                     l1506 01D4                     l1610 0052  
                   l1602 0048                     l1380 041C                     l1372 0404  
                   l1540 038F                     l1460 02A7                     l1452 029E  
                   l1444 027E                     l1436 0265                     l1428 0243  
                   l1524 021C                     l1532 022F                     l1516 0200  
                   l1508 01E1                     l1700 00D3                     l1620 005E  
                   l1612 0055                     l1604 0049                     l1374 0408  
                   l1550 03BE                     l1542 039C                     l1390 0329  
                   l1470 02C7                     l1454 029F                     l1446 028D  
                   l1438 0267                     l1534 0232                     l1526 0228  
                   l1518 0204                     l1710 00DC                     l1702 00D5  
                   l1630 006A                     l1622 0061                     l1614 0058  
                   l1606 004E                     l1376 0411                     l1560 03E6  
                   l1552 03C0                     l1544 03A0                     l1392 032D  
                   l1480 02EA                     l1472 02CB                     l1464 02A9  
                   l1448 028F                     l1456 02A2                     l1536 0234  
                   l1528 022B                     l1384 0446                     l1712 00DD  
                   l1704 00D7                     l1640 0076                     l1632 006D  
                   l1624 0064                     l1616 005B                     l1608 0050  
                   l1378 0416                     l1562 03E8                     l1570 03FB  
                   l1554 03CC                     l1546 03AD                     l1394 033A  
                   l1490 0311                     l1482 02F1                     l1474 02D8  
                   l1466 02B6                     l1458 02A5                     l1730 013F  
                   l1714 00E0                     l1706 00D9                     l1650 0080  
                   l1642 0079                     l1634 0070                     l1626 0067  
                   l1618 005D                     l1580 0439                     l1572 03FE  
                   l1564 03F4                     l1556 03D0                     l1548 03B1  
                   l1396 033E                     l1388 031C                     l1492 0312  
                   l1484 0300                     l1476 02DA                     l1468 02BA  
                   l1740 0183                     l1732 015C                     l1724 00F5  
                   l1716 00E2                     l1708 00DB                     l1660 008A  
                   l1652 0083                     l1644 007C                     l1636 0073  
                   l1628 0069                     l1574 0400                     l1566 03F7  
                   l1558 03D7                     l1398 034B                     l1486 0302  
                   l1494 0315                     l1478 02E6                     l1742 01A3  
                   l1726 00FE                     l1718 00F0                     l1670 009A  
                   l1662 008D                     l1654 0086                     l1646 007E  
                   l1638 0075                     l1590 0035                     l1584 045A  
                   l1568 03F8                     l1496 0318                     l1488 030E  
                   l1736 0161                     l1728 011F                     l1680 00B4  
                   l1672 009C                     l1664 0090                     l1656 0088  
                   l1648 007F                     l1592 0038                     l1578 0457  
                   l1498 031A                     l1738 016A                     l1690 00C6  
                   l1682 00BA                     l1674 00A2                     l1666 0096  
                   l1658 0089                     l1594 003B                     l1586 0030  
                   l1692 00C9                     l1684 00BC                     l1676 00AE  
                   l1668 0098                     l1596 0042                     l1588 0033  
                   l1694 00CC                     l1686 00BE                     l1678 00B1  
                   l1598 0044                     l1696 00CF                     l1688 00C0  
                   l1698 00D1                     _LATA 010C                     _LATB 010D  
                   _LATC 010E                     _T2PR 0494                     _WPUA 020C  
                   _WPUB 020D                     _WPUC 020E                     _main 0030  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   fsr1l 0006                     btemp 007E                     start 001D  
                  ??_ISR 0070                    ?_main 0070                    _T2CON 0495  
                  _LEDON 0457                    i1l386 001B                    u36_20 000B  
                  u36_21 000A                    u37_20 0011                    u37_21 0010  
                  u38_20 0015                    u38_21 0014                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _RXPPS 0E3D  
                  main@i 003A                    status 0003                    wtemp0 007E  
           _switchC_Read 0446          __initialization 001F             __end_of_main 01C3  
                 ??_main 007A                   ?_LEDON 0070                   _ADCON0 0490  
                 _ADCON1 0491         ??_PushSwitchRead 0072                   _ADRESH 048F  
                 _ADRESL 048E                   _CCPR1H 0292                   _CCPR2H 0296  
                 _CCPR1L 0291                   _CCPR2L 0295                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELC 018E                   _LEDOFF 045A  
                 _RC1REG 0199                   _RA4PPS 0E94                   _RC0PPS 0EA0  
                 _RA5PPS 0E95                   _RC1PPS 0EA1                   _RB3PPS 0E9B  
                 _RC1STA 019D                   _RA6PPS 0E96                   _RB4PPS 0E9C  
                 _RC2PPS 0EA2                   _RC3PPS 0EA3                   _RA7PPS 0E97  
                 _RC4PPS 0EA4                   _RC5PPS 0EA5                   i1l1360 000B  
                 i1l1362 0011                   i1l1364 0015                   i1l1366 0016  
                 i1l1358 0006                   i1l1368 0019                   _RC7PPS 0EA7  
                 _OSCCON 009B                   _TX1REG 019A                   _TX1STA 019E  
           _CCPTMRS1bits 029E             _CCPTMRS2bits 029F                   ___wmul 0402  
                 _motorA 038F                   _motorB 031C                   _motorC 02A9  
                 _motorD 0236                   _motorE 01C3  __end_of__initialization 002C  
          __end_of_LEDON 045A               _g_ReadData 007C           __pcstackCOMMON 0070  
           __pidataBANK0 0421                  ??_LEDON 0070           _OPTION_REGbits 0097  
                ?_LEDOFF 0070             _T2CLKCONbits 0497               __pmaintext 0030  
                ?___wmul 0070               __pintentry 0004                  _CCP1CON 0293  
                _CCP2CON 0297                  ?_motorA 0076                  ?_motorB 0076  
                ?_motorC 0076                  ?_motorD 0076                  ?_motorE 0076  
                _SP1BRGH 019C                  _SP1BRGL 019B                  _PWM3DCH 0615  
                _PWM3DCL 0614                  _PWM4DCH 0618                  _PWM4DCL 0617  
                _PWM5DCH 0D94                  _PWM5DCL 0D93                  _PWM6DCH 0DA4  
                _PWM3CON 0616                  _PWM6DCL 0DA3                  _PWM4CON 0619  
                _PWM5CON 0D9B                  _PWM9DCH 061B                  _PWM6CON 0DAB  
                _PWM9DCL 061A                  _PWM5OFH 0D98                  _PWM5OFL 0D97  
                _PWM5PHH 0D92                  _PWM6OFH 0DA8                  _PWM9CON 061C  
                _PWM5PHL 0D91                  _PWM6OFL 0DA7                  _PWM6PHH 0DA2  
                _PWM6PHL 0DA1                  _PWM5PRH 0D96                  _PWM5PRL 0D95  
                _PWM6PRH 0DA6                  _PWM6PRL 0DA5                  __ptext1 0446  
                __ptext2 01C3                  __ptext3 0236                  __ptext4 02A9  
                __ptext5 031C                  __ptext6 038F                  __ptext7 0402  
                __ptext8 0439                  __ptext9 0457                  main@str 0020  
   end_of_initialization 002C                  init_ram 0451                  initloop 0452  
             main@F12362 003C                _PWM5LDCON 0D9F                _PWM6LDCON 0DAF  
              _PWM5OFCON 0DA0                _PWM6OFCON 0DB0                _PORTAbits 000C  
         __end_of_LEDOFF 045D           __end_of___wmul 0421           __end_of_motorA 0402  
         __end_of_motorB 038F           __end_of_motorC 031C           __end_of_motorD 02A9  
         __end_of_motorE 0236      start_initialization 001F              __end_of_ISR 001D  
               ??_LEDOFF 0070            _PWM5LDCONbits 0D9F                 ??___wmul 0074  
            __pdataBANK0 003C            _PWM6LDCONbits 0DAF                 ??_motorA 0078  
               ??_motorB 0078                 ??_motorC 0078                 ??_motorD 0078  
               ??_motorE 0078              __pbssCOMMON 007C                ___latbits 0003  
          __pcstackBANK0 0020            ?_switchC_Read 0070                 _BAUD1CON 019F  
             motorA@duty 0076               motorB@duty 0076               motorC@duty 0076  
             motorD@duty 0076               motorE@duty 0076           ??_switchC_Read 0072  
         ___wmul@product 0074                 _LATAbits 010C                 _LATBbits 010D  
               _LATCbits 010E                 _PIE1bits 0091                 _PIR1bits 0011  
               _PWM5TMRH 0D9A                 _PWM5TMRL 0D99                 _PWM6TMRH 0DAA  
               _PWM6TMRL 0DA9               _ADCON0bits 0490                main@i_596 0038  
      ___wmul@multiplier 0070           _PushSwitchRead 0439                 __ptext10 045A  
 __end_of_PushSwitchRead 0446               _RC1STAbits 019D                 int$flags 007E  
   __end_of_switchC_Read 0451               _INTCONbits 000B                 intlevel1 0000  
        ?_PushSwitchRead 0070               _PWM5CLKCON 0D9E               _PWM6CLKCON 0DAE  
